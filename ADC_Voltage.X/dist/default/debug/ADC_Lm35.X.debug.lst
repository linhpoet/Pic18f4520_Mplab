

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 16 00:25:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  007CCA                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _ledcode
    64  007CCA  003F               	dw	63
    65  007CCC  0006               	dw	6
    66  007CCE  005B               	dw	91
    67  007CD0  004F               	dw	79
    68  007CD2  0066               	dw	102
    69  007CD4  006D               	dw	109
    70  007CD6  007D               	dw	125
    71  007CD8  0007               	dw	7
    72  007CDA  007F               	dw	127
    73  007CDC  006F               	dw	111
    74  0000                     _ADRESL	set	4035
    75  0000                     _ADRESH	set	4036
    76  0000                     _TRISA	set	3986
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISC	set	3988
    79  0000                     _ADCON0	set	4034
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _PORTC	set	3970
    82  0000                     _PORTDbits	set	3971
    83  0000                     _PORTD	set	3971
    84                           
    85                           ; #config settings
    86                           
    87                           	psect	cinit
    88  007D4E                     __pcinit:
    89                           	callstack 0
    90  007D4E                     start_initialization:
    91                           	callstack 0
    92  007D4E                     __initialization:
    93                           	callstack 0
    94                           
    95                           ; Initialize objects allocated to COMRAM (20 bytes)
    96                           ; load TBLPTR registers with __pidataCOMRAM
    97  007D4E  0ECA               	movlw	low __pidataCOMRAM
    98  007D50  6EF6               	movwf	tblptrl,c
    99  007D52  0E7C               	movlw	high __pidataCOMRAM
   100  007D54  6EF7               	movwf	tblptrh,c
   101  007D56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   102  007D58  6EF8               	movwf	tblptru,c
   103  007D5A  EE00  F001         	lfsr	0,__pdataCOMRAM
   104  007D5E  EE10 F014          	lfsr	1,20
   105  007D62                     copy_data0:
   106  007D62  0009               	tblrd		*+
   107  007D64  CFF5 FFEE          	movff	tablat,postinc0
   108  007D68  50E5               	movf	postdec1,w,c
   109  007D6A  50E1               	movf	fsr1l,w,c
   110  007D6C  E1FA               	bnz	copy_data0
   111                           
   112                           ; Clear objects allocated to COMRAM (12 bytes)
   113  007D6E  EE00  F015         	lfsr	0,__pbssCOMRAM
   114  007D72  0E0C               	movlw	12
   115  007D74                     clear_0:
   116  007D74  6AEE               	clrf	postinc0,c
   117  007D76  06E8               	decf	wreg,f,c
   118  007D78  E1FD               	bnz	clear_0
   119  007D7A                     end_of_initialization:
   120                           	callstack 0
   121  007D7A                     __end_of__initialization:
   122                           	callstack 0
   123  007D7A  0100               	movlb	0
   124  007D7C  EFC0  F03E         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127  000015                     __pbssCOMRAM:
   128                           	callstack 0
   129  000015                     _tempC:
   130                           	callstack 0
   131  000015                     	ds	2
   132  000017                     _tempCTemp:
   133                           	callstack 0
   134  000017                     	ds	2
   135  000019                     _hangdv:
   136                           	callstack 0
   137  000019                     	ds	2
   138  00001B                     _hangchuc:
   139                           	callstack 0
   140  00001B                     	ds	2
   141  00001D                     _hangtram:
   142                           	callstack 0
   143  00001D                     	ds	2
   144  00001F                     _hangnghin:
   145                           	callstack 0
   146  00001F                     	ds	2
   147                           
   148                           	psect	dataCOMRAM
   149  000001                     __pdataCOMRAM:
   150                           	callstack 0
   151  000001                     _ledcode:
   152                           	callstack 0
   153  000001                     	ds	20
   154                           
   155                           	psect	cstackCOMRAM
   156  000021                     __pcstackCOMRAM:
   157                           	callstack 0
   158  000021                     ?___lwdiv:
   159                           	callstack 0
   160  000021                     ?___lwmod:
   161                           	callstack 0
   162  000021                     HangDV@hangdv:
   163                           	callstack 0
   164  000021                     HangChuc@hangchuc:
   165                           	callstack 0
   166  000021                     HangTram@hangtram:
   167                           	callstack 0
   168  000021                     HangNghin@hangnghin:
   169                           	callstack 0
   170  000021                     ___lwdiv@dividend:
   171                           	callstack 0
   172  000021                     ___lwmod@dividend:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x0
   176  000021                     	ds	2
   177  000023                     ___lwdiv@divisor:
   178                           	callstack 0
   179  000023                     ___lwmod@divisor:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x2
   183  000023                     	ds	2
   184  000025                     ___lwmod@counter:
   185                           	callstack 0
   186  000025                     ___lwdiv@quotient:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x4
   190  000025                     	ds	2
   191  000027                     ___lwdiv@counter:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x6
   195  000027                     	ds	1
   196  000028                     Lcd_Display@tempC:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x7
   200  000028                     	ds	2
   201  00002A                     ??_Lcd_Display:
   202                           
   203                           ; 1 bytes @ 0x9
   204  00002A                     	ds	1
   205  00002B                     ??_main:
   206                           
   207                           ; 1 bytes @ 0xA
   208  00002B                     	ds	2
   209                           
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 161 in file "newmain.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   229 ;;      Params:         0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0
   231 ;;      Temps:          2       0       0       0       0       0       0
   232 ;;      Totals:         2       0       0       0       0       0       0
   233 ;;Total ram usage:        2 bytes
   234 ;; Hardware stack levels required when called: 2
   235 ;; This function calls:
   236 ;;		_AN0_Config
   237 ;;		_Lcd_Display
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text0
   244  007D80                     __ptext0:
   245                           	callstack 0
   246  007D80                     _main:
   247                           	callstack 29
   248  007D80                     
   249                           ;newmain.c: 163:     TRISC = 0;
   250  007D80  0E00               	movlw	0
   251  007D82  6E94               	movwf	148,c	;volatile
   252                           
   253                           ;newmain.c: 164:     TRISD = 0;
   254  007D84  0E00               	movlw	0
   255  007D86  6E95               	movwf	149,c	;volatile
   256                           
   257                           ;newmain.c: 165:     PORTC = 0;
   258  007D88  0E00               	movlw	0
   259  007D8A  6E82               	movwf	130,c	;volatile
   260                           
   261                           ;newmain.c: 166:     PORTD = 0;
   262  007D8C  0E00               	movlw	0
   263  007D8E  6E83               	movwf	131,c	;volatile
   264  007D90                     
   265                           ;newmain.c: 169:     TRISA = 0xff;
   266  007D90  6892               	setf	146,c	;volatile
   267                           
   268                           ;newmain.c: 170:     ADRESH = 0;
   269  007D92  0E00               	movlw	0
   270  007D94  6EC4               	movwf	196,c	;volatile
   271                           
   272                           ;newmain.c: 171:     ADRESL = 0;
   273  007D96  0E00               	movlw	0
   274  007D98  6EC3               	movwf	195,c	;volatile
   275  007D9A                     l915:
   276                           
   277                           ;newmain.c: 173:     AN0_Config();
   278  007D9A  EC5E  F03E         	call	_AN0_Config	;wreg free
   279  007D9E                     l68:
   280  007D9E  B2C2               	btfsc	194,1,c	;volatile
   281  007DA0  EFD4  F03E         	goto	u141
   282  007DA4  EFD6  F03E         	goto	u140
   283  007DA8                     u141:
   284  007DA8  EFCF  F03E         	goto	l68
   285  007DAC                     u140:
   286  007DAC                     
   287                           ;newmain.c: 175:     tempC = ((ADRESH << 8) | ADRESL);
   288  007DAC  50C3               	movf	195,w,c	;volatile
   289  007DAE  CFC4 F02B          	movff	4036,??_main	;volatile
   290  007DB2  6A2C               	clrf	(??_main+1)^0,c
   291  007DB4  C02B  F02C         	movff	??_main,??_main+1
   292  007DB8  6A2B               	clrf	??_main^0,c
   293  007DBA  102B               	iorwf	??_main^0,w,c
   294  007DBC  6E15               	movwf	_tempC^0,c
   295  007DBE  502C               	movf	(??_main+1)^0,w,c
   296  007DC0  6E16               	movwf	(_tempC+1)^0,c
   297  007DC2                     
   298                           ;newmain.c: 177:     Lcd_Display(tempC);
   299  007DC2  C015  F028         	movff	_tempC,Lcd_Display@tempC
   300  007DC6  C016  F029         	movff	_tempC+1,Lcd_Display@tempC+1
   301  007DCA  EC57  F03F         	call	_Lcd_Display	;wreg free
   302  007DCE  EFCD  F03E         	goto	l915
   303  007DD2  EF00  F000         	goto	start
   304  007DD6                     __end_of_main:
   305                           	callstack 0
   306                           
   307 ;; *************** function _Lcd_Display *****************
   308 ;; Defined at:
   309 ;;		line 95 in file "newmain.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  tempC           2    7[COMRAM] int 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   323 ;;      Params:         2       0       0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0       0       0
   325 ;;      Temps:          1       0       0       0       0       0       0
   326 ;;      Totals:         3       0       0       0       0       0       0
   327 ;;Total ram usage:        3 bytes
   328 ;; Hardware stack levels used: 1
   329 ;; Hardware stack levels required when called: 1
   330 ;; This function calls:
   331 ;;		_HangChuc
   332 ;;		_HangDV
   333 ;;		_HangNghin
   334 ;;		_HangTram
   335 ;;		___lwdiv
   336 ;;		___lwmod
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text1
   343  007EAE                     __ptext1:
   344                           	callstack 0
   345  007EAE                     _Lcd_Display:
   346                           	callstack 29
   347  007EAE                     
   348                           ;newmain.c: 95: void Lcd_Display(tempC);newmain.c: 96: {;newmain.c: 97:     tempCTemp = 
      +                          tempC;
   349  007EAE  C028  F017         	movff	Lcd_Display@tempC,_tempCTemp
   350  007EB2  C029  F018         	movff	Lcd_Display@tempC+1,_tempCTemp+1
   351                           
   352                           ;newmain.c: 99:         tempCTemp = tempC;
   353  007EB6  C028  F017         	movff	Lcd_Display@tempC,_tempCTemp
   354  007EBA  C029  F018         	movff	Lcd_Display@tempC+1,_tempCTemp+1
   355  007EBE                     
   356                           ;newmain.c: 100:         hangdv = tempCTemp%10;
   357  007EBE  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   358  007EC2  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   359  007EC6  0E00               	movlw	0
   360  007EC8  6E24               	movwf	(___lwmod@divisor+1)^0,c
   361  007ECA  0E0A               	movlw	10
   362  007ECC  6E23               	movwf	___lwmod@divisor^0,c
   363  007ECE  ECEB  F03E         	call	___lwmod	;wreg free
   364  007ED2  C021  F019         	movff	?___lwmod,_hangdv
   365  007ED6  C022  F01A         	movff	?___lwmod+1,_hangdv+1
   366                           
   367                           ;newmain.c: 101:         tempCTemp = (tempCTemp - hangdv)/10;
   368  007EDA  5019               	movf	_hangdv^0,w,c
   369  007EDC  5C17               	subwf	_tempCTemp^0,w,c
   370  007EDE  6E21               	movwf	___lwdiv@dividend^0,c
   371  007EE0  501A               	movf	(_hangdv+1)^0,w,c
   372  007EE2  5818               	subwfb	(_tempCTemp+1)^0,w,c
   373  007EE4  6E22               	movwf	(___lwdiv@dividend+1)^0,c
   374  007EE6  0E00               	movlw	0
   375  007EE8  6E24               	movwf	(___lwdiv@divisor+1)^0,c
   376  007EEA  0E0A               	movlw	10
   377  007EEC  6E23               	movwf	___lwdiv@divisor^0,c
   378  007EEE  EC1D  F03F         	call	___lwdiv	;wreg free
   379  007EF2  C021  F017         	movff	?___lwdiv,_tempCTemp
   380  007EF6  C022  F018         	movff	?___lwdiv+1,_tempCTemp+1
   381                           
   382                           ;newmain.c: 102:         hangchuc = tempCTemp%10;
   383  007EFA  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   384  007EFE  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   385  007F02  0E00               	movlw	0
   386  007F04  6E24               	movwf	(___lwmod@divisor+1)^0,c
   387  007F06  0E0A               	movlw	10
   388  007F08  6E23               	movwf	___lwmod@divisor^0,c
   389  007F0A  ECEB  F03E         	call	___lwmod	;wreg free
   390  007F0E  C021  F01B         	movff	?___lwmod,_hangchuc
   391  007F12  C022  F01C         	movff	?___lwmod+1,_hangchuc+1
   392                           
   393                           ;newmain.c: 103:         tempCTemp = (tempCTemp - hangchuc)/10;
   394  007F16  501B               	movf	_hangchuc^0,w,c
   395  007F18  5C17               	subwf	_tempCTemp^0,w,c
   396  007F1A  6E21               	movwf	___lwdiv@dividend^0,c
   397  007F1C  501C               	movf	(_hangchuc+1)^0,w,c
   398  007F1E  5818               	subwfb	(_tempCTemp+1)^0,w,c
   399  007F20  6E22               	movwf	(___lwdiv@dividend+1)^0,c
   400  007F22  0E00               	movlw	0
   401  007F24  6E24               	movwf	(___lwdiv@divisor+1)^0,c
   402  007F26  0E0A               	movlw	10
   403  007F28  6E23               	movwf	___lwdiv@divisor^0,c
   404  007F2A  EC1D  F03F         	call	___lwdiv	;wreg free
   405  007F2E  C021  F017         	movff	?___lwdiv,_tempCTemp
   406  007F32  C022  F018         	movff	?___lwdiv+1,_tempCTemp+1
   407                           
   408                           ;newmain.c: 104:         hangtram = tempCTemp%10;
   409  007F36  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   410  007F3A  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   411  007F3E  0E00               	movlw	0
   412  007F40  6E24               	movwf	(___lwmod@divisor+1)^0,c
   413  007F42  0E0A               	movlw	10
   414  007F44  6E23               	movwf	___lwmod@divisor^0,c
   415  007F46  ECEB  F03E         	call	___lwmod	;wreg free
   416  007F4A  C021  F01D         	movff	?___lwmod,_hangtram
   417  007F4E  C022  F01E         	movff	?___lwmod+1,_hangtram+1
   418                           
   419                           ;newmain.c: 105:         tempCTemp = (tempCTemp - hangtram)/10;
   420  007F52  501D               	movf	_hangtram^0,w,c
   421  007F54  5C17               	subwf	_tempCTemp^0,w,c
   422  007F56  6E21               	movwf	___lwdiv@dividend^0,c
   423  007F58  501E               	movf	(_hangtram+1)^0,w,c
   424  007F5A  5818               	subwfb	(_tempCTemp+1)^0,w,c
   425  007F5C  6E22               	movwf	(___lwdiv@dividend+1)^0,c
   426  007F5E  0E00               	movlw	0
   427  007F60  6E24               	movwf	(___lwdiv@divisor+1)^0,c
   428  007F62  0E0A               	movlw	10
   429  007F64  6E23               	movwf	___lwdiv@divisor^0,c
   430  007F66  EC1D  F03F         	call	___lwdiv	;wreg free
   431  007F6A  C021  F017         	movff	?___lwdiv,_tempCTemp
   432  007F6E  C022  F018         	movff	?___lwdiv+1,_tempCTemp+1
   433                           
   434                           ;newmain.c: 106:         hangnghin = tempCTemp%10;
   435  007F72  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   436  007F76  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   437  007F7A  0E00               	movlw	0
   438  007F7C  6E24               	movwf	(___lwmod@divisor+1)^0,c
   439  007F7E  0E0A               	movlw	10
   440  007F80  6E23               	movwf	___lwmod@divisor^0,c
   441  007F82  ECEB  F03E         	call	___lwmod	;wreg free
   442  007F86  C021  F01F         	movff	?___lwmod,_hangnghin
   443  007F8A  C022  F020         	movff	?___lwmod+1,_hangnghin+1
   444  007F8E                     
   445                           ;newmain.c: 108:             HangDV(hangdv);
   446  007F8E  C019  F021         	movff	_hangdv,HangDV@hangdv
   447  007F92  C01A  F022         	movff	_hangdv+1,HangDV@hangdv+1
   448  007F96  EC7D  F03E         	call	_HangDV	;wreg free
   449  007F9A                     
   450                           ;newmain.c: 109:             _delay((unsigned long)((5)*(20000000/4000.0)));
   451  007F9A  0E21               	movlw	33
   452  007F9C  6E2A               	movwf	??_Lcd_Display^0,c
   453  007F9E  0E76               	movlw	118
   454  007FA0                     u157:
   455  007FA0  2EE8               	decfsz	wreg,f,c
   456  007FA2  D7FE               	bra	u157
   457  007FA4  2E2A               	decfsz	??_Lcd_Display^0,f,c
   458  007FA6  D7FC               	bra	u157
   459  007FA8  D000               	nop2	
   460  007FAA                     
   461                           ;newmain.c: 110:             HangChuc(hangchuc);
   462  007FAA  C01B  F021         	movff	_hangchuc,HangChuc@hangchuc
   463  007FAE  C01C  F022         	movff	_hangchuc+1,HangChuc@hangchuc+1
   464  007FB2  EC6F  F03E         	call	_HangChuc	;wreg free
   465  007FB6                     
   466                           ;newmain.c: 111:             _delay((unsigned long)((5)*(20000000/4000.0)));
   467  007FB6  0E21               	movlw	33
   468  007FB8  6E2A               	movwf	??_Lcd_Display^0,c
   469  007FBA  0E76               	movlw	118
   470  007FBC                     u167:
   471  007FBC  2EE8               	decfsz	wreg,f,c
   472  007FBE  D7FE               	bra	u167
   473  007FC0  2E2A               	decfsz	??_Lcd_Display^0,f,c
   474  007FC2  D7FC               	bra	u167
   475  007FC4  D000               	nop2	
   476  007FC6                     
   477                           ;newmain.c: 112:             HangTram(hangtram);
   478  007FC6  C01D  F021         	movff	_hangtram,HangTram@hangtram
   479  007FCA  C01E  F022         	movff	_hangtram+1,HangTram@hangtram+1
   480  007FCE  EC99  F03E         	call	_HangTram	;wreg free
   481  007FD2                     
   482                           ;newmain.c: 113:             _delay((unsigned long)((5)*(20000000/4000.0)));
   483  007FD2  0E21               	movlw	33
   484  007FD4  6E2A               	movwf	??_Lcd_Display^0,c
   485  007FD6  0E76               	movlw	118
   486  007FD8                     u177:
   487  007FD8  2EE8               	decfsz	wreg,f,c
   488  007FDA  D7FE               	bra	u177
   489  007FDC  2E2A               	decfsz	??_Lcd_Display^0,f,c
   490  007FDE  D7FC               	bra	u177
   491  007FE0  D000               	nop2	
   492  007FE2                     
   493                           ;newmain.c: 114:             HangNghin(hangnghin);
   494  007FE2  C01F  F021         	movff	_hangnghin,HangNghin@hangnghin
   495  007FE6  C020  F022         	movff	_hangnghin+1,HangNghin@hangnghin+1
   496  007FEA  EC8B  F03E         	call	_HangNghin	;wreg free
   497  007FEE                     
   498                           ;newmain.c: 115:             _delay((unsigned long)((5)*(20000000/4000.0)));
   499  007FEE  0E21               	movlw	33
   500  007FF0  6E2A               	movwf	??_Lcd_Display^0,c
   501  007FF2  0E76               	movlw	118
   502  007FF4                     u187:
   503  007FF4  2EE8               	decfsz	wreg,f,c
   504  007FF6  D7FE               	bra	u187
   505  007FF8  2E2A               	decfsz	??_Lcd_Display^0,f,c
   506  007FFA  D7FC               	bra	u187
   507  007FFC  D000               	nop2	
   508  007FFE  0012               	return		;funcret
   509  008000                     __end_of_Lcd_Display:
   510                           	callstack 0
   511                           
   512 ;; *************** function ___lwmod *****************
   513 ;; Defined at:
   514 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  dividend        2    0[COMRAM] unsigned int 
   517 ;;  divisor         2    2[COMRAM] unsigned int 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  counter         1    4[COMRAM] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  2    0[COMRAM] unsigned int 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   529 ;;      Params:         4       0       0       0       0       0       0
   530 ;;      Locals:         1       0       0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0       0       0
   532 ;;      Totals:         5       0       0       0       0       0       0
   533 ;;Total ram usage:        5 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_Lcd_Display
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text2
   543  007DD6                     __ptext2:
   544                           	callstack 0
   545  007DD6                     ___lwmod:
   546                           	callstack 29
   547  007DD6  5023               	movf	___lwmod@divisor^0,w,c
   548  007DD8  1024               	iorwf	(___lwmod@divisor+1)^0,w,c
   549  007DDA  B4D8               	btfsc	status,2,c
   550  007DDC  EFF2  F03E         	goto	u111
   551  007DE0  EFF4  F03E         	goto	u110
   552  007DE4                     u111:
   553  007DE4  EF18  F03F         	goto	l577
   554  007DE8                     u110:
   555  007DE8  0E01               	movlw	1
   556  007DEA  6E25               	movwf	___lwmod@counter^0,c
   557  007DEC  EFFC  F03E         	goto	l881
   558  007DF0                     l879:
   559  007DF0  90D8               	bcf	status,0,c
   560  007DF2  3623               	rlcf	___lwmod@divisor^0,f,c
   561  007DF4  3624               	rlcf	(___lwmod@divisor+1)^0,f,c
   562  007DF6  2A25               	incf	___lwmod@counter^0,f,c
   563  007DF8                     l881:
   564  007DF8  AE24               	btfss	(___lwmod@divisor+1)^0,7,c
   565  007DFA  EF01  F03F         	goto	u121
   566  007DFE  EF03  F03F         	goto	u120
   567  007E02                     u121:
   568  007E02  EFF8  F03E         	goto	l879
   569  007E06                     u120:
   570  007E06                     l883:
   571  007E06  5023               	movf	___lwmod@divisor^0,w,c
   572  007E08  5C21               	subwf	___lwmod@dividend^0,w,c
   573  007E0A  5024               	movf	(___lwmod@divisor+1)^0,w,c
   574  007E0C  5822               	subwfb	(___lwmod@dividend+1)^0,w,c
   575  007E0E  A0D8               	btfss	status,0,c
   576  007E10  EF0C  F03F         	goto	u131
   577  007E14  EF0E  F03F         	goto	u130
   578  007E18                     u131:
   579  007E18  EF12  F03F         	goto	l887
   580  007E1C                     u130:
   581  007E1C  5023               	movf	___lwmod@divisor^0,w,c
   582  007E1E  5E21               	subwf	___lwmod@dividend^0,f,c
   583  007E20  5024               	movf	(___lwmod@divisor+1)^0,w,c
   584  007E22  5A22               	subwfb	(___lwmod@dividend+1)^0,f,c
   585  007E24                     l887:
   586  007E24  90D8               	bcf	status,0,c
   587  007E26  3224               	rrcf	(___lwmod@divisor+1)^0,f,c
   588  007E28  3223               	rrcf	___lwmod@divisor^0,f,c
   589  007E2A  2E25               	decfsz	___lwmod@counter^0,f,c
   590  007E2C  EF03  F03F         	goto	l883
   591  007E30                     l577:
   592  007E30  C021  F021         	movff	___lwmod@dividend,?___lwmod
   593  007E34  C022  F022         	movff	___lwmod@dividend+1,?___lwmod+1
   594  007E38  0012               	return		;funcret
   595  007E3A                     __end_of___lwmod:
   596                           	callstack 0
   597                           
   598 ;; *************** function ___lwdiv *****************
   599 ;; Defined at:
   600 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  dividend        2    0[COMRAM] unsigned int 
   603 ;;  divisor         2    2[COMRAM] unsigned int 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  quotient        2    4[COMRAM] unsigned int 
   606 ;;  counter         1    6[COMRAM] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2    0[COMRAM] unsigned int 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   616 ;;      Params:         4       0       0       0       0       0       0
   617 ;;      Locals:         3       0       0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0
   619 ;;      Totals:         7       0       0       0       0       0       0
   620 ;;Total ram usage:        7 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_Lcd_Display
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text3
   630  007E3A                     __ptext3:
   631                           	callstack 0
   632  007E3A                     ___lwdiv:
   633                           	callstack 29
   634  007E3A  0E00               	movlw	0
   635  007E3C  6E26               	movwf	(___lwdiv@quotient+1)^0,c
   636  007E3E  0E00               	movlw	0
   637  007E40  6E25               	movwf	___lwdiv@quotient^0,c
   638  007E42  5023               	movf	___lwdiv@divisor^0,w,c
   639  007E44  1024               	iorwf	(___lwdiv@divisor+1)^0,w,c
   640  007E46  B4D8               	btfsc	status,2,c
   641  007E48  EF28  F03F         	goto	u81
   642  007E4C  EF2A  F03F         	goto	u80
   643  007E50                     u81:
   644  007E50  EF52  F03F         	goto	l567
   645  007E54                     u80:
   646  007E54  0E01               	movlw	1
   647  007E56  6E27               	movwf	___lwdiv@counter^0,c
   648  007E58  EF32  F03F         	goto	l861
   649  007E5C                     l859:
   650  007E5C  90D8               	bcf	status,0,c
   651  007E5E  3623               	rlcf	___lwdiv@divisor^0,f,c
   652  007E60  3624               	rlcf	(___lwdiv@divisor+1)^0,f,c
   653  007E62  2A27               	incf	___lwdiv@counter^0,f,c
   654  007E64                     l861:
   655  007E64  AE24               	btfss	(___lwdiv@divisor+1)^0,7,c
   656  007E66  EF37  F03F         	goto	u91
   657  007E6A  EF39  F03F         	goto	u90
   658  007E6E                     u91:
   659  007E6E  EF2E  F03F         	goto	l859
   660  007E72                     u90:
   661  007E72                     l863:
   662  007E72  90D8               	bcf	status,0,c
   663  007E74  3625               	rlcf	___lwdiv@quotient^0,f,c
   664  007E76  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
   665  007E78  5023               	movf	___lwdiv@divisor^0,w,c
   666  007E7A  5C21               	subwf	___lwdiv@dividend^0,w,c
   667  007E7C  5024               	movf	(___lwdiv@divisor+1)^0,w,c
   668  007E7E  5822               	subwfb	(___lwdiv@dividend+1)^0,w,c
   669  007E80  A0D8               	btfss	status,0,c
   670  007E82  EF45  F03F         	goto	u101
   671  007E86  EF47  F03F         	goto	u100
   672  007E8A                     u101:
   673  007E8A  EF4C  F03F         	goto	l871
   674  007E8E                     u100:
   675  007E8E  5023               	movf	___lwdiv@divisor^0,w,c
   676  007E90  5E21               	subwf	___lwdiv@dividend^0,f,c
   677  007E92  5024               	movf	(___lwdiv@divisor+1)^0,w,c
   678  007E94  5A22               	subwfb	(___lwdiv@dividend+1)^0,f,c
   679  007E96  8025               	bsf	___lwdiv@quotient^0,0,c
   680  007E98                     l871:
   681  007E98  90D8               	bcf	status,0,c
   682  007E9A  3224               	rrcf	(___lwdiv@divisor+1)^0,f,c
   683  007E9C  3223               	rrcf	___lwdiv@divisor^0,f,c
   684  007E9E  2E27               	decfsz	___lwdiv@counter^0,f,c
   685  007EA0  EF39  F03F         	goto	l863
   686  007EA4                     l567:
   687  007EA4  C025  F021         	movff	___lwdiv@quotient,?___lwdiv
   688  007EA8  C026  F022         	movff	___lwdiv@quotient+1,?___lwdiv+1
   689  007EAC  0012               	return		;funcret
   690  007EAE                     __end_of___lwdiv:
   691                           	callstack 0
   692                           
   693 ;; *************** function _HangTram *****************
   694 ;; Defined at:
   695 ;;		line 133 in file "newmain.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  hangtram        2    0[COMRAM] int 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  2    0[COMRAM] int 
   702 ;; Registers used:
   703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   709 ;;      Params:         2       0       0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0
   712 ;;      Totals:         2       0       0       0       0       0       0
   713 ;;Total ram usage:        2 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_Lcd_Display
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text4
   723  007D32                     __ptext4:
   724                           	callstack 0
   725  007D32                     _HangTram:
   726                           	callstack 29
   727  007D32                     
   728                           ;newmain.c: 133: int HangTram(int hangtram);newmain.c: 134: {;newmain.c: 135:     PORTD 
      +                          = 0xff;
   729  007D32  6883               	setf	131,c	;volatile
   730                           
   731                           ;newmain.c: 136:     PORTDbits.RD1 = 0;
   732  007D34  9283               	bcf	131,1,c	;volatile
   733  007D36                     
   734                           ;newmain.c: 137:     PORTC = ledcode[hangtram];
   735  007D36  90D8               	bcf	status,0,c
   736  007D38  3421               	rlcf	HangTram@hangtram^0,w,c
   737  007D3A  6ED9               	movwf	fsr2l,c
   738  007D3C  3422               	rlcf	(HangTram@hangtram+1)^0,w,c
   739  007D3E  6EDA               	movwf	fsr2h,c
   740  007D40  0E01               	movlw	low _ledcode
   741  007D42  26D9               	addwf	fsr2l,f,c
   742  007D44  0E00               	movlw	high _ledcode
   743  007D46  22DA               	addwfc	fsr2h,f,c
   744  007D48  50DF               	movf	indf2,w,c
   745  007D4A  6E82               	movwf	130,c	;volatile
   746  007D4C  0012               	return		;funcret
   747  007D4E                     __end_of_HangTram:
   748                           	callstack 0
   749                           
   750 ;; *************** function _HangNghin *****************
   751 ;; Defined at:
   752 ;;		line 140 in file "newmain.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  hangnghin       2    0[COMRAM] int 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2    0[COMRAM] int 
   759 ;; Registers used:
   760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   766 ;;      Params:         2       0       0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0
   769 ;;      Totals:         2       0       0       0       0       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_Lcd_Display
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text5
   780  007D16                     __ptext5:
   781                           	callstack 0
   782  007D16                     _HangNghin:
   783                           	callstack 29
   784  007D16                     
   785                           ;newmain.c: 140: int HangNghin(int hangnghin);newmain.c: 141: {;newmain.c: 142:     PORT
      +                          D = 0xff;
   786  007D16  6883               	setf	131,c	;volatile
   787                           
   788                           ;newmain.c: 143:     PORTDbits.RD0 = 0;
   789  007D18  9083               	bcf	131,0,c	;volatile
   790  007D1A                     
   791                           ;newmain.c: 144:     PORTC = ledcode[hangnghin];
   792  007D1A  90D8               	bcf	status,0,c
   793  007D1C  3421               	rlcf	HangNghin@hangnghin^0,w,c
   794  007D1E  6ED9               	movwf	fsr2l,c
   795  007D20  3422               	rlcf	(HangNghin@hangnghin+1)^0,w,c
   796  007D22  6EDA               	movwf	fsr2h,c
   797  007D24  0E01               	movlw	low _ledcode
   798  007D26  26D9               	addwf	fsr2l,f,c
   799  007D28  0E00               	movlw	high _ledcode
   800  007D2A  22DA               	addwfc	fsr2h,f,c
   801  007D2C  50DF               	movf	indf2,w,c
   802  007D2E  6E82               	movwf	130,c	;volatile
   803  007D30  0012               	return		;funcret
   804  007D32                     __end_of_HangNghin:
   805                           	callstack 0
   806                           
   807 ;; *************** function _HangDV *****************
   808 ;; Defined at:
   809 ;;		line 119 in file "newmain.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  hangdv          2    0[COMRAM] int 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2    0[COMRAM] int 
   816 ;; Registers used:
   817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   823 ;;      Params:         2       0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0
   826 ;;      Totals:         2       0       0       0       0       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_Lcd_Display
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text6
   837  007CFA                     __ptext6:
   838                           	callstack 0
   839  007CFA                     _HangDV:
   840                           	callstack 29
   841  007CFA                     
   842                           ;newmain.c: 119: int HangDV(int hangdv);newmain.c: 120: {;newmain.c: 121:     PORTD = 0x
      +                          ff;
   843  007CFA  6883               	setf	131,c	;volatile
   844                           
   845                           ;newmain.c: 122:     PORTDbits.RD3 = 0;
   846  007CFC  9683               	bcf	131,3,c	;volatile
   847  007CFE                     
   848                           ;newmain.c: 123:     PORTC = ledcode[hangdv];
   849  007CFE  90D8               	bcf	status,0,c
   850  007D00  3421               	rlcf	HangDV@hangdv^0,w,c
   851  007D02  6ED9               	movwf	fsr2l,c
   852  007D04  3422               	rlcf	(HangDV@hangdv+1)^0,w,c
   853  007D06  6EDA               	movwf	fsr2h,c
   854  007D08  0E01               	movlw	low _ledcode
   855  007D0A  26D9               	addwf	fsr2l,f,c
   856  007D0C  0E00               	movlw	high _ledcode
   857  007D0E  22DA               	addwfc	fsr2h,f,c
   858  007D10  50DF               	movf	indf2,w,c
   859  007D12  6E82               	movwf	130,c	;volatile
   860  007D14  0012               	return		;funcret
   861  007D16                     __end_of_HangDV:
   862                           	callstack 0
   863                           
   864 ;; *************** function _HangChuc *****************
   865 ;; Defined at:
   866 ;;		line 126 in file "newmain.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  hangchuc        2    0[COMRAM] int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  2    0[COMRAM] int 
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         2       0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0
   883 ;;      Totals:         2       0       0       0       0       0       0
   884 ;;Total ram usage:        2 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_Lcd_Display
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text7
   894  007CDE                     __ptext7:
   895                           	callstack 0
   896  007CDE                     _HangChuc:
   897                           	callstack 29
   898  007CDE                     
   899                           ;newmain.c: 126: int HangChuc(int hangchuc);newmain.c: 127: {;newmain.c: 128:     PORTD 
      +                          = 0xff;
   900  007CDE  6883               	setf	131,c	;volatile
   901                           
   902                           ;newmain.c: 129:     PORTDbits.RD2 = 0;
   903  007CE0  9483               	bcf	131,2,c	;volatile
   904  007CE2                     
   905                           ;newmain.c: 130:     PORTC = ledcode[hangchuc];
   906  007CE2  90D8               	bcf	status,0,c
   907  007CE4  3421               	rlcf	HangChuc@hangchuc^0,w,c
   908  007CE6  6ED9               	movwf	fsr2l,c
   909  007CE8  3422               	rlcf	(HangChuc@hangchuc+1)^0,w,c
   910  007CEA  6EDA               	movwf	fsr2h,c
   911  007CEC  0E01               	movlw	low _ledcode
   912  007CEE  26D9               	addwf	fsr2l,f,c
   913  007CF0  0E00               	movlw	high _ledcode
   914  007CF2  22DA               	addwfc	fsr2h,f,c
   915  007CF4  50DF               	movf	indf2,w,c
   916  007CF6  6E82               	movwf	130,c	;volatile
   917  007CF8  0012               	return		;funcret
   918  007CFA                     __end_of_HangChuc:
   919                           	callstack 0
   920                           
   921 ;; *************** function _AN0_Config *****************
   922 ;; Defined at:
   923 ;;		line 147 in file "newmain.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   937 ;;      Params:         0       0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text8
   951  007CBC                     __ptext8:
   952                           	callstack 0
   953  007CBC                     _AN0_Config:
   954                           	callstack 30
   955  007CBC                     
   956                           ;newmain.c: 150:     ADCON0bits.ADON = 1;
   957  007CBC  80C2               	bsf	194,0,c	;volatile
   958  007CBE                     
   959                           ;newmain.c: 152:     ADCON0 &= ~(1<<2);
   960  007CBE  94C2               	bcf	194,2,c	;volatile
   961                           
   962                           ;newmain.c: 153:     ADCON0 &= ~(1<<3);
   963  007CC0  96C2               	bcf	194,3,c	;volatile
   964                           
   965                           ;newmain.c: 154:     ADCON0 &= ~(1<<4);
   966  007CC2  98C2               	bcf	194,4,c	;volatile
   967                           
   968                           ;newmain.c: 155:     ADCON0 &= ~(1<<5);
   969  007CC4  9AC2               	bcf	194,5,c	;volatile
   970                           
   971                           ;newmain.c: 157:     ADCON0 |= 1<<1;
   972  007CC6  82C2               	bsf	194,1,c	;volatile
   973  007CC8  0012               	return		;funcret
   974  007CCA                     __end_of_AN0_Config:
   975                           	callstack 0
   976  0000                     
   977                           	psect	rparam
   978  0000                     
   979                           	psect	idloc
   980                           
   981                           ;Config register IDLOC0 @ 0x200000
   982                           ;	unspecified, using default values
   983  200000                     	org	2097152
   984  200000  FF                 	db	255
   985                           
   986                           ;Config register IDLOC1 @ 0x200001
   987                           ;	unspecified, using default values
   988  200001                     	org	2097153
   989  200001  FF                 	db	255
   990                           
   991                           ;Config register IDLOC2 @ 0x200002
   992                           ;	unspecified, using default values
   993  200002                     	org	2097154
   994  200002  FF                 	db	255
   995                           
   996                           ;Config register IDLOC3 @ 0x200003
   997                           ;	unspecified, using default values
   998  200003                     	org	2097155
   999  200003  FF                 	db	255
  1000                           
  1001                           ;Config register IDLOC4 @ 0x200004
  1002                           ;	unspecified, using default values
  1003  200004                     	org	2097156
  1004  200004  FF                 	db	255
  1005                           
  1006                           ;Config register IDLOC5 @ 0x200005
  1007                           ;	unspecified, using default values
  1008  200005                     	org	2097157
  1009  200005  FF                 	db	255
  1010                           
  1011                           ;Config register IDLOC6 @ 0x200006
  1012                           ;	unspecified, using default values
  1013  200006                     	org	2097158
  1014  200006  FF                 	db	255
  1015                           
  1016                           ;Config register IDLOC7 @ 0x200007
  1017                           ;	unspecified, using default values
  1018  200007                     	org	2097159
  1019  200007  FF                 	db	255
  1020                           
  1021                           	psect	config
  1022                           
  1023                           ; Padding undefined space
  1024  300000                     	org	3145728
  1025  300000  FF                 	db	255
  1026                           
  1027                           ;Config register CONFIG1H @ 0x300001
  1028                           ;	Oscillator Selection bits
  1029                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  1030                           ;	Fail-Safe Clock Monitor Enable bit
  1031                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1032                           ;	Internal/External Oscillator Switchover bit
  1033                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1034  300001                     	org	3145729
  1035  300001  07                 	db	7
  1036                           
  1037                           ;Config register CONFIG2L @ 0x300002
  1038                           ;	Power-up Timer Enable bit
  1039                           ;	PWRT = OFF, PWRT disabled
  1040                           ;	Brown-out Reset Enable bits
  1041                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1042                           ;	Brown Out Reset Voltage bits
  1043                           ;	BORV = 3, Minimum setting
  1044  300002                     	org	3145730
  1045  300002  1F                 	db	31
  1046                           
  1047                           ;Config register CONFIG2H @ 0x300003
  1048                           ;	Watchdog Timer Enable bit
  1049                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1050                           ;	Watchdog Timer Postscale Select bits
  1051                           ;	WDTPS = 32768, 1:32768
  1052  300003                     	org	3145731
  1053  300003  1E                 	db	30
  1054                           
  1055                           ; Padding undefined space
  1056  300004                     	org	3145732
  1057  300004  FF                 	db	255
  1058                           
  1059                           ;Config register CONFIG3H @ 0x300005
  1060                           ;	CCP2 MUX bit
  1061                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1062                           ;	PORTB A/D Enable bit
  1063                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1064                           ;	Low-Power Timer1 Oscillator Enable bit
  1065                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1066                           ;	MCLR Pin Enable bit
  1067                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1068  300005                     	org	3145733
  1069  300005  01                 	db	1
  1070                           
  1071                           ;Config register CONFIG4L @ 0x300006
  1072                           ;	Stack Full/Underflow Reset Enable bit
  1073                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1074                           ;	Single-Supply ICSP Enable bit
  1075                           ;	LVP = OFF, Single-Supply ICSP disabled
  1076                           ;	Extended Instruction Set Enable bit
  1077                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1078                           ;	Background Debugger Enable bit
  1079                           ;	DEBUG = 0x1, unprogrammed default
  1080  300006                     	org	3145734
  1081  300006  80                 	db	128
  1082                           
  1083                           ; Padding undefined space
  1084  300007                     	org	3145735
  1085  300007  FF                 	db	255
  1086                           
  1087                           ;Config register CONFIG5L @ 0x300008
  1088                           ;	Code Protection bit
  1089                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1090                           ;	Code Protection bit
  1091                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1092                           ;	Code Protection bit
  1093                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1094                           ;	Code Protection bit
  1095                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1096  300008                     	org	3145736
  1097  300008  0F                 	db	15
  1098                           
  1099                           ;Config register CONFIG5H @ 0x300009
  1100                           ;	Boot Block Code Protection bit
  1101                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1102                           ;	Data EEPROM Code Protection bit
  1103                           ;	CPD = OFF, Data EEPROM not code-protected
  1104  300009                     	org	3145737
  1105  300009  C0                 	db	192
  1106                           
  1107                           ;Config register CONFIG6L @ 0x30000A
  1108                           ;	Write Protection bit
  1109                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1110                           ;	Write Protection bit
  1111                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1112                           ;	Write Protection bit
  1113                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1114                           ;	Write Protection bit
  1115                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1116  30000A                     	org	3145738
  1117  30000A  0F                 	db	15
  1118                           
  1119                           ;Config register CONFIG6H @ 0x30000B
  1120                           ;	Configuration Register Write Protection bit
  1121                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1122                           ;	Boot Block Write Protection bit
  1123                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1124                           ;	Data EEPROM Write Protection bit
  1125                           ;	WRTD = OFF, Data EEPROM not write-protected
  1126  30000B                     	org	3145739
  1127  30000B  E0                 	db	224
  1128                           
  1129                           ;Config register CONFIG7L @ 0x30000C
  1130                           ;	Table Read Protection bit
  1131                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1132                           ;	Table Read Protection bit
  1133                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1134                           ;	Table Read Protection bit
  1135                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1136                           ;	Table Read Protection bit
  1137                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1138  30000C                     	org	3145740
  1139  30000C  0F                 	db	15
  1140                           
  1141                           ;Config register CONFIG7H @ 0x30000D
  1142                           ;	Boot Block Table Read Protection bit
  1143                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1144  30000D                     	org	3145741
  1145  30000D  40                 	db	64
  1146                           tosu	equ	0xFFF
  1147                           tosh	equ	0xFFE
  1148                           tosl	equ	0xFFD
  1149                           stkptr	equ	0xFFC
  1150                           pclatu	equ	0xFFB
  1151                           pclath	equ	0xFFA
  1152                           pcl	equ	0xFF9
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodh	equ	0xFF4
  1158                           prodl	equ	0xFF3
  1159                           indf0	equ	0xFEF
  1160                           postinc0	equ	0xFEE
  1161                           postdec0	equ	0xFED
  1162                           preinc0	equ	0xFEC
  1163                           plusw0	equ	0xFEB
  1164                           fsr0h	equ	0xFEA
  1165                           fsr0l	equ	0xFE9
  1166                           wreg	equ	0xFE8
  1167                           indf1	equ	0xFE7
  1168                           postinc1	equ	0xFE6
  1169                           postdec1	equ	0xFE5
  1170                           preinc1	equ	0xFE4
  1171                           plusw1	equ	0xFE3
  1172                           fsr1h	equ	0xFE2
  1173                           fsr1l	equ	0xFE1
  1174                           bsr	equ	0xFE0
  1175                           indf2	equ	0xFDF
  1176                           postinc2	equ	0xFDE
  1177                           postdec2	equ	0xFDD
  1178                           preinc2	equ	0xFDC
  1179                           plusw2	equ	0xFDB
  1180                           fsr2h	equ	0xFDA
  1181                           fsr2l	equ	0xFD9
  1182                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Lcd_Display
    _Lcd_Display->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1897
                                             10 COMRAM     2     2      0
                         _AN0_Config
                        _Lcd_Display
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display                                          3     1      2    1897
                                              7 COMRAM     3     1      2
                           _HangChuc
                             _HangDV
                          _HangNghin
                           _HangTram
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _HangTram                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HangNghin                                            2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HangDV                                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HangChuc                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _AN0_Config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AN0_Config
   _Lcd_Display
     _HangChuc
     _HangDV
     _HangNghin
     _HangTram
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      2C       1       34.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      15        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 16 00:25:03 2021

                     l50 7D14                       l53 7CF8                       l62 7CC8  
                     l47 7FFE                       l56 7D4C                       l59 7D30  
                     l68 7D9E                       u80 7E54                       u81 7E50  
                     u90 7E72                       u91 7E6E      __size_of_AN0_Config 000E  
                    l901 7FB6                      l574 7EAC                      l823 7CBC  
                    l567 7EA4                      l903 7FC6                      l911 7D80  
                    l584 7E38                      l825 7CBE                      l841 7CDE  
                    l577 7E30                      l905 7FD2                      l913 7D90  
                    l843 7CE2                      l851 7D1A                      l907 7FE2  
                    l915 7D9A                      l837 7CFA                      l845 7D32  
                    l861 7E64                      l853 7E3A                      l909 7FEE  
                    l917 7DAC                      l839 7CFE                      l847 7D36  
                    l871 7E98                      l863 7E72                      l855 7E42  
                    l919 7DC2                      l849 7D16                      l873 7E9E  
                    l865 7E78                      l857 7E54                      l881 7DF8  
                    l867 7E8E                      l859 7E5C                      l883 7E06  
                    l875 7DD6                      l891 7EAE                      l869 7E96  
                    l885 7E1C                      l877 7DE8                      l893 7EBE  
                    l887 7E24                      l879 7DF0                      l895 7F8E  
                    l889 7E2A                      l897 7F9A                      l899 7FAA  
                    u100 7E8E                      u101 7E8A                      u110 7DE8  
                    u111 7DE4                      u120 7E06                      u121 7E02  
                    u130 7E1C                      u131 7E18                      u140 7DAC  
                    u141 7DA8                      u157 7FA0                      u167 7FBC  
                    u177 7FD8                      u187 7FF4                      wreg 000FE8  
    __end_of_Lcd_Display 8000                     _main 7D80                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000                    ?_main 0021  
        __end_of___lwdiv 7EAE          __end_of___lwmod 7E3A       HangNghin@hangnghin 0021  
                  _PORTC 000F82                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISC 000F94                    _TRISD 000F95         HangTram@hangtram 0021  
                  _tempC 0015                    tablat 000FF5                    status 000FD8  
       __end_of_HangChuc 7CFA         __end_of_HangTram 7D4E          __initialization 7D4E  
           __end_of_main 7DD6              _Lcd_Display 7EAE       __size_of_HangNghin 001C  
                 ??_main 002B            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADRESH 000FC4                   _ADRESL 000FC3             ??_AN0_Config 0021  
                 _HangDV 7CFA                   _hangdv 0019                ??___lwdiv 0025  
              ??___lwmod 0025                   clear_0 7D74                   isa$std 000001  
     __end_of_AN0_Config 7CCA             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 7D7A        __end_of_HangNghin 7D32            ___rparam_used 000001  
         __pcstackCOMRAM 0021                ?_HangChuc 0021                ?_HangTram 0021  
                ?_HangDV 0021               ??_HangChuc 0023               ??_HangTram 0023  
        __size_of_HangDV 001C                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 7E3A                  ___lwmod 7DD6                  __pcinit 7D4E  
                __ramtop 0600             ?_Lcd_Display 0028                  __ptext0 7D80  
                __ptext1 7EAE                  __ptext2 7DD6                  __ptext3 7E3A  
                __ptext4 7D32                  __ptext5 7D16                  __ptext6 7CFA  
                __ptext7 7CDE                  __ptext8 7CBC                  _ledcode 0001  
   end_of_initialization 7D7A                  postdec1 000FE5                  postinc0 000FEE  
              _PORTDbits 000F83           __end_of_HangDV 7D16                _HangNghin 7D16  
           HangDV@hangdv 0021            __pidataCOMRAM 7CCA      start_initialization 7D4E  
      __size_of_HangChuc 001C        __size_of_HangTram 001C                 ??_HangDV 0023  
             ?_HangNghin 0021     __size_of_Lcd_Display 0152              __pbssCOMRAM 0015  
       ___lwdiv@dividend 0021                 ?___lwdiv 0021                _hangnghin 001F  
               ?___lwmod 0021         ___lwdiv@quotient 0025                _tempCTemp 0017  
            ??_HangNghin 0023               _ADCON0bits 000FC2                 _HangChuc 7CDE  
               _HangTram 7D32                copy_data0 7D62               _AN0_Config 7CBC  
               __Hrparam 0000                 __Lrparam 0000         __size_of___lwdiv 0074  
       __size_of___lwmod 0064          ___lwdiv@divisor 0023          ___lwdiv@counter 0027  
               _hangchuc 001B                 _hangtram 001D         Lcd_Display@tempC 0028  
          __size_of_main 0056         HangChuc@hangchuc 0021                 isa$xinst 000000  
            ?_AN0_Config 0021         ___lwmod@dividend 0021            ??_Lcd_Display 002A  
        ___lwmod@divisor 0023          ___lwmod@counter 0025  
