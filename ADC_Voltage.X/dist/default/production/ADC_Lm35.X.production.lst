

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 16 00:27:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  007CCA                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _ledcode
    64  007CCA  003F               	dw	63
    65  007CCC  0006               	dw	6
    66  007CCE  005B               	dw	91
    67  007CD0  004F               	dw	79
    68  007CD2  0066               	dw	102
    69  007CD4  006D               	dw	109
    70  007CD6  007D               	dw	125
    71  007CD8  0007               	dw	7
    72  007CDA  007F               	dw	127
    73  007CDC  006F               	dw	111
    74  0000                     _ADRESL	set	4035
    75  0000                     _ADRESH	set	4036
    76  0000                     _TRISA	set	3986
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISC	set	3988
    79  0000                     _ADCON1	set	4033
    80  0000                     _ADCON0	set	4034
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _PORTC	set	3970
    83  0000                     _PORTDbits	set	3971
    84  0000                     _PORTD	set	3971
    85                           
    86                           ; #config settings
    87                           
    88                           	psect	cinit
    89  007D4E                     __pcinit:
    90                           	callstack 0
    91  007D4E                     start_initialization:
    92                           	callstack 0
    93  007D4E                     __initialization:
    94                           	callstack 0
    95                           
    96                           ; Initialize objects allocated to COMRAM (20 bytes)
    97                           ; load TBLPTR registers with __pidataCOMRAM
    98  007D4E  0ECA               	movlw	low __pidataCOMRAM
    99  007D50  6EF6               	movwf	tblptrl,c
   100  007D52  0E7C               	movlw	high __pidataCOMRAM
   101  007D54  6EF7               	movwf	tblptrh,c
   102  007D56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   103  007D58  6EF8               	movwf	tblptru,c
   104  007D5A  EE00  F001         	lfsr	0,__pdataCOMRAM
   105  007D5E  EE10 F014          	lfsr	1,20
   106  007D62                     copy_data0:
   107  007D62  0009               	tblrd		*+
   108  007D64  CFF5 FFEE          	movff	tablat,postinc0
   109  007D68  50E5               	movf	postdec1,w,c
   110  007D6A  50E1               	movf	fsr1l,w,c
   111  007D6C  E1FA               	bnz	copy_data0
   112                           
   113                           ; Clear objects allocated to COMRAM (12 bytes)
   114  007D6E  EE00  F015         	lfsr	0,__pbssCOMRAM
   115  007D72  0E0C               	movlw	12
   116  007D74                     clear_0:
   117  007D74  6AEE               	clrf	postinc0,c
   118  007D76  06E8               	decf	wreg,f,c
   119  007D78  E1FD               	bnz	clear_0
   120  007D7A                     end_of_initialization:
   121                           	callstack 0
   122  007D7A                     __end_of__initialization:
   123                           	callstack 0
   124  007D7A  0100               	movlb	0
   125  007D7C  EFC0  F03E         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128  000015                     __pbssCOMRAM:
   129                           	callstack 0
   130  000015                     _tempC:
   131                           	callstack 0
   132  000015                     	ds	2
   133  000017                     _tempCTemp:
   134                           	callstack 0
   135  000017                     	ds	2
   136  000019                     _hangdv:
   137                           	callstack 0
   138  000019                     	ds	2
   139  00001B                     _hangchuc:
   140                           	callstack 0
   141  00001B                     	ds	2
   142  00001D                     _hangtram:
   143                           	callstack 0
   144  00001D                     	ds	2
   145  00001F                     _hangnghin:
   146                           	callstack 0
   147  00001F                     	ds	2
   148                           
   149                           	psect	dataCOMRAM
   150  000001                     __pdataCOMRAM:
   151                           	callstack 0
   152  000001                     _ledcode:
   153                           	callstack 0
   154  000001                     	ds	20
   155                           
   156                           	psect	cstackCOMRAM
   157  000021                     __pcstackCOMRAM:
   158                           	callstack 0
   159  000021                     ?___lwdiv:
   160                           	callstack 0
   161  000021                     ?___lwmod:
   162                           	callstack 0
   163  000021                     HangDV@hangdv:
   164                           	callstack 0
   165  000021                     HangChuc@hangchuc:
   166                           	callstack 0
   167  000021                     HangTram@hangtram:
   168                           	callstack 0
   169  000021                     HangNghin@hangnghin:
   170                           	callstack 0
   171  000021                     ___lwdiv@dividend:
   172                           	callstack 0
   173  000021                     ___lwmod@dividend:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x0
   177  000021                     	ds	2
   178  000023                     ___lwdiv@divisor:
   179                           	callstack 0
   180  000023                     ___lwmod@divisor:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x2
   184  000023                     	ds	2
   185  000025                     ___lwmod@counter:
   186                           	callstack 0
   187  000025                     ___lwdiv@quotient:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x4
   191  000025                     	ds	2
   192  000027                     ___lwdiv@counter:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x6
   196  000027                     	ds	1
   197  000028                     Lcd_Display@tempC:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x7
   201  000028                     	ds	2
   202  00002A                     ??_Lcd_Display:
   203                           
   204                           ; 1 bytes @ 0x9
   205  00002A                     	ds	1
   206  00002B                     ??_main:
   207                           
   208                           ; 1 bytes @ 0xA
   209  00002B                     	ds	2
   210                           
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 163 in file "newmain.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   230 ;;      Params:         0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0
   232 ;;      Temps:          2       0       0       0       0       0       0
   233 ;;      Totals:         2       0       0       0       0       0       0
   234 ;;Total ram usage:        2 bytes
   235 ;; Hardware stack levels required when called: 2
   236 ;; This function calls:
   237 ;;		_AN0_Config
   238 ;;		_Lcd_Display
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245  007D80                     __ptext0:
   246                           	callstack 0
   247  007D80                     _main:
   248                           	callstack 29
   249  007D80                     
   250                           ;newmain.c: 165:     TRISC = 0;
   251  007D80  0E00               	movlw	0
   252  007D82  6E94               	movwf	148,c	;volatile
   253                           
   254                           ;newmain.c: 166:     TRISD = 0;
   255  007D84  0E00               	movlw	0
   256  007D86  6E95               	movwf	149,c	;volatile
   257                           
   258                           ;newmain.c: 167:     PORTC = 0;
   259  007D88  0E00               	movlw	0
   260  007D8A  6E82               	movwf	130,c	;volatile
   261                           
   262                           ;newmain.c: 168:     PORTD = 0;
   263  007D8C  0E00               	movlw	0
   264  007D8E  6E83               	movwf	131,c	;volatile
   265  007D90                     
   266                           ;newmain.c: 171:     TRISA = 0xff;
   267  007D90  6892               	setf	146,c	;volatile
   268                           
   269                           ;newmain.c: 172:     ADRESH = 0;
   270  007D92  0E00               	movlw	0
   271  007D94  6EC4               	movwf	196,c	;volatile
   272                           
   273                           ;newmain.c: 173:     ADRESL = 0;
   274  007D96  0E00               	movlw	0
   275  007D98  6EC3               	movwf	195,c	;volatile
   276  007D9A                     l919:
   277                           
   278                           ;newmain.c: 175:     AN0_Config();
   279  007D9A  EC5C  F03E         	call	_AN0_Config	;wreg free
   280  007D9E                     l70:
   281  007D9E  B2C2               	btfsc	194,1,c	;volatile
   282  007DA0  EFD4  F03E         	goto	u141
   283  007DA4  EFD6  F03E         	goto	u140
   284  007DA8                     u141:
   285  007DA8  EFCF  F03E         	goto	l70
   286  007DAC                     u140:
   287  007DAC                     
   288                           ;newmain.c: 177:     tempC = ((ADRESH << 8) | ADRESL);
   289  007DAC  50C3               	movf	195,w,c	;volatile
   290  007DAE  CFC4 F02B          	movff	4036,??_main	;volatile
   291  007DB2  6A2C               	clrf	(??_main+1)^0,c
   292  007DB4  C02B  F02C         	movff	??_main,??_main+1
   293  007DB8  6A2B               	clrf	??_main^0,c
   294  007DBA  102B               	iorwf	??_main^0,w,c
   295  007DBC  6E15               	movwf	_tempC^0,c
   296  007DBE  502C               	movf	(??_main+1)^0,w,c
   297  007DC0  6E16               	movwf	(_tempC+1)^0,c
   298  007DC2                     
   299                           ;newmain.c: 179:     Lcd_Display(tempC);
   300  007DC2  C015  F028         	movff	_tempC,Lcd_Display@tempC
   301  007DC6  C016  F029         	movff	_tempC+1,Lcd_Display@tempC+1
   302  007DCA  EC57  F03F         	call	_Lcd_Display	;wreg free
   303  007DCE  EFCD  F03E         	goto	l919
   304  007DD2  EF00  F000         	goto	start
   305  007DD6                     __end_of_main:
   306                           	callstack 0
   307                           
   308 ;; *************** function _Lcd_Display *****************
   309 ;; Defined at:
   310 ;;		line 95 in file "newmain.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  tempC           2    7[COMRAM] int 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   324 ;;      Params:         2       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0
   326 ;;      Temps:          1       0       0       0       0       0       0
   327 ;;      Totals:         3       0       0       0       0       0       0
   328 ;;Total ram usage:        3 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; Hardware stack levels required when called: 1
   331 ;; This function calls:
   332 ;;		_HangChuc
   333 ;;		_HangDV
   334 ;;		_HangNghin
   335 ;;		_HangTram
   336 ;;		___lwdiv
   337 ;;		___lwmod
   338 ;; This function is called by:
   339 ;;		_main
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text1
   344  007EAE                     __ptext1:
   345                           	callstack 0
   346  007EAE                     _Lcd_Display:
   347                           	callstack 29
   348  007EAE                     
   349                           ;newmain.c: 95: void Lcd_Display(tempC);newmain.c: 96: {;newmain.c: 97:     tempCTemp = 
      +                          tempC;
   350  007EAE  C028  F017         	movff	Lcd_Display@tempC,_tempCTemp
   351  007EB2  C029  F018         	movff	Lcd_Display@tempC+1,_tempCTemp+1
   352                           
   353                           ;newmain.c: 99:         tempCTemp = tempC;
   354  007EB6  C028  F017         	movff	Lcd_Display@tempC,_tempCTemp
   355  007EBA  C029  F018         	movff	Lcd_Display@tempC+1,_tempCTemp+1
   356  007EBE                     
   357                           ;newmain.c: 100:         hangdv = tempCTemp%10;
   358  007EBE  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   359  007EC2  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   360  007EC6  0E00               	movlw	0
   361  007EC8  6E24               	movwf	(___lwmod@divisor+1)^0,c
   362  007ECA  0E0A               	movlw	10
   363  007ECC  6E23               	movwf	___lwmod@divisor^0,c
   364  007ECE  ECEB  F03E         	call	___lwmod	;wreg free
   365  007ED2  C021  F019         	movff	?___lwmod,_hangdv
   366  007ED6  C022  F01A         	movff	?___lwmod+1,_hangdv+1
   367                           
   368                           ;newmain.c: 101:         tempCTemp = (tempCTemp - hangdv)/10;
   369  007EDA  5019               	movf	_hangdv^0,w,c
   370  007EDC  5C17               	subwf	_tempCTemp^0,w,c
   371  007EDE  6E21               	movwf	___lwdiv@dividend^0,c
   372  007EE0  501A               	movf	(_hangdv+1)^0,w,c
   373  007EE2  5818               	subwfb	(_tempCTemp+1)^0,w,c
   374  007EE4  6E22               	movwf	(___lwdiv@dividend+1)^0,c
   375  007EE6  0E00               	movlw	0
   376  007EE8  6E24               	movwf	(___lwdiv@divisor+1)^0,c
   377  007EEA  0E0A               	movlw	10
   378  007EEC  6E23               	movwf	___lwdiv@divisor^0,c
   379  007EEE  EC1D  F03F         	call	___lwdiv	;wreg free
   380  007EF2  C021  F017         	movff	?___lwdiv,_tempCTemp
   381  007EF6  C022  F018         	movff	?___lwdiv+1,_tempCTemp+1
   382                           
   383                           ;newmain.c: 102:         hangchuc = tempCTemp%10;
   384  007EFA  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   385  007EFE  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   386  007F02  0E00               	movlw	0
   387  007F04  6E24               	movwf	(___lwmod@divisor+1)^0,c
   388  007F06  0E0A               	movlw	10
   389  007F08  6E23               	movwf	___lwmod@divisor^0,c
   390  007F0A  ECEB  F03E         	call	___lwmod	;wreg free
   391  007F0E  C021  F01B         	movff	?___lwmod,_hangchuc
   392  007F12  C022  F01C         	movff	?___lwmod+1,_hangchuc+1
   393                           
   394                           ;newmain.c: 103:         tempCTemp = (tempCTemp - hangchuc)/10;
   395  007F16  501B               	movf	_hangchuc^0,w,c
   396  007F18  5C17               	subwf	_tempCTemp^0,w,c
   397  007F1A  6E21               	movwf	___lwdiv@dividend^0,c
   398  007F1C  501C               	movf	(_hangchuc+1)^0,w,c
   399  007F1E  5818               	subwfb	(_tempCTemp+1)^0,w,c
   400  007F20  6E22               	movwf	(___lwdiv@dividend+1)^0,c
   401  007F22  0E00               	movlw	0
   402  007F24  6E24               	movwf	(___lwdiv@divisor+1)^0,c
   403  007F26  0E0A               	movlw	10
   404  007F28  6E23               	movwf	___lwdiv@divisor^0,c
   405  007F2A  EC1D  F03F         	call	___lwdiv	;wreg free
   406  007F2E  C021  F017         	movff	?___lwdiv,_tempCTemp
   407  007F32  C022  F018         	movff	?___lwdiv+1,_tempCTemp+1
   408                           
   409                           ;newmain.c: 104:         hangtram = tempCTemp%10;
   410  007F36  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   411  007F3A  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   412  007F3E  0E00               	movlw	0
   413  007F40  6E24               	movwf	(___lwmod@divisor+1)^0,c
   414  007F42  0E0A               	movlw	10
   415  007F44  6E23               	movwf	___lwmod@divisor^0,c
   416  007F46  ECEB  F03E         	call	___lwmod	;wreg free
   417  007F4A  C021  F01D         	movff	?___lwmod,_hangtram
   418  007F4E  C022  F01E         	movff	?___lwmod+1,_hangtram+1
   419                           
   420                           ;newmain.c: 105:         tempCTemp = (tempCTemp - hangtram)/10;
   421  007F52  501D               	movf	_hangtram^0,w,c
   422  007F54  5C17               	subwf	_tempCTemp^0,w,c
   423  007F56  6E21               	movwf	___lwdiv@dividend^0,c
   424  007F58  501E               	movf	(_hangtram+1)^0,w,c
   425  007F5A  5818               	subwfb	(_tempCTemp+1)^0,w,c
   426  007F5C  6E22               	movwf	(___lwdiv@dividend+1)^0,c
   427  007F5E  0E00               	movlw	0
   428  007F60  6E24               	movwf	(___lwdiv@divisor+1)^0,c
   429  007F62  0E0A               	movlw	10
   430  007F64  6E23               	movwf	___lwdiv@divisor^0,c
   431  007F66  EC1D  F03F         	call	___lwdiv	;wreg free
   432  007F6A  C021  F017         	movff	?___lwdiv,_tempCTemp
   433  007F6E  C022  F018         	movff	?___lwdiv+1,_tempCTemp+1
   434                           
   435                           ;newmain.c: 106:         hangnghin = tempCTemp%10;
   436  007F72  C017  F021         	movff	_tempCTemp,___lwmod@dividend
   437  007F76  C018  F022         	movff	_tempCTemp+1,___lwmod@dividend+1
   438  007F7A  0E00               	movlw	0
   439  007F7C  6E24               	movwf	(___lwmod@divisor+1)^0,c
   440  007F7E  0E0A               	movlw	10
   441  007F80  6E23               	movwf	___lwmod@divisor^0,c
   442  007F82  ECEB  F03E         	call	___lwmod	;wreg free
   443  007F86  C021  F01F         	movff	?___lwmod,_hangnghin
   444  007F8A  C022  F020         	movff	?___lwmod+1,_hangnghin+1
   445  007F8E                     
   446                           ;newmain.c: 108:             HangDV(hangdv);
   447  007F8E  C019  F021         	movff	_hangdv,HangDV@hangdv
   448  007F92  C01A  F022         	movff	_hangdv+1,HangDV@hangdv+1
   449  007F96  EC7D  F03E         	call	_HangDV	;wreg free
   450  007F9A                     
   451                           ;newmain.c: 109:             _delay((unsigned long)((5)*(20000000/4000.0)));
   452  007F9A  0E21               	movlw	33
   453  007F9C  6E2A               	movwf	??_Lcd_Display^0,c
   454  007F9E  0E76               	movlw	118
   455  007FA0                     u157:
   456  007FA0  2EE8               	decfsz	wreg,f,c
   457  007FA2  D7FE               	bra	u157
   458  007FA4  2E2A               	decfsz	??_Lcd_Display^0,f,c
   459  007FA6  D7FC               	bra	u157
   460  007FA8  D000               	nop2	
   461  007FAA                     
   462                           ;newmain.c: 110:             HangChuc(hangchuc);
   463  007FAA  C01B  F021         	movff	_hangchuc,HangChuc@hangchuc
   464  007FAE  C01C  F022         	movff	_hangchuc+1,HangChuc@hangchuc+1
   465  007FB2  EC6F  F03E         	call	_HangChuc	;wreg free
   466  007FB6                     
   467                           ;newmain.c: 111:             _delay((unsigned long)((5)*(20000000/4000.0)));
   468  007FB6  0E21               	movlw	33
   469  007FB8  6E2A               	movwf	??_Lcd_Display^0,c
   470  007FBA  0E76               	movlw	118
   471  007FBC                     u167:
   472  007FBC  2EE8               	decfsz	wreg,f,c
   473  007FBE  D7FE               	bra	u167
   474  007FC0  2E2A               	decfsz	??_Lcd_Display^0,f,c
   475  007FC2  D7FC               	bra	u167
   476  007FC4  D000               	nop2	
   477  007FC6                     
   478                           ;newmain.c: 112:             HangTram(hangtram);
   479  007FC6  C01D  F021         	movff	_hangtram,HangTram@hangtram
   480  007FCA  C01E  F022         	movff	_hangtram+1,HangTram@hangtram+1
   481  007FCE  EC99  F03E         	call	_HangTram	;wreg free
   482  007FD2                     
   483                           ;newmain.c: 113:             _delay((unsigned long)((5)*(20000000/4000.0)));
   484  007FD2  0E21               	movlw	33
   485  007FD4  6E2A               	movwf	??_Lcd_Display^0,c
   486  007FD6  0E76               	movlw	118
   487  007FD8                     u177:
   488  007FD8  2EE8               	decfsz	wreg,f,c
   489  007FDA  D7FE               	bra	u177
   490  007FDC  2E2A               	decfsz	??_Lcd_Display^0,f,c
   491  007FDE  D7FC               	bra	u177
   492  007FE0  D000               	nop2	
   493  007FE2                     
   494                           ;newmain.c: 114:             HangNghin(hangnghin);
   495  007FE2  C01F  F021         	movff	_hangnghin,HangNghin@hangnghin
   496  007FE6  C020  F022         	movff	_hangnghin+1,HangNghin@hangnghin+1
   497  007FEA  EC8B  F03E         	call	_HangNghin	;wreg free
   498  007FEE                     
   499                           ;newmain.c: 115:             _delay((unsigned long)((5)*(20000000/4000.0)));
   500  007FEE  0E21               	movlw	33
   501  007FF0  6E2A               	movwf	??_Lcd_Display^0,c
   502  007FF2  0E76               	movlw	118
   503  007FF4                     u187:
   504  007FF4  2EE8               	decfsz	wreg,f,c
   505  007FF6  D7FE               	bra	u187
   506  007FF8  2E2A               	decfsz	??_Lcd_Display^0,f,c
   507  007FFA  D7FC               	bra	u187
   508  007FFC  D000               	nop2	
   509  007FFE  0012               	return		;funcret
   510  008000                     __end_of_Lcd_Display:
   511                           	callstack 0
   512                           
   513 ;; *************** function ___lwmod *****************
   514 ;; Defined at:
   515 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  dividend        2    0[COMRAM] unsigned int 
   518 ;;  divisor         2    2[COMRAM] unsigned int 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  counter         1    4[COMRAM] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  2    0[COMRAM] unsigned int 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   530 ;;      Params:         4       0       0       0       0       0       0
   531 ;;      Locals:         1       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0
   533 ;;      Totals:         5       0       0       0       0       0       0
   534 ;;Total ram usage:        5 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_Lcd_Display
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544  007DD6                     __ptext2:
   545                           	callstack 0
   546  007DD6                     ___lwmod:
   547                           	callstack 29
   548  007DD6  5023               	movf	___lwmod@divisor^0,w,c
   549  007DD8  1024               	iorwf	(___lwmod@divisor+1)^0,w,c
   550  007DDA  B4D8               	btfsc	status,2,c
   551  007DDC  EFF2  F03E         	goto	u111
   552  007DE0  EFF4  F03E         	goto	u110
   553  007DE4                     u111:
   554  007DE4  EF18  F03F         	goto	l579
   555  007DE8                     u110:
   556  007DE8  0E01               	movlw	1
   557  007DEA  6E25               	movwf	___lwmod@counter^0,c
   558  007DEC  EFFC  F03E         	goto	l885
   559  007DF0                     l883:
   560  007DF0  90D8               	bcf	status,0,c
   561  007DF2  3623               	rlcf	___lwmod@divisor^0,f,c
   562  007DF4  3624               	rlcf	(___lwmod@divisor+1)^0,f,c
   563  007DF6  2A25               	incf	___lwmod@counter^0,f,c
   564  007DF8                     l885:
   565  007DF8  AE24               	btfss	(___lwmod@divisor+1)^0,7,c
   566  007DFA  EF01  F03F         	goto	u121
   567  007DFE  EF03  F03F         	goto	u120
   568  007E02                     u121:
   569  007E02  EFF8  F03E         	goto	l883
   570  007E06                     u120:
   571  007E06                     l887:
   572  007E06  5023               	movf	___lwmod@divisor^0,w,c
   573  007E08  5C21               	subwf	___lwmod@dividend^0,w,c
   574  007E0A  5024               	movf	(___lwmod@divisor+1)^0,w,c
   575  007E0C  5822               	subwfb	(___lwmod@dividend+1)^0,w,c
   576  007E0E  A0D8               	btfss	status,0,c
   577  007E10  EF0C  F03F         	goto	u131
   578  007E14  EF0E  F03F         	goto	u130
   579  007E18                     u131:
   580  007E18  EF12  F03F         	goto	l891
   581  007E1C                     u130:
   582  007E1C  5023               	movf	___lwmod@divisor^0,w,c
   583  007E1E  5E21               	subwf	___lwmod@dividend^0,f,c
   584  007E20  5024               	movf	(___lwmod@divisor+1)^0,w,c
   585  007E22  5A22               	subwfb	(___lwmod@dividend+1)^0,f,c
   586  007E24                     l891:
   587  007E24  90D8               	bcf	status,0,c
   588  007E26  3224               	rrcf	(___lwmod@divisor+1)^0,f,c
   589  007E28  3223               	rrcf	___lwmod@divisor^0,f,c
   590  007E2A  2E25               	decfsz	___lwmod@counter^0,f,c
   591  007E2C  EF03  F03F         	goto	l887
   592  007E30                     l579:
   593  007E30  C021  F021         	movff	___lwmod@dividend,?___lwmod
   594  007E34  C022  F022         	movff	___lwmod@dividend+1,?___lwmod+1
   595  007E38  0012               	return		;funcret
   596  007E3A                     __end_of___lwmod:
   597                           	callstack 0
   598                           
   599 ;; *************** function ___lwdiv *****************
   600 ;; Defined at:
   601 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  dividend        2    0[COMRAM] unsigned int 
   604 ;;  divisor         2    2[COMRAM] unsigned int 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  quotient        2    4[COMRAM] unsigned int 
   607 ;;  counter         1    6[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  2    0[COMRAM] unsigned int 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   617 ;;      Params:         4       0       0       0       0       0       0
   618 ;;      Locals:         3       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0
   620 ;;      Totals:         7       0       0       0       0       0       0
   621 ;;Total ram usage:        7 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_Lcd_Display
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text3
   631  007E3A                     __ptext3:
   632                           	callstack 0
   633  007E3A                     ___lwdiv:
   634                           	callstack 29
   635  007E3A  0E00               	movlw	0
   636  007E3C  6E26               	movwf	(___lwdiv@quotient+1)^0,c
   637  007E3E  0E00               	movlw	0
   638  007E40  6E25               	movwf	___lwdiv@quotient^0,c
   639  007E42  5023               	movf	___lwdiv@divisor^0,w,c
   640  007E44  1024               	iorwf	(___lwdiv@divisor+1)^0,w,c
   641  007E46  B4D8               	btfsc	status,2,c
   642  007E48  EF28  F03F         	goto	u81
   643  007E4C  EF2A  F03F         	goto	u80
   644  007E50                     u81:
   645  007E50  EF52  F03F         	goto	l569
   646  007E54                     u80:
   647  007E54  0E01               	movlw	1
   648  007E56  6E27               	movwf	___lwdiv@counter^0,c
   649  007E58  EF32  F03F         	goto	l865
   650  007E5C                     l863:
   651  007E5C  90D8               	bcf	status,0,c
   652  007E5E  3623               	rlcf	___lwdiv@divisor^0,f,c
   653  007E60  3624               	rlcf	(___lwdiv@divisor+1)^0,f,c
   654  007E62  2A27               	incf	___lwdiv@counter^0,f,c
   655  007E64                     l865:
   656  007E64  AE24               	btfss	(___lwdiv@divisor+1)^0,7,c
   657  007E66  EF37  F03F         	goto	u91
   658  007E6A  EF39  F03F         	goto	u90
   659  007E6E                     u91:
   660  007E6E  EF2E  F03F         	goto	l863
   661  007E72                     u90:
   662  007E72                     l867:
   663  007E72  90D8               	bcf	status,0,c
   664  007E74  3625               	rlcf	___lwdiv@quotient^0,f,c
   665  007E76  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
   666  007E78  5023               	movf	___lwdiv@divisor^0,w,c
   667  007E7A  5C21               	subwf	___lwdiv@dividend^0,w,c
   668  007E7C  5024               	movf	(___lwdiv@divisor+1)^0,w,c
   669  007E7E  5822               	subwfb	(___lwdiv@dividend+1)^0,w,c
   670  007E80  A0D8               	btfss	status,0,c
   671  007E82  EF45  F03F         	goto	u101
   672  007E86  EF47  F03F         	goto	u100
   673  007E8A                     u101:
   674  007E8A  EF4C  F03F         	goto	l875
   675  007E8E                     u100:
   676  007E8E  5023               	movf	___lwdiv@divisor^0,w,c
   677  007E90  5E21               	subwf	___lwdiv@dividend^0,f,c
   678  007E92  5024               	movf	(___lwdiv@divisor+1)^0,w,c
   679  007E94  5A22               	subwfb	(___lwdiv@dividend+1)^0,f,c
   680  007E96  8025               	bsf	___lwdiv@quotient^0,0,c
   681  007E98                     l875:
   682  007E98  90D8               	bcf	status,0,c
   683  007E9A  3224               	rrcf	(___lwdiv@divisor+1)^0,f,c
   684  007E9C  3223               	rrcf	___lwdiv@divisor^0,f,c
   685  007E9E  2E27               	decfsz	___lwdiv@counter^0,f,c
   686  007EA0  EF39  F03F         	goto	l867
   687  007EA4                     l569:
   688  007EA4  C025  F021         	movff	___lwdiv@quotient,?___lwdiv
   689  007EA8  C026  F022         	movff	___lwdiv@quotient+1,?___lwdiv+1
   690  007EAC  0012               	return		;funcret
   691  007EAE                     __end_of___lwdiv:
   692                           	callstack 0
   693                           
   694 ;; *************** function _HangTram *****************
   695 ;; Defined at:
   696 ;;		line 133 in file "newmain.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  hangtram        2    0[COMRAM] int 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2    0[COMRAM] int 
   703 ;; Registers used:
   704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   710 ;;      Params:         2       0       0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0
   713 ;;      Totals:         2       0       0       0       0       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_Lcd_Display
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text4
   724  007D32                     __ptext4:
   725                           	callstack 0
   726  007D32                     _HangTram:
   727                           	callstack 29
   728  007D32                     
   729                           ;newmain.c: 133: int HangTram(int hangtram);newmain.c: 134: {;newmain.c: 135:     PORTD 
      +                          = 0xff;
   730  007D32  6883               	setf	131,c	;volatile
   731                           
   732                           ;newmain.c: 136:     PORTDbits.RD1 = 0;
   733  007D34  9283               	bcf	131,1,c	;volatile
   734  007D36                     
   735                           ;newmain.c: 137:     PORTC = ledcode[hangtram];
   736  007D36  90D8               	bcf	status,0,c
   737  007D38  3421               	rlcf	HangTram@hangtram^0,w,c
   738  007D3A  6ED9               	movwf	fsr2l,c
   739  007D3C  3422               	rlcf	(HangTram@hangtram+1)^0,w,c
   740  007D3E  6EDA               	movwf	fsr2h,c
   741  007D40  0E01               	movlw	low _ledcode
   742  007D42  26D9               	addwf	fsr2l,f,c
   743  007D44  0E00               	movlw	high _ledcode
   744  007D46  22DA               	addwfc	fsr2h,f,c
   745  007D48  50DF               	movf	indf2,w,c
   746  007D4A  6E82               	movwf	130,c	;volatile
   747  007D4C  0012               	return		;funcret
   748  007D4E                     __end_of_HangTram:
   749                           	callstack 0
   750                           
   751 ;; *************** function _HangNghin *****************
   752 ;; Defined at:
   753 ;;		line 140 in file "newmain.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  hangnghin       2    0[COMRAM] int 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    0[COMRAM] int 
   760 ;; Registers used:
   761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   767 ;;      Params:         2       0       0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0
   770 ;;      Totals:         2       0       0       0       0       0       0
   771 ;;Total ram usage:        2 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_Lcd_Display
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text5
   781  007D16                     __ptext5:
   782                           	callstack 0
   783  007D16                     _HangNghin:
   784                           	callstack 29
   785  007D16                     
   786                           ;newmain.c: 140: int HangNghin(int hangnghin);newmain.c: 141: {;newmain.c: 142:     PORT
      +                          D = 0xff;
   787  007D16  6883               	setf	131,c	;volatile
   788                           
   789                           ;newmain.c: 143:     PORTDbits.RD0 = 0;
   790  007D18  9083               	bcf	131,0,c	;volatile
   791  007D1A                     
   792                           ;newmain.c: 144:     PORTC = ledcode[hangnghin];
   793  007D1A  90D8               	bcf	status,0,c
   794  007D1C  3421               	rlcf	HangNghin@hangnghin^0,w,c
   795  007D1E  6ED9               	movwf	fsr2l,c
   796  007D20  3422               	rlcf	(HangNghin@hangnghin+1)^0,w,c
   797  007D22  6EDA               	movwf	fsr2h,c
   798  007D24  0E01               	movlw	low _ledcode
   799  007D26  26D9               	addwf	fsr2l,f,c
   800  007D28  0E00               	movlw	high _ledcode
   801  007D2A  22DA               	addwfc	fsr2h,f,c
   802  007D2C  50DF               	movf	indf2,w,c
   803  007D2E  6E82               	movwf	130,c	;volatile
   804  007D30  0012               	return		;funcret
   805  007D32                     __end_of_HangNghin:
   806                           	callstack 0
   807                           
   808 ;; *************** function _HangDV *****************
   809 ;; Defined at:
   810 ;;		line 119 in file "newmain.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  hangdv          2    0[COMRAM] int 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2    0[COMRAM] int 
   817 ;; Registers used:
   818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   824 ;;      Params:         2       0       0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0
   827 ;;      Totals:         2       0       0       0       0       0       0
   828 ;;Total ram usage:        2 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_Lcd_Display
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text6
   838  007CFA                     __ptext6:
   839                           	callstack 0
   840  007CFA                     _HangDV:
   841                           	callstack 29
   842  007CFA                     
   843                           ;newmain.c: 119: int HangDV(int hangdv);newmain.c: 120: {;newmain.c: 121:     PORTD = 0x
      +                          ff;
   844  007CFA  6883               	setf	131,c	;volatile
   845                           
   846                           ;newmain.c: 122:     PORTDbits.RD3 = 0;
   847  007CFC  9683               	bcf	131,3,c	;volatile
   848  007CFE                     
   849                           ;newmain.c: 123:     PORTC = ledcode[hangdv];
   850  007CFE  90D8               	bcf	status,0,c
   851  007D00  3421               	rlcf	HangDV@hangdv^0,w,c
   852  007D02  6ED9               	movwf	fsr2l,c
   853  007D04  3422               	rlcf	(HangDV@hangdv+1)^0,w,c
   854  007D06  6EDA               	movwf	fsr2h,c
   855  007D08  0E01               	movlw	low _ledcode
   856  007D0A  26D9               	addwf	fsr2l,f,c
   857  007D0C  0E00               	movlw	high _ledcode
   858  007D0E  22DA               	addwfc	fsr2h,f,c
   859  007D10  50DF               	movf	indf2,w,c
   860  007D12  6E82               	movwf	130,c	;volatile
   861  007D14  0012               	return		;funcret
   862  007D16                     __end_of_HangDV:
   863                           	callstack 0
   864                           
   865 ;; *************** function _HangChuc *****************
   866 ;; Defined at:
   867 ;;		line 126 in file "newmain.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  hangchuc        2    0[COMRAM] int 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2    0[COMRAM] int 
   874 ;; Registers used:
   875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   881 ;;      Params:         2       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0
   884 ;;      Totals:         2       0       0       0       0       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_Lcd_Display
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text7
   895  007CDE                     __ptext7:
   896                           	callstack 0
   897  007CDE                     _HangChuc:
   898                           	callstack 29
   899  007CDE                     
   900                           ;newmain.c: 126: int HangChuc(int hangchuc);newmain.c: 127: {;newmain.c: 128:     PORTD 
      +                          = 0xff;
   901  007CDE  6883               	setf	131,c	;volatile
   902                           
   903                           ;newmain.c: 129:     PORTDbits.RD2 = 0;
   904  007CE0  9483               	bcf	131,2,c	;volatile
   905  007CE2                     
   906                           ;newmain.c: 130:     PORTC = ledcode[hangchuc];
   907  007CE2  90D8               	bcf	status,0,c
   908  007CE4  3421               	rlcf	HangChuc@hangchuc^0,w,c
   909  007CE6  6ED9               	movwf	fsr2l,c
   910  007CE8  3422               	rlcf	(HangChuc@hangchuc+1)^0,w,c
   911  007CEA  6EDA               	movwf	fsr2h,c
   912  007CEC  0E01               	movlw	low _ledcode
   913  007CEE  26D9               	addwf	fsr2l,f,c
   914  007CF0  0E00               	movlw	high _ledcode
   915  007CF2  22DA               	addwfc	fsr2h,f,c
   916  007CF4  50DF               	movf	indf2,w,c
   917  007CF6  6E82               	movwf	130,c	;volatile
   918  007CF8  0012               	return		;funcret
   919  007CFA                     __end_of_HangChuc:
   920                           	callstack 0
   921                           
   922 ;; *************** function _AN0_Config *****************
   923 ;; Defined at:
   924 ;;		line 147 in file "newmain.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   938 ;;      Params:         0       0       0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text8
   952  007CB8                     __ptext8:
   953                           	callstack 0
   954  007CB8                     _AN0_Config:
   955                           	callstack 30
   956  007CB8                     
   957                           ;newmain.c: 150:     ADCON0bits.ADON = 1;
   958  007CB8  80C2               	bsf	194,0,c	;volatile
   959  007CBA                     
   960                           ;newmain.c: 152:     ADCON0 &= ~(1<<2);
   961  007CBA  94C2               	bcf	194,2,c	;volatile
   962                           
   963                           ;newmain.c: 153:     ADCON0 &= ~(1<<3);
   964  007CBC  96C2               	bcf	194,3,c	;volatile
   965                           
   966                           ;newmain.c: 154:     ADCON0 &= ~(1<<4);
   967  007CBE  98C2               	bcf	194,4,c	;volatile
   968                           
   969                           ;newmain.c: 155:     ADCON0 &= ~(1<<5);
   970  007CC0  9AC2               	bcf	194,5,c	;volatile
   971                           
   972                           ;newmain.c: 157:     ADCON0 |= 1<<1;
   973  007CC2  82C2               	bsf	194,1,c	;volatile
   974  007CC4                     
   975                           ;newmain.c: 159:     ADCON1 = 0;
   976  007CC4  0E00               	movlw	0
   977  007CC6  6EC1               	movwf	193,c	;volatile
   978  007CC8  0012               	return		;funcret
   979  007CCA                     __end_of_AN0_Config:
   980                           	callstack 0
   981  0000                     
   982                           	psect	rparam
   983  0000                     
   984                           	psect	idloc
   985                           
   986                           ;Config register IDLOC0 @ 0x200000
   987                           ;	unspecified, using default values
   988  200000                     	org	2097152
   989  200000  FF                 	db	255
   990                           
   991                           ;Config register IDLOC1 @ 0x200001
   992                           ;	unspecified, using default values
   993  200001                     	org	2097153
   994  200001  FF                 	db	255
   995                           
   996                           ;Config register IDLOC2 @ 0x200002
   997                           ;	unspecified, using default values
   998  200002                     	org	2097154
   999  200002  FF                 	db	255
  1000                           
  1001                           ;Config register IDLOC3 @ 0x200003
  1002                           ;	unspecified, using default values
  1003  200003                     	org	2097155
  1004  200003  FF                 	db	255
  1005                           
  1006                           ;Config register IDLOC4 @ 0x200004
  1007                           ;	unspecified, using default values
  1008  200004                     	org	2097156
  1009  200004  FF                 	db	255
  1010                           
  1011                           ;Config register IDLOC5 @ 0x200005
  1012                           ;	unspecified, using default values
  1013  200005                     	org	2097157
  1014  200005  FF                 	db	255
  1015                           
  1016                           ;Config register IDLOC6 @ 0x200006
  1017                           ;	unspecified, using default values
  1018  200006                     	org	2097158
  1019  200006  FF                 	db	255
  1020                           
  1021                           ;Config register IDLOC7 @ 0x200007
  1022                           ;	unspecified, using default values
  1023  200007                     	org	2097159
  1024  200007  FF                 	db	255
  1025                           
  1026                           	psect	config
  1027                           
  1028                           ; Padding undefined space
  1029  300000                     	org	3145728
  1030  300000  FF                 	db	255
  1031                           
  1032                           ;Config register CONFIG1H @ 0x300001
  1033                           ;	Oscillator Selection bits
  1034                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  1035                           ;	Fail-Safe Clock Monitor Enable bit
  1036                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1037                           ;	Internal/External Oscillator Switchover bit
  1038                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1039  300001                     	org	3145729
  1040  300001  07                 	db	7
  1041                           
  1042                           ;Config register CONFIG2L @ 0x300002
  1043                           ;	Power-up Timer Enable bit
  1044                           ;	PWRT = OFF, PWRT disabled
  1045                           ;	Brown-out Reset Enable bits
  1046                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1047                           ;	Brown Out Reset Voltage bits
  1048                           ;	BORV = 3, Minimum setting
  1049  300002                     	org	3145730
  1050  300002  1F                 	db	31
  1051                           
  1052                           ;Config register CONFIG2H @ 0x300003
  1053                           ;	Watchdog Timer Enable bit
  1054                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1055                           ;	Watchdog Timer Postscale Select bits
  1056                           ;	WDTPS = 32768, 1:32768
  1057  300003                     	org	3145731
  1058  300003  1E                 	db	30
  1059                           
  1060                           ; Padding undefined space
  1061  300004                     	org	3145732
  1062  300004  FF                 	db	255
  1063                           
  1064                           ;Config register CONFIG3H @ 0x300005
  1065                           ;	CCP2 MUX bit
  1066                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1067                           ;	PORTB A/D Enable bit
  1068                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1069                           ;	Low-Power Timer1 Oscillator Enable bit
  1070                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1071                           ;	MCLR Pin Enable bit
  1072                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1073  300005                     	org	3145733
  1074  300005  01                 	db	1
  1075                           
  1076                           ;Config register CONFIG4L @ 0x300006
  1077                           ;	Stack Full/Underflow Reset Enable bit
  1078                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1079                           ;	Single-Supply ICSP Enable bit
  1080                           ;	LVP = OFF, Single-Supply ICSP disabled
  1081                           ;	Extended Instruction Set Enable bit
  1082                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1083                           ;	Background Debugger Enable bit
  1084                           ;	DEBUG = 0x1, unprogrammed default
  1085  300006                     	org	3145734
  1086  300006  80                 	db	128
  1087                           
  1088                           ; Padding undefined space
  1089  300007                     	org	3145735
  1090  300007  FF                 	db	255
  1091                           
  1092                           ;Config register CONFIG5L @ 0x300008
  1093                           ;	Code Protection bit
  1094                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1095                           ;	Code Protection bit
  1096                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1097                           ;	Code Protection bit
  1098                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1099                           ;	Code Protection bit
  1100                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1101  300008                     	org	3145736
  1102  300008  0F                 	db	15
  1103                           
  1104                           ;Config register CONFIG5H @ 0x300009
  1105                           ;	Boot Block Code Protection bit
  1106                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1107                           ;	Data EEPROM Code Protection bit
  1108                           ;	CPD = OFF, Data EEPROM not code-protected
  1109  300009                     	org	3145737
  1110  300009  C0                 	db	192
  1111                           
  1112                           ;Config register CONFIG6L @ 0x30000A
  1113                           ;	Write Protection bit
  1114                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1115                           ;	Write Protection bit
  1116                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1117                           ;	Write Protection bit
  1118                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1119                           ;	Write Protection bit
  1120                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1121  30000A                     	org	3145738
  1122  30000A  0F                 	db	15
  1123                           
  1124                           ;Config register CONFIG6H @ 0x30000B
  1125                           ;	Configuration Register Write Protection bit
  1126                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1127                           ;	Boot Block Write Protection bit
  1128                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1129                           ;	Data EEPROM Write Protection bit
  1130                           ;	WRTD = OFF, Data EEPROM not write-protected
  1131  30000B                     	org	3145739
  1132  30000B  E0                 	db	224
  1133                           
  1134                           ;Config register CONFIG7L @ 0x30000C
  1135                           ;	Table Read Protection bit
  1136                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1137                           ;	Table Read Protection bit
  1138                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1139                           ;	Table Read Protection bit
  1140                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1141                           ;	Table Read Protection bit
  1142                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1143  30000C                     	org	3145740
  1144  30000C  0F                 	db	15
  1145                           
  1146                           ;Config register CONFIG7H @ 0x30000D
  1147                           ;	Boot Block Table Read Protection bit
  1148                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1149  30000D                     	org	3145741
  1150  30000D  40                 	db	64
  1151                           tosu	equ	0xFFF
  1152                           tosh	equ	0xFFE
  1153                           tosl	equ	0xFFD
  1154                           stkptr	equ	0xFFC
  1155                           pclatu	equ	0xFFB
  1156                           pclath	equ	0xFFA
  1157                           pcl	equ	0xFF9
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           prodh	equ	0xFF4
  1163                           prodl	equ	0xFF3
  1164                           indf0	equ	0xFEF
  1165                           postinc0	equ	0xFEE
  1166                           postdec0	equ	0xFED
  1167                           preinc0	equ	0xFEC
  1168                           plusw0	equ	0xFEB
  1169                           fsr0h	equ	0xFEA
  1170                           fsr0l	equ	0xFE9
  1171                           wreg	equ	0xFE8
  1172                           indf1	equ	0xFE7
  1173                           postinc1	equ	0xFE6
  1174                           postdec1	equ	0xFE5
  1175                           preinc1	equ	0xFE4
  1176                           plusw1	equ	0xFE3
  1177                           fsr1h	equ	0xFE2
  1178                           fsr1l	equ	0xFE1
  1179                           bsr	equ	0xFE0
  1180                           indf2	equ	0xFDF
  1181                           postinc2	equ	0xFDE
  1182                           postdec2	equ	0xFDD
  1183                           preinc2	equ	0xFDC
  1184                           plusw2	equ	0xFDB
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Lcd_Display
    _Lcd_Display->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1897
                                             10 COMRAM     2     2      0
                         _AN0_Config
                        _Lcd_Display
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display                                          3     1      2    1897
                                              7 COMRAM     3     1      2
                           _HangChuc
                             _HangDV
                          _HangNghin
                           _HangTram
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _HangTram                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HangNghin                                            2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HangDV                                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HangChuc                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _AN0_Config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AN0_Config
   _Lcd_Display
     _HangChuc
     _HangDV
     _HangNghin
     _HangTram
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      2C       1       34.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      15        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 16 00:27:07 2021

                     l52 7D14                       l61 7D30                       l70 7D9E  
                     l55 7CF8                       l64 7CC8                       l49 7FFE  
                     l58 7D4C                       u80 7E54                       u81 7E50  
                     u90 7E72                       u91 7E6E      __size_of_AN0_Config 0012  
                    l901 7F9A                      l911 7FE2                      l903 7FAA  
                    l576 7EAC                      l825 7CB8                      l841 7CFA  
                    l569 7EA4                      l913 7FEE                      l905 7FB6  
                    l921 7DAC                      l586 7E38                      l827 7CBA  
                    l843 7CFE                      l851 7D36                      l579 7E30  
                    l907 7FC6                      l923 7DC2                      l915 7D80  
                    l829 7CC4                      l845 7CDE                      l853 7D16  
                    l861 7E54                      l909 7FD2                      l917 7D90  
                    l847 7CE2                      l855 7D1A                      l871 7E8E  
                    l863 7E5C                      l919 7D9A                      l849 7D32  
                    l873 7E96                      l865 7E64                      l857 7E3A  
                    l881 7DE8                      l875 7E98                      l867 7E72  
                    l859 7E42                      l891 7E24                      l883 7DF0  
                    l877 7E9E                      l869 7E78                      l893 7E2A  
                    l885 7DF8                      l887 7E06                      l879 7DD6  
                    l895 7EAE                      l889 7E1C                      l897 7EBE  
                    l899 7F8E                      u100 7E8E                      u101 7E8A  
                    u110 7DE8                      u111 7DE4                      u120 7E06  
                    u121 7E02                      u130 7E1C                      u131 7E18  
                    u140 7DAC                      u141 7DA8                      u157 7FA0  
                    u167 7FBC                      u177 7FD8                      u187 7FF4  
                    wreg 000FE8      __end_of_Lcd_Display 8000                     _main 7D80  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ?_main 0021          __end_of___lwdiv 7EAE          __end_of___lwmod 7E3A  
     HangNghin@hangnghin 0021                    _PORTC 000F82                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISC 000F94                    _TRISD 000F95  
       HangTram@hangtram 0021                    _tempC 0015                    tablat 000FF5  
                  status 000FD8         __end_of_HangChuc 7CFA         __end_of_HangTram 7D4E  
        __initialization 7D4E             __end_of_main 7DD6              _Lcd_Display 7EAE  
     __size_of_HangNghin 001C                   ??_main 002B            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADRESH 000FC4  
                 _ADRESL 000FC3             ??_AN0_Config 0021                   _HangDV 7CFA  
                 _hangdv 0019                ??___lwdiv 0025                ??___lwmod 0025  
                 clear_0 7D74                   isa$std 000001       __end_of_AN0_Config 7CCA  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 7D7A  
      __end_of_HangNghin 7D32            ___rparam_used 000001           __pcstackCOMRAM 0021  
              ?_HangChuc 0021                ?_HangTram 0021                  ?_HangDV 0021  
             ??_HangChuc 0023               ??_HangTram 0023          __size_of_HangDV 001C  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 7E3A  
                ___lwmod 7DD6                  __pcinit 7D4E                  __ramtop 0600  
           ?_Lcd_Display 0028                  __ptext0 7D80                  __ptext1 7EAE  
                __ptext2 7DD6                  __ptext3 7E3A                  __ptext4 7D32  
                __ptext5 7D16                  __ptext6 7CFA                  __ptext7 7CDE  
                __ptext8 7CB8                  _ledcode 0001     end_of_initialization 7D7A  
                postdec1 000FE5                  postinc0 000FEE                _PORTDbits 000F83  
         __end_of_HangDV 7D16                _HangNghin 7D16             HangDV@hangdv 0021  
          __pidataCOMRAM 7CCA      start_initialization 7D4E        __size_of_HangChuc 001C  
      __size_of_HangTram 001C                 ??_HangDV 0023               ?_HangNghin 0021  
   __size_of_Lcd_Display 0152              __pbssCOMRAM 0015         ___lwdiv@dividend 0021  
               ?___lwdiv 0021                _hangnghin 001F                 ?___lwmod 0021  
       ___lwdiv@quotient 0025                _tempCTemp 0017              ??_HangNghin 0023  
             _ADCON0bits 000FC2                 _HangChuc 7CDE                 _HangTram 7D32  
              copy_data0 7D62               _AN0_Config 7CB8                 __Hrparam 0000  
               __Lrparam 0000         __size_of___lwdiv 0074         __size_of___lwmod 0064  
        ___lwdiv@divisor 0023          ___lwdiv@counter 0027                 _hangchuc 001B  
               _hangtram 001D         Lcd_Display@tempC 0028            __size_of_main 0056  
       HangChuc@hangchuc 0021                 isa$xinst 000000              ?_AN0_Config 0021  
       ___lwmod@dividend 0021            ??_Lcd_Display 002A          ___lwmod@divisor 0023  
        ___lwmod@counter 0025  
