

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 19 01:53:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  05F9                     __pidataBANK0:
   177                           
   178                           ;initializer for _ledcode
   179  05F9  343F               	retlw	63
   180  05FA  3400               	retlw	0
   181  05FB  3406               	retlw	6
   182  05FC  3400               	retlw	0
   183  05FD  345B               	retlw	91
   184  05FE  3400               	retlw	0
   185  05FF  344F               	retlw	79
   186  0600  3400               	retlw	0
   187  0601  3466               	retlw	102
   188  0602  3400               	retlw	0
   189  0603  346D               	retlw	109
   190  0604  3400               	retlw	0
   191  0605  347D               	retlw	125
   192  0606  3400               	retlw	0
   193  0607  3407               	retlw	7
   194  0608  3400               	retlw	0
   195  0609  347F               	retlw	127
   196  060A  3400               	retlw	0
   197  060B  346F               	retlw	111
   198  060C  3400               	retlw	0
   199  0006                     _PORTB	set	6
   200  0007                     _PORTCbits	set	7
   201  0007                     _PORTC	set	7
   202  0086                     _TRISB	set	134
   203  0087                     _TRISC	set	135
   204                           
   205                           	psect	cinit
   206  07EE                     start_initialization:	
   207                           ; #config settings
   208                           
   209  07EE                     __initialization:
   210                           
   211                           ; Initialize objects allocated to BANK0
   212  07EE  1383               	bcf	3,7	;select IRP bank0
   213  07EF  3034               	movlw	low (__pdataBANK0+20)
   214  07F0  00FD               	movwf	btemp+-1
   215  07F1  3005               	movlw	high __pidataBANK0
   216  07F2  00FE               	movwf	btemp
   217  07F3  30F9               	movlw	low __pidataBANK0
   218  07F4  00FF               	movwf	btemp+1
   219  07F5  3020               	movlw	low __pdataBANK0
   220  07F6  0084               	movwf	4
   221  07F7  120A  118A  25EA  120A  118A  	fcall	init_ram0
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2ECD   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	dataBANK0
   230  0020                     __pdataBANK0:
   231  0020                     _ledcode:
   232  0020                     	ds	20
   233                           
   234                           	psect	inittext
   235  05E6                     init_fetch0:	
   236                           ;	Called with low address in FSR and high address in W
   237                           
   238  05E6  087E               	movf	btemp,w
   239  05E7  008A               	movwf	10
   240  05E8  087F               	movf	btemp+1,w
   241  05E9  0082               	movwf	2
   242  05EA                     init_ram0:	
   243                           ;Called with:
   244                           ;	high address of idata address in btemp 
   245                           ;	low address of idata address in btemp+1 
   246                           ;	low address of data in FSR
   247                           ;	high address + 1 of data in btemp-1
   248                           
   249  05EA  120A  118A  25E6  120A  118A  	fcall	init_fetch0
   250  05EF  0080               	movwf	0
   251  05F0  0A84               	incf	4,f
   252  05F1  0804               	movf	4,w
   253  05F2  067D               	xorwf	btemp+-1,w
   254  05F3  1903               	btfsc	3,2
   255  05F4  3400               	retlw	0
   256  05F5  0AFF               	incf	btemp+1,f
   257  05F6  1903               	btfsc	3,2
   258  05F7  0AFE               	incf	btemp,f
   259  05F8  2DEA               	goto	init_ram0
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:
   263  0070                     ?_main:
   264  0070                     ?_HangDV:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_HangChuc:	
   268                           ; 2 bytes @ 0x0
   269                           
   270  0070                     ?_HangTram:	
   271                           ; 2 bytes @ 0x0
   272                           
   273  0070                     ?_HangNghin:	
   274                           ; 2 bytes @ 0x0
   275                           
   276  0070                     ?___awdiv:	
   277                           ; 2 bytes @ 0x0
   278                           
   279  0070                     ?___awmod:	
   280                           ; 2 bytes @ 0x0
   281                           
   282  0070                     HangDV@hangdv:	
   283                           ; 2 bytes @ 0x0
   284                           
   285  0070                     HangChuc@hangchuc:	
   286                           ; 2 bytes @ 0x0
   287                           
   288  0070                     HangTram@hangtram:	
   289                           ; 2 bytes @ 0x0
   290                           
   291  0070                     HangNghin@hangnghin:	
   292                           ; 2 bytes @ 0x0
   293                           
   294  0070                     ___awdiv@divisor:	
   295                           ; 2 bytes @ 0x0
   296                           
   297  0070                     ___awmod@divisor:	
   298                           ; 2 bytes @ 0x0
   299                           
   300                           
   301                           ; 2 bytes @ 0x0
   302  0070                     	ds	2
   303  0072                     ??_HangDV:
   304  0072                     ??_HangChuc:	
   305                           ; 1 bytes @ 0x2
   306                           
   307  0072                     ??_HangTram:	
   308                           ; 1 bytes @ 0x2
   309                           
   310  0072                     ??_HangNghin:	
   311                           ; 1 bytes @ 0x2
   312                           
   313  0072                     ___awdiv@dividend:	
   314                           ; 1 bytes @ 0x2
   315                           
   316  0072                     ___awmod@dividend:	
   317                           ; 2 bytes @ 0x2
   318                           
   319                           
   320                           ; 2 bytes @ 0x2
   321  0072                     	ds	2
   322  0074                     ??___awdiv:
   323  0074                     ??___awmod:	
   324                           ; 1 bytes @ 0x4
   325                           
   326                           
   327                           ; 1 bytes @ 0x4
   328  0074                     	ds	1
   329  0075                     ___awdiv@counter:
   330  0075                     ___awmod@counter:	
   331                           ; 1 bytes @ 0x5
   332                           
   333                           
   334                           ; 1 bytes @ 0x5
   335  0075                     	ds	1
   336  0076                     ___awdiv@sign:
   337  0076                     ___awmod@sign:	
   338                           ; 1 bytes @ 0x6
   339                           
   340                           
   341                           ; 1 bytes @ 0x6
   342  0076                     	ds	1
   343  0077                     ___awdiv@quotient:
   344                           
   345                           ; 2 bytes @ 0x7
   346  0077                     	ds	2
   347  0079                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x9
   350  0079                     	ds	2
   351                           
   352                           	psect	cstackBANK0
   353  0034                     __pcstackBANK0:
   354  0034                     main@hangnghin:
   355                           
   356                           ; 2 bytes @ 0x0
   357  0034                     	ds	2
   358  0036                     main@hangtram:
   359                           
   360                           ; 2 bytes @ 0x2
   361  0036                     	ds	2
   362  0038                     main@hangchuc:
   363                           
   364                           ; 2 bytes @ 0x4
   365  0038                     	ds	2
   366  003A                     main@hangdv:
   367                           
   368                           ; 2 bytes @ 0x6
   369  003A                     	ds	2
   370  003C                     main@i:
   371                           
   372                           ; 2 bytes @ 0x8
   373  003C                     	ds	2
   374  003E                     main@time:
   375                           
   376                           ; 2 bytes @ 0xA
   377  003E                     	ds	2
   378  0040                     main@timeTemp:
   379                           
   380                           ; 2 bytes @ 0xC
   381  0040                     	ds	2
   382                           
   383                           	psect	maintext
   384  06CD                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 73 in file "newmain.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  i               2    8[BANK0 ] int 
   395 ;;  timeTemp        2   12[BANK0 ] int 
   396 ;;  time            2   10[BANK0 ] int 
   397 ;;  hangdv          2    6[BANK0 ] int 
   398 ;;  hangchuc        2    4[BANK0 ] int 
   399 ;;  hangtram        2    2[BANK0 ] int 
   400 ;;  hangnghin       2    0[BANK0 ] int 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         0      14       0       0       0
   412 ;;      Temps:          2       0       0       0       0
   413 ;;      Totals:         2      14       0       0       0
   414 ;;Total ram usage:       16 bytes
   415 ;; Hardware stack levels required when called: 1
   416 ;; This function calls:
   417 ;;		_HangChuc
   418 ;;		_HangDV
   419 ;;		_HangNghin
   420 ;;		_HangTram
   421 ;;		___awdiv
   422 ;;		___awmod
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _main
   430  06CD                     _main:
   431  06CD                     l895:	
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   434                           
   435                           
   436                           ;newmain.c: 75:     TRISC = 0;
   437  06CD  1683               	bsf	3,5	;RP0=1, select bank1
   438  06CE  1303               	bcf	3,6	;RP1=0, select bank1
   439  06CF  0187               	clrf	7	;volatile
   440  06D0                     l897:
   441                           
   442                           ;newmain.c: 76:     PORTC = 0xff;
   443  06D0  30FF               	movlw	255
   444  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   445  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   446  06D3  0087               	movwf	7	;volatile
   447  06D4                     l899:
   448                           
   449                           ;newmain.c: 77:     TRISB = 0;
   450  06D4  1683               	bsf	3,5	;RP0=1, select bank1
   451  06D5  1303               	bcf	3,6	;RP1=0, select bank1
   452  06D6  0186               	clrf	6	;volatile
   453  06D7                     l901:
   454                           
   455                           ;newmain.c: 79:     int time = 0;
   456  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   457  06D8  1303               	bcf	3,6	;RP1=0, select bank0
   458  06D9  01BE               	clrf	main@time
   459  06DA  01BF               	clrf	main@time+1
   460  06DB                     l903:
   461  06DB                     l905:
   462                           
   463                           ;newmain.c: 83:     {;newmain.c: 85:         time++;
   464  06DB  3001               	movlw	1
   465  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   466  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   467  06DE  07BE               	addwf	main@time,f
   468  06DF  1803               	skipnc
   469  06E0  0ABF               	incf	main@time+1,f
   470  06E1  3000               	movlw	0
   471  06E2  07BF               	addwf	main@time+1,f
   472  06E3                     l907:
   473                           
   474                           ;newmain.c: 86:         if (time == 10000) time = 0;
   475  06E3  3010               	movlw	16
   476  06E4  063E               	xorwf	main@time,w
   477  06E5  3027               	movlw	39
   478  06E6  1903               	skipnz
   479  06E7  063F               	xorwf	main@time+1,w
   480  06E8  1D03               	btfss	3,2
   481  06E9  2EEB               	goto	u411
   482  06EA  2EEC               	goto	u410
   483  06EB                     u411:
   484  06EB  2EEE               	goto	l911
   485  06EC                     u410:
   486  06EC                     l909:
   487  06EC  01BE               	clrf	main@time
   488  06ED  01BF               	clrf	main@time+1
   489  06EE                     l911:
   490                           
   491                           ;newmain.c: 87:         timeTemp = time;
   492  06EE  083F               	movf	main@time+1,w
   493  06EF  00C1               	movwf	main@timeTemp+1
   494  06F0  083E               	movf	main@time,w
   495  06F1  00C0               	movwf	main@timeTemp
   496  06F2                     l913:
   497                           
   498                           ;newmain.c: 88:         hangdv = timeTemp%10;
   499  06F2  300A               	movlw	10
   500  06F3  00F0               	movwf	___awmod@divisor
   501  06F4  3000               	movlw	0
   502  06F5  00F1               	movwf	___awmod@divisor+1
   503  06F6  0841               	movf	main@timeTemp+1,w
   504  06F7  00F3               	movwf	___awmod@dividend+1
   505  06F8  0840               	movf	main@timeTemp,w
   506  06F9  00F2               	movwf	___awmod@dividend
   507  06FA  120A  118A  260D  120A  118A  	fcall	___awmod
   508  06FF  0871               	movf	?___awmod+1,w
   509  0700  1283               	bcf	3,5	;RP0=0, select bank0
   510  0701  1303               	bcf	3,6	;RP1=0, select bank0
   511  0702  00BB               	movwf	main@hangdv+1
   512  0703  0870               	movf	?___awmod,w
   513  0704  00BA               	movwf	main@hangdv
   514  0705                     l915:
   515                           
   516                           ;newmain.c: 89:         timeTemp = (timeTemp - hangdv)/10;
   517  0705  300A               	movlw	10
   518  0706  00F0               	movwf	___awdiv@divisor
   519  0707  3000               	movlw	0
   520  0708  00F1               	movwf	___awdiv@divisor+1
   521  0709  083A               	movf	main@hangdv,w
   522  070A  0240               	subwf	main@timeTemp,w
   523  070B  00F2               	movwf	___awdiv@dividend
   524  070C  083B               	movf	main@hangdv+1,w
   525  070D  1C03               	skipc
   526  070E  0A3B               	incf	main@hangdv+1,w
   527  070F  0241               	subwf	main@timeTemp+1,w
   528  0710  00F3               	movwf	___awdiv@dividend+1
   529  0711  120A  118A  2666  120A  118A  	fcall	___awdiv
   530  0716  0871               	movf	?___awdiv+1,w
   531  0717  1283               	bcf	3,5	;RP0=0, select bank0
   532  0718  1303               	bcf	3,6	;RP1=0, select bank0
   533  0719  00C1               	movwf	main@timeTemp+1
   534  071A  0870               	movf	?___awdiv,w
   535  071B  00C0               	movwf	main@timeTemp
   536  071C                     l917:
   537                           
   538                           ;newmain.c: 90:         hangchuc = timeTemp%10;
   539  071C  300A               	movlw	10
   540  071D  00F0               	movwf	___awmod@divisor
   541  071E  3000               	movlw	0
   542  071F  00F1               	movwf	___awmod@divisor+1
   543  0720  0841               	movf	main@timeTemp+1,w
   544  0721  00F3               	movwf	___awmod@dividend+1
   545  0722  0840               	movf	main@timeTemp,w
   546  0723  00F2               	movwf	___awmod@dividend
   547  0724  120A  118A  260D  120A  118A  	fcall	___awmod
   548  0729  0871               	movf	?___awmod+1,w
   549  072A  1283               	bcf	3,5	;RP0=0, select bank0
   550  072B  1303               	bcf	3,6	;RP1=0, select bank0
   551  072C  00B9               	movwf	main@hangchuc+1
   552  072D  0870               	movf	?___awmod,w
   553  072E  00B8               	movwf	main@hangchuc
   554  072F                     l919:
   555                           
   556                           ;newmain.c: 91:         timeTemp = (timeTemp - hangchuc)/10;
   557  072F  300A               	movlw	10
   558  0730  00F0               	movwf	___awdiv@divisor
   559  0731  3000               	movlw	0
   560  0732  00F1               	movwf	___awdiv@divisor+1
   561  0733  0838               	movf	main@hangchuc,w
   562  0734  0240               	subwf	main@timeTemp,w
   563  0735  00F2               	movwf	___awdiv@dividend
   564  0736  0839               	movf	main@hangchuc+1,w
   565  0737  1C03               	skipc
   566  0738  0A39               	incf	main@hangchuc+1,w
   567  0739  0241               	subwf	main@timeTemp+1,w
   568  073A  00F3               	movwf	___awdiv@dividend+1
   569  073B  120A  118A  2666  120A  118A  	fcall	___awdiv
   570  0740  0871               	movf	?___awdiv+1,w
   571  0741  1283               	bcf	3,5	;RP0=0, select bank0
   572  0742  1303               	bcf	3,6	;RP1=0, select bank0
   573  0743  00C1               	movwf	main@timeTemp+1
   574  0744  0870               	movf	?___awdiv,w
   575  0745  00C0               	movwf	main@timeTemp
   576  0746                     l921:
   577                           
   578                           ;newmain.c: 92:         hangtram = timeTemp%10;
   579  0746  300A               	movlw	10
   580  0747  00F0               	movwf	___awmod@divisor
   581  0748  3000               	movlw	0
   582  0749  00F1               	movwf	___awmod@divisor+1
   583  074A  0841               	movf	main@timeTemp+1,w
   584  074B  00F3               	movwf	___awmod@dividend+1
   585  074C  0840               	movf	main@timeTemp,w
   586  074D  00F2               	movwf	___awmod@dividend
   587  074E  120A  118A  260D  120A  118A  	fcall	___awmod
   588  0753  0871               	movf	?___awmod+1,w
   589  0754  1283               	bcf	3,5	;RP0=0, select bank0
   590  0755  1303               	bcf	3,6	;RP1=0, select bank0
   591  0756  00B7               	movwf	main@hangtram+1
   592  0757  0870               	movf	?___awmod,w
   593  0758  00B6               	movwf	main@hangtram
   594  0759                     l923:
   595                           
   596                           ;newmain.c: 93:         timeTemp = (timeTemp - hangtram)/10;
   597  0759  300A               	movlw	10
   598  075A  00F0               	movwf	___awdiv@divisor
   599  075B  3000               	movlw	0
   600  075C  00F1               	movwf	___awdiv@divisor+1
   601  075D  0836               	movf	main@hangtram,w
   602  075E  0240               	subwf	main@timeTemp,w
   603  075F  00F2               	movwf	___awdiv@dividend
   604  0760  0837               	movf	main@hangtram+1,w
   605  0761  1C03               	skipc
   606  0762  0A37               	incf	main@hangtram+1,w
   607  0763  0241               	subwf	main@timeTemp+1,w
   608  0764  00F3               	movwf	___awdiv@dividend+1
   609  0765  120A  118A  2666  120A  118A  	fcall	___awdiv
   610  076A  0871               	movf	?___awdiv+1,w
   611  076B  1283               	bcf	3,5	;RP0=0, select bank0
   612  076C  1303               	bcf	3,6	;RP1=0, select bank0
   613  076D  00C1               	movwf	main@timeTemp+1
   614  076E  0870               	movf	?___awdiv,w
   615  076F  00C0               	movwf	main@timeTemp
   616  0770                     l925:
   617                           
   618                           ;newmain.c: 94:         hangnghin = timeTemp%10;
   619  0770  300A               	movlw	10
   620  0771  00F0               	movwf	___awmod@divisor
   621  0772  3000               	movlw	0
   622  0773  00F1               	movwf	___awmod@divisor+1
   623  0774  0841               	movf	main@timeTemp+1,w
   624  0775  00F3               	movwf	___awmod@dividend+1
   625  0776  0840               	movf	main@timeTemp,w
   626  0777  00F2               	movwf	___awmod@dividend
   627  0778  120A  118A  260D  120A  118A  	fcall	___awmod
   628  077D  0871               	movf	?___awmod+1,w
   629  077E  1283               	bcf	3,5	;RP0=0, select bank0
   630  077F  1303               	bcf	3,6	;RP1=0, select bank0
   631  0780  00B5               	movwf	main@hangnghin+1
   632  0781  0870               	movf	?___awmod,w
   633  0782  00B4               	movwf	main@hangnghin
   634  0783                     l927:
   635                           
   636                           ;newmain.c: 97:         for(int i = 0; i<25; i++)
   637  0783  01BC               	clrf	main@i
   638  0784  01BD               	clrf	main@i+1
   639  0785                     l933:
   640                           
   641                           ;newmain.c: 98:         {;newmain.c: 99:             HangDV(hangdv);
   642  0785  1283               	bcf	3,5	;RP0=0, select bank0
   643  0786  1303               	bcf	3,6	;RP1=0, select bank0
   644  0787  083B               	movf	main@hangdv+1,w
   645  0788  00F1               	movwf	HangDV@hangdv+1
   646  0789  083A               	movf	main@hangdv,w
   647  078A  00F0               	movwf	HangDV@hangdv
   648  078B  120A  118A  25BC  120A  118A  	fcall	_HangDV
   649  0790                     l935:
   650                           
   651                           ;newmain.c: 100:             _delay((unsigned long)((10)*(20000000/4000.0)));
   652  0790  3041               	movlw	65
   653  0791  00FA               	movwf	??_main+1
   654  0792  30EE               	movlw	238
   655  0793  00F9               	movwf	??_main
   656  0794                     u437:
   657  0794  0BF9               	decfsz	??_main,f
   658  0795  2F94               	goto	u437
   659  0796  0BFA               	decfsz	??_main+1,f
   660  0797  2F94               	goto	u437
   661  0798  0000               	nop
   662  0799                     l937:
   663                           
   664                           ;newmain.c: 101:             HangChuc(hangchuc);
   665  0799  1283               	bcf	3,5	;RP0=0, select bank0
   666  079A  1303               	bcf	3,6	;RP1=0, select bank0
   667  079B  0839               	movf	main@hangchuc+1,w
   668  079C  00F1               	movwf	HangChuc@hangchuc+1
   669  079D  0838               	movf	main@hangchuc,w
   670  079E  00F0               	movwf	HangChuc@hangchuc
   671  079F  120A  118A  25AE  120A  118A  	fcall	_HangChuc
   672                           
   673                           ;newmain.c: 102:             _delay((unsigned long)((10)*(20000000/4000.0)));
   674  07A4  3041               	movlw	65
   675  07A5  00FA               	movwf	??_main+1
   676  07A6  30EE               	movlw	238
   677  07A7  00F9               	movwf	??_main
   678  07A8                     u447:
   679  07A8  0BF9               	decfsz	??_main,f
   680  07A9  2FA8               	goto	u447
   681  07AA  0BFA               	decfsz	??_main+1,f
   682  07AB  2FA8               	goto	u447
   683  07AC  0000               	nop
   684  07AD                     l939:
   685                           
   686                           ;newmain.c: 103:             HangTram(hangtram);
   687  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   688  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   689  07AF  0837               	movf	main@hangtram+1,w
   690  07B0  00F1               	movwf	HangTram@hangtram+1
   691  07B1  0836               	movf	main@hangtram,w
   692  07B2  00F0               	movwf	HangTram@hangtram
   693  07B3  120A  118A  25D8  120A  118A  	fcall	_HangTram
   694  07B8                     l941:
   695                           
   696                           ;newmain.c: 104:             _delay((unsigned long)((10)*(20000000/4000.0)));
   697  07B8  3041               	movlw	65
   698  07B9  00FA               	movwf	??_main+1
   699  07BA  30EE               	movlw	238
   700  07BB  00F9               	movwf	??_main
   701  07BC                     u457:
   702  07BC  0BF9               	decfsz	??_main,f
   703  07BD  2FBC               	goto	u457
   704  07BE  0BFA               	decfsz	??_main+1,f
   705  07BF  2FBC               	goto	u457
   706  07C0  0000               	nop
   707                           
   708                           ;newmain.c: 105:             HangNghin(hangnghin);
   709  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   710  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   711  07C3  0835               	movf	main@hangnghin+1,w
   712  07C4  00F1               	movwf	HangNghin@hangnghin+1
   713  07C5  0834               	movf	main@hangnghin,w
   714  07C6  00F0               	movwf	HangNghin@hangnghin
   715  07C7  120A  118A  25CA  120A  118A  	fcall	_HangNghin
   716  07CC                     l943:
   717                           
   718                           ;newmain.c: 106:             _delay((unsigned long)((10)*(20000000/4000.0)));
   719  07CC  3041               	movlw	65
   720  07CD  00FA               	movwf	??_main+1
   721  07CE  30EE               	movlw	238
   722  07CF  00F9               	movwf	??_main
   723  07D0                     u467:
   724  07D0  0BF9               	decfsz	??_main,f
   725  07D1  2FD0               	goto	u467
   726  07D2  0BFA               	decfsz	??_main+1,f
   727  07D3  2FD0               	goto	u467
   728  07D4  0000               	nop
   729  07D5                     l945:
   730                           
   731                           ;newmain.c: 107:         }
   732  07D5  3001               	movlw	1
   733  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   734  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   735  07D8  07BC               	addwf	main@i,f
   736  07D9  1803               	skipnc
   737  07DA  0ABD               	incf	main@i+1,f
   738  07DB  3000               	movlw	0
   739  07DC  07BD               	addwf	main@i+1,f
   740  07DD                     l947:
   741  07DD  083D               	movf	main@i+1,w
   742  07DE  3A80               	xorlw	128
   743  07DF  00FF               	movwf	btemp+1
   744  07E0  3080               	movlw	128
   745  07E1  027F               	subwf	btemp+1,w
   746  07E2  1D03               	skipz
   747  07E3  2FE6               	goto	u425
   748  07E4  3019               	movlw	25
   749  07E5  023C               	subwf	main@i,w
   750  07E6                     u425:
   751  07E6  1C03               	skipc
   752  07E7  2FE9               	goto	u421
   753  07E8  2FEA               	goto	u420
   754  07E9                     u421:
   755  07E9  2F85               	goto	l933
   756  07EA                     u420:
   757  07EA  2EDB               	goto	l905
   758  07EB  120A  118A  2800   	ljmp	start
   759  07EE                     __end_of_main:
   760                           
   761                           	psect	text1
   762  060D                     __ptext1:	
   763 ;; *************** function ___awmod *****************
   764 ;; Defined at:
   765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  divisor         2    0[COMMON] int 
   768 ;;  dividend        2    2[COMMON] int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  sign            1    6[COMMON] unsigned char 
   771 ;;  counter         1    5[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  2    0[COMMON] int 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         4       0       0       0       0
   782 ;;      Locals:         2       0       0       0       0
   783 ;;      Temps:          1       0       0       0       0
   784 ;;      Totals:         7       0       0       0       0
   785 ;;Total ram usage:        7 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function ___awmod
   796  060D                     ___awmod:
   797  060D                     l857:	
   798                           ;incstack = 0
   799                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   800                           
   801  060D  01F6               	clrf	___awmod@sign
   802  060E                     l859:
   803  060E  1FF3               	btfss	___awmod@dividend+1,7
   804  060F  2E11               	goto	u321
   805  0610  2E12               	goto	u320
   806  0611                     u321:
   807  0611  2E19               	goto	l865
   808  0612                     u320:
   809  0612                     l861:
   810  0612  09F2               	comf	___awmod@dividend,f
   811  0613  09F3               	comf	___awmod@dividend+1,f
   812  0614  0AF2               	incf	___awmod@dividend,f
   813  0615  1903               	skipnz
   814  0616  0AF3               	incf	___awmod@dividend+1,f
   815  0617                     l863:
   816  0617  01F6               	clrf	___awmod@sign
   817  0618  0AF6               	incf	___awmod@sign,f
   818  0619                     l865:
   819  0619  1FF1               	btfss	___awmod@divisor+1,7
   820  061A  2E1C               	goto	u331
   821  061B  2E1D               	goto	u330
   822  061C                     u331:
   823  061C  2E22               	goto	l869
   824  061D                     u330:
   825  061D                     l867:
   826  061D  09F0               	comf	___awmod@divisor,f
   827  061E  09F1               	comf	___awmod@divisor+1,f
   828  061F  0AF0               	incf	___awmod@divisor,f
   829  0620  1903               	skipnz
   830  0621  0AF1               	incf	___awmod@divisor+1,f
   831  0622                     l869:
   832  0622  0870               	movf	___awmod@divisor,w
   833  0623  0471               	iorwf	___awmod@divisor+1,w
   834  0624  1903               	btfsc	3,2
   835  0625  2E27               	goto	u341
   836  0626  2E28               	goto	u340
   837  0627                     u341:
   838  0627  2E57               	goto	l887
   839  0628                     u340:
   840  0628                     l871:
   841  0628  01F5               	clrf	___awmod@counter
   842  0629  0AF5               	incf	___awmod@counter,f
   843  062A  2E36               	goto	l877
   844  062B                     l873:
   845  062B  3001               	movlw	1
   846  062C                     u355:
   847  062C  1003               	clrc
   848  062D  0DF0               	rlf	___awmod@divisor,f
   849  062E  0DF1               	rlf	___awmod@divisor+1,f
   850  062F  3EFF               	addlw	-1
   851  0630  1D03               	skipz
   852  0631  2E2C               	goto	u355
   853  0632                     l875:
   854  0632  3001               	movlw	1
   855  0633  00F4               	movwf	??___awmod
   856  0634  0874               	movf	??___awmod,w
   857  0635  07F5               	addwf	___awmod@counter,f
   858  0636                     l877:
   859  0636  1FF1               	btfss	___awmod@divisor+1,7
   860  0637  2E39               	goto	u361
   861  0638  2E3A               	goto	u360
   862  0639                     u361:
   863  0639  2E2B               	goto	l873
   864  063A                     u360:
   865  063A                     l879:
   866  063A  0871               	movf	___awmod@divisor+1,w
   867  063B  0273               	subwf	___awmod@dividend+1,w
   868  063C  1D03               	skipz
   869  063D  2E40               	goto	u375
   870  063E  0870               	movf	___awmod@divisor,w
   871  063F  0272               	subwf	___awmod@dividend,w
   872  0640                     u375:
   873  0640  1C03               	skipc
   874  0641  2E43               	goto	u371
   875  0642  2E44               	goto	u370
   876  0643                     u371:
   877  0643  2E4A               	goto	l883
   878  0644                     u370:
   879  0644                     l881:
   880  0644  0870               	movf	___awmod@divisor,w
   881  0645  02F2               	subwf	___awmod@dividend,f
   882  0646  0871               	movf	___awmod@divisor+1,w
   883  0647  1C03               	skipc
   884  0648  03F3               	decf	___awmod@dividend+1,f
   885  0649  02F3               	subwf	___awmod@dividend+1,f
   886  064A                     l883:
   887  064A  3001               	movlw	1
   888  064B                     u385:
   889  064B  1003               	clrc
   890  064C  0CF1               	rrf	___awmod@divisor+1,f
   891  064D  0CF0               	rrf	___awmod@divisor,f
   892  064E  3EFF               	addlw	-1
   893  064F  1D03               	skipz
   894  0650  2E4B               	goto	u385
   895  0651                     l885:
   896  0651  3001               	movlw	1
   897  0652  02F5               	subwf	___awmod@counter,f
   898  0653  1D03               	btfss	3,2
   899  0654  2E56               	goto	u391
   900  0655  2E57               	goto	u390
   901  0656                     u391:
   902  0656  2E3A               	goto	l879
   903  0657                     u390:
   904  0657                     l887:
   905  0657  0876               	movf	___awmod@sign,w
   906  0658  1903               	btfsc	3,2
   907  0659  2E5B               	goto	u401
   908  065A  2E5C               	goto	u400
   909  065B                     u401:
   910  065B  2E61               	goto	l891
   911  065C                     u400:
   912  065C                     l889:
   913  065C  09F2               	comf	___awmod@dividend,f
   914  065D  09F3               	comf	___awmod@dividend+1,f
   915  065E  0AF2               	incf	___awmod@dividend,f
   916  065F  1903               	skipnz
   917  0660  0AF3               	incf	___awmod@dividend+1,f
   918  0661                     l891:
   919  0661  0873               	movf	___awmod@dividend+1,w
   920  0662  00F1               	movwf	?___awmod+1
   921  0663  0872               	movf	___awmod@dividend,w
   922  0664  00F0               	movwf	?___awmod
   923  0665                     l289:
   924  0665  0008               	return
   925  0666                     __end_of___awmod:
   926                           
   927                           	psect	text2
   928  0666                     __ptext2:	
   929 ;; *************** function ___awdiv *****************
   930 ;; Defined at:
   931 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  divisor         2    0[COMMON] int 
   934 ;;  dividend        2    2[COMMON] int 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  quotient        2    7[COMMON] int 
   937 ;;  sign            1    6[COMMON] unsigned char 
   938 ;;  counter         1    5[COMMON] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2    0[COMMON] int 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         4       0       0       0       0
   949 ;;      Locals:         4       0       0       0       0
   950 ;;      Temps:          1       0       0       0       0
   951 ;;      Totals:         9       0       0       0       0
   952 ;;Total ram usage:        9 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function ___awdiv
   963  0666                     ___awdiv:
   964  0666                     l813:	
   965                           ;incstack = 0
   966                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   967                           
   968  0666  01F6               	clrf	___awdiv@sign
   969  0667                     l815:
   970  0667  1FF1               	btfss	___awdiv@divisor+1,7
   971  0668  2E6A               	goto	u221
   972  0669  2E6B               	goto	u220
   973  066A                     u221:
   974  066A  2E72               	goto	l821
   975  066B                     u220:
   976  066B                     l817:
   977  066B  09F0               	comf	___awdiv@divisor,f
   978  066C  09F1               	comf	___awdiv@divisor+1,f
   979  066D  0AF0               	incf	___awdiv@divisor,f
   980  066E  1903               	skipnz
   981  066F  0AF1               	incf	___awdiv@divisor+1,f
   982  0670                     l819:
   983  0670  01F6               	clrf	___awdiv@sign
   984  0671  0AF6               	incf	___awdiv@sign,f
   985  0672                     l821:
   986  0672  1FF3               	btfss	___awdiv@dividend+1,7
   987  0673  2E75               	goto	u231
   988  0674  2E76               	goto	u230
   989  0675                     u231:
   990  0675  2E7F               	goto	l827
   991  0676                     u230:
   992  0676                     l823:
   993  0676  09F2               	comf	___awdiv@dividend,f
   994  0677  09F3               	comf	___awdiv@dividend+1,f
   995  0678  0AF2               	incf	___awdiv@dividend,f
   996  0679  1903               	skipnz
   997  067A  0AF3               	incf	___awdiv@dividend+1,f
   998  067B                     l825:
   999  067B  3001               	movlw	1
  1000  067C  00F4               	movwf	??___awdiv
  1001  067D  0874               	movf	??___awdiv,w
  1002  067E  06F6               	xorwf	___awdiv@sign,f
  1003  067F                     l827:
  1004  067F  01F7               	clrf	___awdiv@quotient
  1005  0680  01F8               	clrf	___awdiv@quotient+1
  1006  0681                     l829:
  1007  0681  0870               	movf	___awdiv@divisor,w
  1008  0682  0471               	iorwf	___awdiv@divisor+1,w
  1009  0683  1903               	btfsc	3,2
  1010  0684  2E86               	goto	u241
  1011  0685  2E87               	goto	u240
  1012  0686                     u241:
  1013  0686  2EBE               	goto	l849
  1014  0687                     u240:
  1015  0687                     l831:
  1016  0687  01F5               	clrf	___awdiv@counter
  1017  0688  0AF5               	incf	___awdiv@counter,f
  1018  0689  2E95               	goto	l837
  1019  068A                     l833:
  1020  068A  3001               	movlw	1
  1021  068B                     u255:
  1022  068B  1003               	clrc
  1023  068C  0DF0               	rlf	___awdiv@divisor,f
  1024  068D  0DF1               	rlf	___awdiv@divisor+1,f
  1025  068E  3EFF               	addlw	-1
  1026  068F  1D03               	skipz
  1027  0690  2E8B               	goto	u255
  1028  0691                     l835:
  1029  0691  3001               	movlw	1
  1030  0692  00F4               	movwf	??___awdiv
  1031  0693  0874               	movf	??___awdiv,w
  1032  0694  07F5               	addwf	___awdiv@counter,f
  1033  0695                     l837:
  1034  0695  1FF1               	btfss	___awdiv@divisor+1,7
  1035  0696  2E98               	goto	u261
  1036  0697  2E99               	goto	u260
  1037  0698                     u261:
  1038  0698  2E8A               	goto	l833
  1039  0699                     u260:
  1040  0699                     l839:
  1041  0699  3001               	movlw	1
  1042  069A                     u275:
  1043  069A  1003               	clrc
  1044  069B  0DF7               	rlf	___awdiv@quotient,f
  1045  069C  0DF8               	rlf	___awdiv@quotient+1,f
  1046  069D  3EFF               	addlw	-1
  1047  069E  1D03               	skipz
  1048  069F  2E9A               	goto	u275
  1049  06A0  0871               	movf	___awdiv@divisor+1,w
  1050  06A1  0273               	subwf	___awdiv@dividend+1,w
  1051  06A2  1D03               	skipz
  1052  06A3  2EA6               	goto	u285
  1053  06A4  0870               	movf	___awdiv@divisor,w
  1054  06A5  0272               	subwf	___awdiv@dividend,w
  1055  06A6                     u285:
  1056  06A6  1C03               	skipc
  1057  06A7  2EA9               	goto	u281
  1058  06A8  2EAA               	goto	u280
  1059  06A9                     u281:
  1060  06A9  2EB1               	goto	l845
  1061  06AA                     u280:
  1062  06AA                     l841:
  1063  06AA  0870               	movf	___awdiv@divisor,w
  1064  06AB  02F2               	subwf	___awdiv@dividend,f
  1065  06AC  0871               	movf	___awdiv@divisor+1,w
  1066  06AD  1C03               	skipc
  1067  06AE  03F3               	decf	___awdiv@dividend+1,f
  1068  06AF  02F3               	subwf	___awdiv@dividend+1,f
  1069  06B0                     l843:
  1070  06B0  1477               	bsf	___awdiv@quotient,0
  1071  06B1                     l845:
  1072  06B1  3001               	movlw	1
  1073  06B2                     u295:
  1074  06B2  1003               	clrc
  1075  06B3  0CF1               	rrf	___awdiv@divisor+1,f
  1076  06B4  0CF0               	rrf	___awdiv@divisor,f
  1077  06B5  3EFF               	addlw	-1
  1078  06B6  1D03               	skipz
  1079  06B7  2EB2               	goto	u295
  1080  06B8                     l847:
  1081  06B8  3001               	movlw	1
  1082  06B9  02F5               	subwf	___awdiv@counter,f
  1083  06BA  1D03               	btfss	3,2
  1084  06BB  2EBD               	goto	u301
  1085  06BC  2EBE               	goto	u300
  1086  06BD                     u301:
  1087  06BD  2E99               	goto	l839
  1088  06BE                     u300:
  1089  06BE                     l849:
  1090  06BE  0876               	movf	___awdiv@sign,w
  1091  06BF  1903               	btfsc	3,2
  1092  06C0  2EC2               	goto	u311
  1093  06C1  2EC3               	goto	u310
  1094  06C2                     u311:
  1095  06C2  2EC8               	goto	l853
  1096  06C3                     u310:
  1097  06C3                     l851:
  1098  06C3  09F7               	comf	___awdiv@quotient,f
  1099  06C4  09F8               	comf	___awdiv@quotient+1,f
  1100  06C5  0AF7               	incf	___awdiv@quotient,f
  1101  06C6  1903               	skipnz
  1102  06C7  0AF8               	incf	___awdiv@quotient+1,f
  1103  06C8                     l853:
  1104  06C8  0878               	movf	___awdiv@quotient+1,w
  1105  06C9  00F1               	movwf	?___awdiv+1
  1106  06CA  0877               	movf	___awdiv@quotient,w
  1107  06CB  00F0               	movwf	?___awdiv
  1108  06CC                     l276:
  1109  06CC  0008               	return
  1110  06CD                     __end_of___awdiv:
  1111                           
  1112                           	psect	text3
  1113  05D8                     __ptext3:	
  1114 ;; *************** function _HangTram *****************
  1115 ;; Defined at:
  1116 ;;		line 59 in file "newmain.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  hangtram        2    0[COMMON] int 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  2    0[COMMON] int 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1130 ;;      Params:         2       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0
  1132 ;;      Temps:          1       0       0       0       0
  1133 ;;      Totals:         3       0       0       0       0
  1134 ;;Total ram usage:        3 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _HangTram
  1145  05D8                     _HangTram:
  1146  05D8                     l801:	
  1147                           ;incstack = 0
  1148                           ; Regs used in _HangTram: [wreg-fsr0h+status,2+status,0]
  1149                           
  1150                           
  1151                           ;newmain.c: 59: int HangTram(int hangtram);newmain.c: 60: {;newmain.c: 61:     PORTC = 0
      +                          xff;
  1152  05D8  30FF               	movlw	255
  1153  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1154  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1155  05DB  0087               	movwf	7	;volatile
  1156  05DC                     l803:
  1157                           
  1158                           ;newmain.c: 62:     PORTCbits.RC1 = 0;
  1159  05DC  1087               	bcf	7,1	;volatile
  1160  05DD                     l805:
  1161                           
  1162                           ;newmain.c: 63:     PORTB = ledcode[hangtram];
  1163  05DD  0870               	movf	HangTram@hangtram,w
  1164  05DE  00F2               	movwf	??_HangTram
  1165  05DF  0772               	addwf	??_HangTram,w
  1166  05E0  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1167  05E1  0084               	movwf	4
  1168  05E2  1383               	bcf	3,7	;select IRP bank0
  1169  05E3  0800               	movf	0,w
  1170  05E4  0086               	movwf	6	;volatile
  1171  05E5                     l23:
  1172  05E5  0008               	return
  1173  05E6                     __end_of_HangTram:
  1174                           
  1175                           	psect	text4
  1176  05CA                     __ptext4:	
  1177 ;; *************** function _HangNghin *****************
  1178 ;; Defined at:
  1179 ;;		line 66 in file "newmain.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  hangnghin       2    0[COMMON] int 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2    0[COMMON] int 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         2       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0
  1195 ;;      Temps:          1       0       0       0       0
  1196 ;;      Totals:         3       0       0       0       0
  1197 ;;Total ram usage:        3 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _HangNghin
  1208  05CA                     _HangNghin:
  1209  05CA                     l807:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _HangNghin: [wreg-fsr0h+status,2+status,0]
  1212                           
  1213                           
  1214                           ;newmain.c: 66: int HangNghin(int hangnghin);newmain.c: 67: {;newmain.c: 68:     PORTC =
      +                           0xff;
  1215  05CA  30FF               	movlw	255
  1216  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1217  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1218  05CD  0087               	movwf	7	;volatile
  1219  05CE                     l809:
  1220                           
  1221                           ;newmain.c: 69:     PORTCbits.RC0 = 0;
  1222  05CE  1007               	bcf	7,0	;volatile
  1223  05CF                     l811:
  1224                           
  1225                           ;newmain.c: 70:     PORTB = ledcode[hangnghin];
  1226  05CF  0870               	movf	HangNghin@hangnghin,w
  1227  05D0  00F2               	movwf	??_HangNghin
  1228  05D1  0772               	addwf	??_HangNghin,w
  1229  05D2  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1230  05D3  0084               	movwf	4
  1231  05D4  1383               	bcf	3,7	;select IRP bank0
  1232  05D5  0800               	movf	0,w
  1233  05D6  0086               	movwf	6	;volatile
  1234  05D7                     l26:
  1235  05D7  0008               	return
  1236  05D8                     __end_of_HangNghin:
  1237                           
  1238                           	psect	text5
  1239  05BC                     __ptext5:	
  1240 ;; *************** function _HangDV *****************
  1241 ;; Defined at:
  1242 ;;		line 45 in file "newmain.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  hangdv          2    0[COMMON] int 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  2    0[COMMON] int 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         2       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0
  1258 ;;      Temps:          1       0       0       0       0
  1259 ;;      Totals:         3       0       0       0       0
  1260 ;;Total ram usage:        3 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _HangDV
  1271  05BC                     _HangDV:
  1272  05BC                     l789:	
  1273                           ;incstack = 0
  1274                           ; Regs used in _HangDV: [wreg-fsr0h+status,2+status,0]
  1275                           
  1276                           
  1277                           ;newmain.c: 45: int HangDV(int hangdv);newmain.c: 46: {;newmain.c: 47:     PORTC = 0xff;
  1278  05BC  30FF               	movlw	255
  1279  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1280  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1281  05BF  0087               	movwf	7	;volatile
  1282  05C0                     l791:
  1283                           
  1284                           ;newmain.c: 48:     PORTCbits.RC3 = 0;
  1285  05C0  1187               	bcf	7,3	;volatile
  1286  05C1                     l793:
  1287                           
  1288                           ;newmain.c: 49:     PORTB = ledcode[hangdv];
  1289  05C1  0870               	movf	HangDV@hangdv,w
  1290  05C2  00F2               	movwf	??_HangDV
  1291  05C3  0772               	addwf	??_HangDV,w
  1292  05C4  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1293  05C5  0084               	movwf	4
  1294  05C6  1383               	bcf	3,7	;select IRP bank0
  1295  05C7  0800               	movf	0,w
  1296  05C8  0086               	movwf	6	;volatile
  1297  05C9                     l17:
  1298  05C9  0008               	return
  1299  05CA                     __end_of_HangDV:
  1300                           
  1301                           	psect	text6
  1302  05AE                     __ptext6:	
  1303 ;; *************** function _HangChuc *****************
  1304 ;; Defined at:
  1305 ;;		line 52 in file "newmain.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  hangchuc        2    0[COMMON] int 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  2    0[COMMON] int 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         2       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0
  1321 ;;      Temps:          1       0       0       0       0
  1322 ;;      Totals:         3       0       0       0       0
  1323 ;;Total ram usage:        3 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _HangChuc
  1334  05AE                     _HangChuc:
  1335  05AE                     l795:	
  1336                           ;incstack = 0
  1337                           ; Regs used in _HangChuc: [wreg-fsr0h+status,2+status,0]
  1338                           
  1339                           
  1340                           ;newmain.c: 52: int HangChuc(int hangchuc);newmain.c: 53: {;newmain.c: 54:     PORTC = 0
      +                          xff;
  1341  05AE  30FF               	movlw	255
  1342  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1343  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1344  05B1  0087               	movwf	7	;volatile
  1345  05B2                     l797:
  1346                           
  1347                           ;newmain.c: 55:     PORTCbits.RC2 = 0;
  1348  05B2  1107               	bcf	7,2	;volatile
  1349  05B3                     l799:
  1350                           
  1351                           ;newmain.c: 56:     PORTB = ledcode[hangchuc];
  1352  05B3  0870               	movf	HangChuc@hangchuc,w
  1353  05B4  00F2               	movwf	??_HangChuc
  1354  05B5  0772               	addwf	??_HangChuc,w
  1355  05B6  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1356  05B7  0084               	movwf	4
  1357  05B8  1383               	bcf	3,7	;select IRP bank0
  1358  05B9  0800               	movf	0,w
  1359  05BA  0086               	movwf	6	;volatile
  1360  05BB                     l20:
  1361  05BB  0008               	return
  1362  05BC                     __end_of_HangChuc:
  1363  007E                     btemp	set	126	;btemp
  1364  007E                     wtemp0	set	126
  1365                           
  1366                           	psect	config
  1367                           
  1368                           ;Config register CONFIG @ 0x2007
  1369                           ;	Oscillator Selection bits
  1370                           ;	FOSC = EXTRC, RC oscillator
  1371                           ;	Watchdog Timer Enable bit
  1372                           ;	WDTE = OFF, WDT disabled
  1373                           ;	Power-up Timer Enable bit
  1374                           ;	PWRTE = OFF, PWRT disabled
  1375                           ;	Brown-out Reset Enable bit
  1376                           ;	BOREN = OFF, BOR disabled
  1377                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1378                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1379                           ;	Data EEPROM Memory Code Protection bit
  1380                           ;	CPD = OFF, Data EEPROM code protection off
  1381                           ;	Flash Program Memory Write Enable bits
  1382                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1383                           ;	In-Circuit Debugger Mode bit
  1384                           ;	DEBUG = 0x1, unprogrammed default
  1385                           ;	Flash Program Memory Code Protection bit
  1386                           ;	CP = OFF, Code protection off
  1387  2007                     	org	8199
  1388  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     14      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    2484
                                              9 COMMON     2     2      0
                                              0 BANK0     14    14      0
                           _HangChuc
                             _HangDV
                          _HangNghin
                           _HangTram
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _HangTram                                             3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _HangNghin                                            3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _HangDV                                               3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _HangChuc                                             3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HangChuc
   _HangDV
   _HangNghin
   _HangTram
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 19 01:53:46 2021

                      pc 0002                       l20 05BB                       l23 05E5  
                     l17 05C9                       l26 05D7             ___awdiv@sign 0076  
                     fsr 0004                      l276 06CC                      l801 05D8  
                    l289 0665                      l811 05CF                      l803 05DC  
                    l805 05DD                      l821 0672                      l813 0666  
                    l901 06D7                      l807 05CA                      l831 0687  
                    l823 0676                      l815 0667                      l911 06EE  
                    l903 06DB                      l809 05CE                      l841 06AA  
                    l833 068A                      l825 067B                      l817 066B  
                    l921 0746                      l913 06F2                      l905 06DB  
                    l851 06C3                      l843 06B0                      l835 0691  
                    l827 067F                      l819 0670                      l923 0759  
                    l915 0705                      l907 06E3                      l853 06C8  
                    l845 06B1                      l837 0695                      l829 0681  
                    l861 0612                      l941 07B8                      l933 0785  
                    l925 0770                      l917 071C                      l909 06EC  
                    l791 05C0                      l847 06B8                      l839 0699  
                    l871 0628                      l863 0617                      l943 07CC  
                    l935 0790                      l927 0783                      l919 072F  
                    l793 05C1                      l849 06BE                      l881 0644  
                    l873 062B                      l865 0619                      l857 060D  
                    l945 07D5                      l937 0799                      l795 05AE  
                    l891 0661                      l883 064A                      l875 0632  
                    l867 061D                      l859 060E                      l947 07DD  
                    l939 07AD                      l797 05B2                      l789 05BC  
                    l885 0651                      l877 0636                      l869 0622  
                    l799 05B3                      l879 063A                      l887 0657  
                    l895 06CD                      l889 065C                      l897 06D0  
                    l899 06D4                      u300 06BE                      u220 066B  
                    u301 06BD                      u221 066A                      u310 06C3  
                    u230 0676                      u311 06C2                      u231 0675  
                    u240 0687                      u400 065C                      u320 0612  
                    u241 0686                      u401 065B                      u321 0611  
                    u330 061D                      u410 06EC                      u331 061C  
                    u411 06EB                      u260 0699                      u340 0628  
                    u420 07EA                      u261 0698                      u341 0627  
                    u421 07E9                      u255 068B                      u280 06AA  
                    u360 063A                      u281 06A9                      u361 0639  
                    u425 07E6                      u370 0644                      u275 069A  
                    u371 0643                      u355 062C                      u285 06A6  
                    u437 0794                      u390 0657                      u295 06B2  
                    u391 0656                      u375 0640                      u447 07A8  
                    u385 064B                      u457 07BC                      u467 07D0  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   _main 06CD                     btemp 007E                     start 0000  
           main@hangchuc 0038             main@hangtram 0036                    ?_main 0070  
        __end_of___awdiv 06CD          __end_of___awmod 0666          ___awdiv@divisor 0070  
        ___awdiv@counter 0075       HangNghin@hangnghin 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
       HangTram@hangtram 0070             main@timeTemp 0040                    main@i 003C  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_HangChuc 05BC         __end_of_HangTram 05E6          __initialization 07EE  
           __end_of_main 07EE       __size_of_HangNghin 000E                   ??_main 0079  
          main@hangnghin 0034         ___awdiv@dividend 0072                   _HangDV 05BC  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 07FC  
      __end_of_HangNghin 05D8           __pcstackCOMMON 0070             __pidataBANK0 05F9  
              ?_HangChuc 0070                ?_HangTram 0070                  ?_HangDV 0070  
             __pmaintext 06CD               ??_HangChuc 0072               ??_HangTram 0072  
        __size_of_HangDV 000E                  ___awdiv 0666                  ___awmod 060D  
                __ptext1 060D                  __ptext2 0666                  __ptext3 05D8  
                __ptext4 05CA                  __ptext5 05BC                  __ptext6 05AE  
                _ledcode 0020         ___awmod@dividend 0072     end_of_initialization 07FC  
              _PORTCbits 0007               main@hangdv 003A           __end_of_HangDV 05CA  
              _HangNghin 05CA             HangDV@hangdv 0070      start_initialization 07EE  
      __size_of_HangChuc 000E        __size_of_HangTram 000E                 ??_HangDV 0072  
             ?_HangNghin 0070               init_fetch0 05E6              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 0034                 ?___awdiv 0070  
               ?___awmod 0070              ??_HangNghin 0072                 _HangChuc 05AE  
               _HangTram 05D8         __size_of___awdiv 0067         __size_of___awmod 0059  
          __size_of_main 0121         HangChuc@hangchuc 0070                 main@time 003E  
               init_ram0 05EA  
