

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 16 00:50:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  063F                     __pidataBANK0:
   179                           
   180                           ;initializer for _ledcode
   181  063F  343F               	retlw	63
   182  0640  3400               	retlw	0
   183  0641  3406               	retlw	6
   184  0642  3400               	retlw	0
   185  0643  345B               	retlw	91
   186  0644  3400               	retlw	0
   187  0645  344F               	retlw	79
   188  0646  3400               	retlw	0
   189  0647  3466               	retlw	102
   190  0648  3400               	retlw	0
   191  0649  346D               	retlw	109
   192  064A  3400               	retlw	0
   193  064B  347D               	retlw	125
   194  064C  3400               	retlw	0
   195  064D  3407               	retlw	7
   196  064E  3400               	retlw	0
   197  064F  347F               	retlw	127
   198  0650  3400               	retlw	0
   199  0651  346F               	retlw	111
   200  0652  3400               	retlw	0
   201  001E                     _ADRESH	set	30
   202  001F                     _ADCON0	set	31
   203  001F                     _ADCON0bits	set	31
   204  0007                     _PORTC	set	7
   205  0008                     _PORTDbits	set	8
   206  0008                     _PORTD	set	8
   207  009E                     _ADRESL	set	158
   208  0085                     _TRISA	set	133
   209  0088                     _TRISD	set	136
   210  0087                     _TRISC	set	135
   211  009F                     _ADCON1	set	159
   212                           
   213                           	psect	cinit
   214  07E2                     start_initialization:	
   215                           ; #config settings
   216                           
   217  07E2                     __initialization:
   218                           
   219                           ; Initialize objects allocated to BANK0
   220  07E2  1383               	bcf	3,7	;select IRP bank0
   221  07E3  3034               	movlw	low (__pdataBANK0+20)
   222  07E4  00FD               	movwf	btemp+-1
   223  07E5  3006               	movlw	high __pidataBANK0
   224  07E6  00FE               	movwf	btemp
   225  07E7  303F               	movlw	low __pidataBANK0
   226  07E8  00FF               	movwf	btemp+1
   227  07E9  3020               	movlw	low __pdataBANK0
   228  07EA  0084               	movwf	4
   229  07EB  120A  118A  2630  120A  118A  	fcall	init_ram0
   230                           
   231                           ; Clear objects allocated to BANK0
   232  07F0  01B4               	clrf	__pbssBANK0& (0+127)
   233  07F1  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   234  07F2  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   235  07F3  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   236  07F4  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   237  07F5  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   238  07F6  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   239  07F7  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   240  07F8  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   241  07F9  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   242                           
   243                           ; Clear objects allocated to COMMON
   244  07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   245  07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2E53   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  007C                     __pbssCOMMON:
   255  007C                     _tempCTemp:
   256  007C                     	ds	2
   257                           
   258                           	psect	bssBANK0
   259  0034                     __pbssBANK0:
   260  0034                     _Vol:
   261  0034                     	ds	2
   262  0036                     _hangdv:
   263  0036                     	ds	2
   264  0038                     _hangchuc:
   265  0038                     	ds	2
   266  003A                     _hangtram:
   267  003A                     	ds	2
   268  003C                     _hangnghin:
   269  003C                     	ds	2
   270                           
   271                           	psect	dataBANK0
   272  0020                     __pdataBANK0:
   273  0020                     _ledcode:
   274  0020                     	ds	20
   275                           
   276                           	psect	inittext
   277  062C                     init_fetch0:	
   278                           ;	Called with low address in FSR and high address in W
   279                           
   280  062C  087E               	movf	btemp,w
   281  062D  008A               	movwf	10
   282  062E  087F               	movf	btemp+1,w
   283  062F  0082               	movwf	2
   284  0630                     init_ram0:	
   285                           ;Called with:
   286                           ;	high address of idata address in btemp 
   287                           ;	low address of idata address in btemp+1 
   288                           ;	low address of data in FSR
   289                           ;	high address + 1 of data in btemp-1
   290                           
   291  0630  120A  118A  262C  120A  118A  	fcall	init_fetch0
   292  0635  0080               	movwf	0
   293  0636  0A84               	incf	4,f
   294  0637  0804               	movf	4,w
   295  0638  067D               	xorwf	btemp+-1,w
   296  0639  1903               	btfsc	3,2
   297  063A  3400               	retlw	0
   298  063B  0AFF               	incf	btemp+1,f
   299  063C  1903               	btfsc	3,2
   300  063D  0AFE               	incf	btemp,f
   301  063E  2E30               	goto	init_ram0
   302                           
   303                           	psect	cstackCOMMON
   304  0070                     __pcstackCOMMON:
   305  0070                     ?_main:
   306  0070                     ?_HangDV:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_HangChuc:	
   310                           ; 2 bytes @ 0x0
   311                           
   312  0070                     ?_HangTram:	
   313                           ; 2 bytes @ 0x0
   314                           
   315  0070                     ?_HangNghin:	
   316                           ; 2 bytes @ 0x0
   317                           
   318  0070                     ?___lwdiv:	
   319                           ; 2 bytes @ 0x0
   320                           
   321  0070                     ?___lwmod:	
   322                           ; 2 bytes @ 0x0
   323                           
   324  0070                     HangDV@hangdv:	
   325                           ; 2 bytes @ 0x0
   326                           
   327  0070                     HangChuc@hangchuc:	
   328                           ; 2 bytes @ 0x0
   329                           
   330  0070                     HangTram@hangtram:	
   331                           ; 2 bytes @ 0x0
   332                           
   333  0070                     HangNghin@hangnghin:	
   334                           ; 2 bytes @ 0x0
   335                           
   336  0070                     ___lwdiv@divisor:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  0070                     ___lwmod@divisor:	
   340                           ; 2 bytes @ 0x0
   341                           
   342                           
   343                           ; 2 bytes @ 0x0
   344  0070                     	ds	2
   345  0072                     ??_HangDV:
   346  0072                     ??_HangChuc:	
   347                           ; 1 bytes @ 0x2
   348                           
   349  0072                     ??_HangTram:	
   350                           ; 1 bytes @ 0x2
   351                           
   352  0072                     ??_HangNghin:	
   353                           ; 1 bytes @ 0x2
   354                           
   355  0072                     ___lwdiv@dividend:	
   356                           ; 1 bytes @ 0x2
   357                           
   358  0072                     ___lwmod@dividend:	
   359                           ; 2 bytes @ 0x2
   360                           
   361                           
   362                           ; 2 bytes @ 0x2
   363  0072                     	ds	2
   364  0074                     ??___lwdiv:
   365  0074                     ??___lwmod:	
   366                           ; 1 bytes @ 0x4
   367                           
   368                           
   369                           ; 1 bytes @ 0x4
   370  0074                     	ds	1
   371  0075                     ___lwmod@counter:
   372  0075                     ___lwdiv@quotient:	
   373                           ; 1 bytes @ 0x5
   374                           
   375                           
   376                           ; 2 bytes @ 0x5
   377  0075                     	ds	2
   378  0077                     ___lwdiv@counter:
   379                           
   380                           ; 1 bytes @ 0x7
   381  0077                     	ds	1
   382  0078                     ?_Lcd_Display:
   383  0078                     Lcd_Display@Vol:	
   384                           ; 1 bytes @ 0x8
   385                           
   386                           
   387                           ; 2 bytes @ 0x8
   388  0078                     	ds	2
   389  007A                     ??_Lcd_Display:
   390                           
   391                           ; 1 bytes @ 0xA
   392  007A                     	ds	2
   393  007C                     ??_main:
   394                           
   395                           	psect	maintext
   396  0653                     __pmaintext:	
   397                           ; 1 bytes @ 0xC
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 116 in file "newmain.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels required when called: 2
   423 ;; This function calls:
   424 ;;		_Lcd_Display
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _main
   432  0653                     _main:
   433  0653                     l897:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436                           
   437                           
   438                           ;newmain.c: 118:     TRISC = 0;
   439  0653  1683               	bsf	3,5	;RP0=1, select bank1
   440  0654  1303               	bcf	3,6	;RP1=0, select bank1
   441  0655  0187               	clrf	7	;volatile
   442                           
   443                           ;newmain.c: 119:     TRISD = 0;
   444  0656  0188               	clrf	8	;volatile
   445                           
   446                           ;newmain.c: 120:     PORTC = 0;
   447  0657  1283               	bcf	3,5	;RP0=0, select bank0
   448  0658  1303               	bcf	3,6	;RP1=0, select bank0
   449  0659  0187               	clrf	7	;volatile
   450                           
   451                           ;newmain.c: 121:     PORTD = 0;
   452  065A  0188               	clrf	8	;volatile
   453  065B                     l899:
   454                           
   455                           ;newmain.c: 124:     TRISA = 0xff;
   456  065B  30FF               	movlw	255
   457  065C  1683               	bsf	3,5	;RP0=1, select bank1
   458  065D  1303               	bcf	3,6	;RP1=0, select bank1
   459  065E  0085               	movwf	5	;volatile
   460  065F                     l901:
   461                           
   462                           ;newmain.c: 126:     ADRESH = 0;
   463  065F  1283               	bcf	3,5	;RP0=0, select bank0
   464  0660  1303               	bcf	3,6	;RP1=0, select bank0
   465  0661  019E               	clrf	30	;volatile
   466  0662                     l903:
   467                           
   468                           ;newmain.c: 127:     ADRESL = 0;
   469  0662  1683               	bsf	3,5	;RP0=1, select bank1
   470  0663  1303               	bcf	3,6	;RP1=0, select bank1
   471  0664  019E               	clrf	30	;volatile
   472  0665                     l905:
   473                           
   474                           ;newmain.c: 129:     {;newmain.c: 131:     ADCON0 = 0b00000101;
   475  0665  3005               	movlw	5
   476  0666  1283               	bcf	3,5	;RP0=0, select bank0
   477  0667  1303               	bcf	3,6	;RP1=0, select bank0
   478  0668  009F               	movwf	31	;volatile
   479  0669                     l70:	
   480                           ;newmain.c: 133:     while(ADCON0bits.GO_nDONE);
   481                           
   482  0669  191F               	btfsc	31,2	;volatile
   483  066A  2E6C               	goto	u281
   484  066B  2E6D               	goto	u280
   485  066C                     u281:
   486  066C  2E69               	goto	l70
   487  066D                     u280:
   488  066D                     l907:
   489                           
   490                           ;newmain.c: 135:     Vol = ((ADRESH << 8) | ADRESL);
   491  066D  081E               	movf	30,w	;volatile
   492  066E  00B5               	movwf	_Vol+1
   493  066F  1683               	bsf	3,5	;RP0=1, select bank1
   494  0670  1303               	bcf	3,6	;RP1=0, select bank1
   495  0671  081E               	movf	30,w	;volatile
   496  0672  1283               	bcf	3,5	;RP0=0, select bank0
   497  0673  1303               	bcf	3,6	;RP1=0, select bank0
   498  0674  00B4               	movwf	_Vol
   499  0675                     l909:
   500                           
   501                           ;newmain.c: 136:     Lcd_Display(Vol);
   502  0675  0835               	movf	_Vol+1,w
   503  0676  00F9               	movwf	Lcd_Display@Vol+1
   504  0677  0834               	movf	_Vol,w
   505  0678  00F8               	movwf	Lcd_Display@Vol
   506  0679  120A  118A  2700  120A  118A  	fcall	_Lcd_Display
   507  067E  2E65               	goto	l905
   508  067F  120A  118A  2800   	ljmp	start
   509  0682                     __end_of_main:
   510                           
   511                           	psect	text1
   512  0700                     __ptext1:	
   513 ;; *************** function _Lcd_Display *****************
   514 ;; Defined at:
   515 ;;		line 49 in file "newmain.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  Vol             2    8[COMMON] int 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         2       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          2       0       0       0       0
   532 ;;      Totals:         4       0       0       0       0
   533 ;;Total ram usage:        4 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; Hardware stack levels required when called: 1
   536 ;; This function calls:
   537 ;;		_HangChuc
   538 ;;		_HangDV
   539 ;;		_HangNghin
   540 ;;		_HangTram
   541 ;;		___lwdiv
   542 ;;		___lwmod
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _Lcd_Display
   550  0700                     _Lcd_Display:
   551  0700                     l865:	
   552                           ;incstack = 0
   553                           ; Regs used in _Lcd_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   554                           
   555                           
   556                           ;newmain.c: 49: void Lcd_Display(Vol);newmain.c: 50: {;newmain.c: 51:     tempCTemp = Vo
      +                          l;
   557  0700  0879               	movf	Lcd_Display@Vol+1,w
   558  0701  00FD               	movwf	_tempCTemp+1
   559  0702  0878               	movf	Lcd_Display@Vol,w
   560  0703  00FC               	movwf	_tempCTemp
   561                           
   562                           ;newmain.c: 53:         tempCTemp = Vol;
   563  0704  0879               	movf	Lcd_Display@Vol+1,w
   564  0705  00FD               	movwf	_tempCTemp+1
   565  0706  0878               	movf	Lcd_Display@Vol,w
   566  0707  00FC               	movwf	_tempCTemp
   567  0708                     l867:
   568                           
   569                           ;newmain.c: 54:         hangdv = tempCTemp%10;
   570  0708  300A               	movlw	10
   571  0709  00F0               	movwf	___lwmod@divisor
   572  070A  3000               	movlw	0
   573  070B  00F1               	movwf	___lwmod@divisor+1
   574  070C  087D               	movf	_tempCTemp+1,w
   575  070D  00F3               	movwf	___lwmod@dividend+1
   576  070E  087C               	movf	_tempCTemp,w
   577  070F  00F2               	movwf	___lwmod@dividend
   578  0710  120A  118A  2682  120A  118A  	fcall	___lwmod
   579  0715  0871               	movf	?___lwmod+1,w
   580  0716  1283               	bcf	3,5	;RP0=0, select bank0
   581  0717  1303               	bcf	3,6	;RP1=0, select bank0
   582  0718  00B7               	movwf	_hangdv+1
   583  0719  0870               	movf	?___lwmod,w
   584  071A  00B6               	movwf	_hangdv
   585  071B                     l869:
   586                           
   587                           ;newmain.c: 55:         tempCTemp = (tempCTemp - hangdv)/10;
   588  071B  300A               	movlw	10
   589  071C  00F0               	movwf	___lwdiv@divisor
   590  071D  3000               	movlw	0
   591  071E  00F1               	movwf	___lwdiv@divisor+1
   592  071F  0836               	movf	_hangdv,w
   593  0720  027C               	subwf	_tempCTemp,w
   594  0721  00F2               	movwf	___lwdiv@dividend
   595  0722  0837               	movf	_hangdv+1,w
   596  0723  1C03               	skipc
   597  0724  0A37               	incf	_hangdv+1,w
   598  0725  027D               	subwf	_tempCTemp+1,w
   599  0726  00F3               	movwf	___lwdiv@dividend+1
   600  0727  120A  118A  26BC  120A  118A  	fcall	___lwdiv
   601  072C  0871               	movf	?___lwdiv+1,w
   602  072D  00FD               	movwf	_tempCTemp+1
   603  072E  0870               	movf	?___lwdiv,w
   604  072F  00FC               	movwf	_tempCTemp
   605  0730                     l871:
   606                           
   607                           ;newmain.c: 56:         hangchuc = tempCTemp%10;
   608  0730  300A               	movlw	10
   609  0731  00F0               	movwf	___lwmod@divisor
   610  0732  3000               	movlw	0
   611  0733  00F1               	movwf	___lwmod@divisor+1
   612  0734  087D               	movf	_tempCTemp+1,w
   613  0735  00F3               	movwf	___lwmod@dividend+1
   614  0736  087C               	movf	_tempCTemp,w
   615  0737  00F2               	movwf	___lwmod@dividend
   616  0738  120A  118A  2682  120A  118A  	fcall	___lwmod
   617  073D  0871               	movf	?___lwmod+1,w
   618  073E  1283               	bcf	3,5	;RP0=0, select bank0
   619  073F  1303               	bcf	3,6	;RP1=0, select bank0
   620  0740  00B9               	movwf	_hangchuc+1
   621  0741  0870               	movf	?___lwmod,w
   622  0742  00B8               	movwf	_hangchuc
   623  0743                     l873:
   624                           
   625                           ;newmain.c: 57:         tempCTemp = (tempCTemp - hangchuc)/10;
   626  0743  300A               	movlw	10
   627  0744  00F0               	movwf	___lwdiv@divisor
   628  0745  3000               	movlw	0
   629  0746  00F1               	movwf	___lwdiv@divisor+1
   630  0747  0838               	movf	_hangchuc,w
   631  0748  027C               	subwf	_tempCTemp,w
   632  0749  00F2               	movwf	___lwdiv@dividend
   633  074A  0839               	movf	_hangchuc+1,w
   634  074B  1C03               	skipc
   635  074C  0A39               	incf	_hangchuc+1,w
   636  074D  027D               	subwf	_tempCTemp+1,w
   637  074E  00F3               	movwf	___lwdiv@dividend+1
   638  074F  120A  118A  26BC  120A  118A  	fcall	___lwdiv
   639  0754  0871               	movf	?___lwdiv+1,w
   640  0755  00FD               	movwf	_tempCTemp+1
   641  0756  0870               	movf	?___lwdiv,w
   642  0757  00FC               	movwf	_tempCTemp
   643  0758                     l875:
   644                           
   645                           ;newmain.c: 58:         hangtram = tempCTemp%10;
   646  0758  300A               	movlw	10
   647  0759  00F0               	movwf	___lwmod@divisor
   648  075A  3000               	movlw	0
   649  075B  00F1               	movwf	___lwmod@divisor+1
   650  075C  087D               	movf	_tempCTemp+1,w
   651  075D  00F3               	movwf	___lwmod@dividend+1
   652  075E  087C               	movf	_tempCTemp,w
   653  075F  00F2               	movwf	___lwmod@dividend
   654  0760  120A  118A  2682  120A  118A  	fcall	___lwmod
   655  0765  0871               	movf	?___lwmod+1,w
   656  0766  1283               	bcf	3,5	;RP0=0, select bank0
   657  0767  1303               	bcf	3,6	;RP1=0, select bank0
   658  0768  00BB               	movwf	_hangtram+1
   659  0769  0870               	movf	?___lwmod,w
   660  076A  00BA               	movwf	_hangtram
   661  076B                     l877:
   662                           
   663                           ;newmain.c: 59:         tempCTemp = (tempCTemp - hangtram)/10;
   664  076B  300A               	movlw	10
   665  076C  00F0               	movwf	___lwdiv@divisor
   666  076D  3000               	movlw	0
   667  076E  00F1               	movwf	___lwdiv@divisor+1
   668  076F  083A               	movf	_hangtram,w
   669  0770  027C               	subwf	_tempCTemp,w
   670  0771  00F2               	movwf	___lwdiv@dividend
   671  0772  083B               	movf	_hangtram+1,w
   672  0773  1C03               	skipc
   673  0774  0A3B               	incf	_hangtram+1,w
   674  0775  027D               	subwf	_tempCTemp+1,w
   675  0776  00F3               	movwf	___lwdiv@dividend+1
   676  0777  120A  118A  26BC  120A  118A  	fcall	___lwdiv
   677  077C  0871               	movf	?___lwdiv+1,w
   678  077D  00FD               	movwf	_tempCTemp+1
   679  077E  0870               	movf	?___lwdiv,w
   680  077F  00FC               	movwf	_tempCTemp
   681  0780                     l879:
   682                           
   683                           ;newmain.c: 60:         hangnghin = tempCTemp%10;
   684  0780  300A               	movlw	10
   685  0781  00F0               	movwf	___lwmod@divisor
   686  0782  3000               	movlw	0
   687  0783  00F1               	movwf	___lwmod@divisor+1
   688  0784  087D               	movf	_tempCTemp+1,w
   689  0785  00F3               	movwf	___lwmod@dividend+1
   690  0786  087C               	movf	_tempCTemp,w
   691  0787  00F2               	movwf	___lwmod@dividend
   692  0788  120A  118A  2682  120A  118A  	fcall	___lwmod
   693  078D  0871               	movf	?___lwmod+1,w
   694  078E  1283               	bcf	3,5	;RP0=0, select bank0
   695  078F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0790  00BD               	movwf	_hangnghin+1
   697  0791  0870               	movf	?___lwmod,w
   698  0792  00BC               	movwf	_hangnghin
   699  0793                     l881:
   700                           
   701                           ;newmain.c: 62:             HangDV(hangdv);
   702  0793  0837               	movf	_hangdv+1,w
   703  0794  00F1               	movwf	HangDV@hangdv+1
   704  0795  0836               	movf	_hangdv,w
   705  0796  00F0               	movwf	HangDV@hangdv
   706  0797  120A  118A  2602  120A  118A  	fcall	_HangDV
   707  079C                     l883:
   708                           
   709                           ;newmain.c: 63:             _delay((unsigned long)((5)*(20000000/4000.0)));
   710  079C  3021               	movlw	33
   711  079D  00FB               	movwf	??_Lcd_Display+1
   712  079E  3076               	movlw	118
   713  079F  00FA               	movwf	??_Lcd_Display
   714  07A0                     u297:
   715  07A0  0BFA               	decfsz	??_Lcd_Display,f
   716  07A1  2FA0               	goto	u297
   717  07A2  0BFB               	decfsz	??_Lcd_Display+1,f
   718  07A3  2FA0               	goto	u297
   719  07A4  0000               	nop
   720  07A5                     l885:
   721                           
   722                           ;newmain.c: 64:             HangChuc(hangchuc);
   723  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   724  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   725  07A7  0839               	movf	_hangchuc+1,w
   726  07A8  00F1               	movwf	HangChuc@hangchuc+1
   727  07A9  0838               	movf	_hangchuc,w
   728  07AA  00F0               	movwf	HangChuc@hangchuc
   729  07AB  120A  118A  25F4  120A  118A  	fcall	_HangChuc
   730  07B0                     l887:
   731                           
   732                           ;newmain.c: 65:             _delay((unsigned long)((5)*(20000000/4000.0)));
   733  07B0  3021               	movlw	33
   734  07B1  00FB               	movwf	??_Lcd_Display+1
   735  07B2  3076               	movlw	118
   736  07B3  00FA               	movwf	??_Lcd_Display
   737  07B4                     u307:
   738  07B4  0BFA               	decfsz	??_Lcd_Display,f
   739  07B5  2FB4               	goto	u307
   740  07B6  0BFB               	decfsz	??_Lcd_Display+1,f
   741  07B7  2FB4               	goto	u307
   742  07B8  0000               	nop
   743  07B9                     l889:
   744                           
   745                           ;newmain.c: 66:             HangTram(hangtram);
   746  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   747  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   748  07BB  083B               	movf	_hangtram+1,w
   749  07BC  00F1               	movwf	HangTram@hangtram+1
   750  07BD  083A               	movf	_hangtram,w
   751  07BE  00F0               	movwf	HangTram@hangtram
   752  07BF  120A  118A  261E  120A  118A  	fcall	_HangTram
   753  07C4                     l891:
   754                           
   755                           ;newmain.c: 67:             _delay((unsigned long)((5)*(20000000/4000.0)));
   756  07C4  3021               	movlw	33
   757  07C5  00FB               	movwf	??_Lcd_Display+1
   758  07C6  3076               	movlw	118
   759  07C7  00FA               	movwf	??_Lcd_Display
   760  07C8                     u317:
   761  07C8  0BFA               	decfsz	??_Lcd_Display,f
   762  07C9  2FC8               	goto	u317
   763  07CA  0BFB               	decfsz	??_Lcd_Display+1,f
   764  07CB  2FC8               	goto	u317
   765  07CC  0000               	nop
   766  07CD                     l893:
   767                           
   768                           ;newmain.c: 68:             HangNghin(hangnghin);
   769  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   770  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   771  07CF  083D               	movf	_hangnghin+1,w
   772  07D0  00F1               	movwf	HangNghin@hangnghin+1
   773  07D1  083C               	movf	_hangnghin,w
   774  07D2  00F0               	movwf	HangNghin@hangnghin
   775  07D3  120A  118A  2610  120A  118A  	fcall	_HangNghin
   776  07D8                     l895:
   777                           
   778                           ;newmain.c: 69:             _delay((unsigned long)((5)*(20000000/4000.0)));
   779  07D8  3021               	movlw	33
   780  07D9  00FB               	movwf	??_Lcd_Display+1
   781  07DA  3076               	movlw	118
   782  07DB  00FA               	movwf	??_Lcd_Display
   783  07DC                     u327:
   784  07DC  0BFA               	decfsz	??_Lcd_Display,f
   785  07DD  2FDC               	goto	u327
   786  07DE  0BFB               	decfsz	??_Lcd_Display+1,f
   787  07DF  2FDC               	goto	u327
   788  07E0  0000               	nop
   789  07E1                     l49:
   790  07E1  0008               	return
   791  07E2                     __end_of_Lcd_Display:
   792                           
   793                           	psect	text2
   794  0682                     __ptext2:	
   795 ;; *************** function ___lwmod *****************
   796 ;; Defined at:
   797 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  divisor         2    0[COMMON] unsigned int 
   800 ;;  dividend        2    2[COMMON] unsigned int 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  counter         1    5[COMMON] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  2    0[COMMON] unsigned int 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         4       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0
   814 ;;      Temps:          1       0       0       0       0
   815 ;;      Totals:         6       0       0       0       0
   816 ;;Total ram usage:        6 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_Lcd_Display
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function ___lwmod
   827  0682                     ___lwmod:
   828  0682                     l843:	
   829                           ;incstack = 0
   830                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   831                           
   832  0682  0870               	movf	___lwmod@divisor,w
   833  0683  0471               	iorwf	___lwmod@divisor+1,w
   834  0684  1903               	btfsc	3,2
   835  0685  2E87               	goto	u221
   836  0686  2E88               	goto	u220
   837  0687                     u221:
   838  0687  2EB7               	goto	l861
   839  0688                     u220:
   840  0688                     l845:
   841  0688  01F5               	clrf	___lwmod@counter
   842  0689  0AF5               	incf	___lwmod@counter,f
   843  068A  2E96               	goto	l851
   844  068B                     l847:
   845  068B  3001               	movlw	1
   846  068C                     u235:
   847  068C  1003               	clrc
   848  068D  0DF0               	rlf	___lwmod@divisor,f
   849  068E  0DF1               	rlf	___lwmod@divisor+1,f
   850  068F  3EFF               	addlw	-1
   851  0690  1D03               	skipz
   852  0691  2E8C               	goto	u235
   853  0692                     l849:
   854  0692  3001               	movlw	1
   855  0693  00F4               	movwf	??___lwmod
   856  0694  0874               	movf	??___lwmod,w
   857  0695  07F5               	addwf	___lwmod@counter,f
   858  0696                     l851:
   859  0696  1FF1               	btfss	___lwmod@divisor+1,7
   860  0697  2E99               	goto	u241
   861  0698  2E9A               	goto	u240
   862  0699                     u241:
   863  0699  2E8B               	goto	l847
   864  069A                     u240:
   865  069A                     l853:
   866  069A  0871               	movf	___lwmod@divisor+1,w
   867  069B  0273               	subwf	___lwmod@dividend+1,w
   868  069C  1D03               	skipz
   869  069D  2EA0               	goto	u255
   870  069E  0870               	movf	___lwmod@divisor,w
   871  069F  0272               	subwf	___lwmod@dividend,w
   872  06A0                     u255:
   873  06A0  1C03               	skipc
   874  06A1  2EA3               	goto	u251
   875  06A2  2EA4               	goto	u250
   876  06A3                     u251:
   877  06A3  2EAA               	goto	l857
   878  06A4                     u250:
   879  06A4                     l855:
   880  06A4  0870               	movf	___lwmod@divisor,w
   881  06A5  02F2               	subwf	___lwmod@dividend,f
   882  06A6  0871               	movf	___lwmod@divisor+1,w
   883  06A7  1C03               	skipc
   884  06A8  03F3               	decf	___lwmod@dividend+1,f
   885  06A9  02F3               	subwf	___lwmod@dividend+1,f
   886  06AA                     l857:
   887  06AA  3001               	movlw	1
   888  06AB                     u265:
   889  06AB  1003               	clrc
   890  06AC  0CF1               	rrf	___lwmod@divisor+1,f
   891  06AD  0CF0               	rrf	___lwmod@divisor,f
   892  06AE  3EFF               	addlw	-1
   893  06AF  1D03               	skipz
   894  06B0  2EAB               	goto	u265
   895  06B1                     l859:
   896  06B1  3001               	movlw	1
   897  06B2  02F5               	subwf	___lwmod@counter,f
   898  06B3  1D03               	btfss	3,2
   899  06B4  2EB6               	goto	u271
   900  06B5  2EB7               	goto	u270
   901  06B6                     u271:
   902  06B6  2E9A               	goto	l853
   903  06B7                     u270:
   904  06B7                     l861:
   905  06B7  0873               	movf	___lwmod@dividend+1,w
   906  06B8  00F1               	movwf	?___lwmod+1
   907  06B9  0872               	movf	___lwmod@dividend,w
   908  06BA  00F0               	movwf	?___lwmod
   909  06BB                     l443:
   910  06BB  0008               	return
   911  06BC                     __end_of___lwmod:
   912                           
   913                           	psect	text3
   914  06BC                     __ptext3:	
   915 ;; *************** function ___lwdiv *****************
   916 ;; Defined at:
   917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  divisor         2    0[COMMON] unsigned int 
   920 ;;  dividend        2    2[COMMON] unsigned int 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  quotient        2    5[COMMON] unsigned int 
   923 ;;  counter         1    7[COMMON] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2    0[COMMON] unsigned int 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         4       0       0       0       0
   934 ;;      Locals:         3       0       0       0       0
   935 ;;      Temps:          1       0       0       0       0
   936 ;;      Totals:         8       0       0       0       0
   937 ;;Total ram usage:        8 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_Lcd_Display
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function ___lwdiv
   948  06BC                     ___lwdiv:
   949  06BC                     l817:	
   950                           ;incstack = 0
   951                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   952                           
   953  06BC  01F5               	clrf	___lwdiv@quotient
   954  06BD  01F6               	clrf	___lwdiv@quotient+1
   955  06BE                     l819:
   956  06BE  0870               	movf	___lwdiv@divisor,w
   957  06BF  0471               	iorwf	___lwdiv@divisor+1,w
   958  06C0  1903               	btfsc	3,2
   959  06C1  2EC3               	goto	u151
   960  06C2  2EC4               	goto	u150
   961  06C3                     u151:
   962  06C3  2EFB               	goto	l839
   963  06C4                     u150:
   964  06C4                     l821:
   965  06C4  01F7               	clrf	___lwdiv@counter
   966  06C5  0AF7               	incf	___lwdiv@counter,f
   967  06C6  2ED2               	goto	l827
   968  06C7                     l823:
   969  06C7  3001               	movlw	1
   970  06C8                     u165:
   971  06C8  1003               	clrc
   972  06C9  0DF0               	rlf	___lwdiv@divisor,f
   973  06CA  0DF1               	rlf	___lwdiv@divisor+1,f
   974  06CB  3EFF               	addlw	-1
   975  06CC  1D03               	skipz
   976  06CD  2EC8               	goto	u165
   977  06CE                     l825:
   978  06CE  3001               	movlw	1
   979  06CF  00F4               	movwf	??___lwdiv
   980  06D0  0874               	movf	??___lwdiv,w
   981  06D1  07F7               	addwf	___lwdiv@counter,f
   982  06D2                     l827:
   983  06D2  1FF1               	btfss	___lwdiv@divisor+1,7
   984  06D3  2ED5               	goto	u171
   985  06D4  2ED6               	goto	u170
   986  06D5                     u171:
   987  06D5  2EC7               	goto	l823
   988  06D6                     u170:
   989  06D6                     l829:
   990  06D6  3001               	movlw	1
   991  06D7                     u185:
   992  06D7  1003               	clrc
   993  06D8  0DF5               	rlf	___lwdiv@quotient,f
   994  06D9  0DF6               	rlf	___lwdiv@quotient+1,f
   995  06DA  3EFF               	addlw	-1
   996  06DB  1D03               	skipz
   997  06DC  2ED7               	goto	u185
   998  06DD  0871               	movf	___lwdiv@divisor+1,w
   999  06DE  0273               	subwf	___lwdiv@dividend+1,w
  1000  06DF  1D03               	skipz
  1001  06E0  2EE3               	goto	u195
  1002  06E1  0870               	movf	___lwdiv@divisor,w
  1003  06E2  0272               	subwf	___lwdiv@dividend,w
  1004  06E3                     u195:
  1005  06E3  1C03               	skipc
  1006  06E4  2EE6               	goto	u191
  1007  06E5  2EE7               	goto	u190
  1008  06E6                     u191:
  1009  06E6  2EEE               	goto	l835
  1010  06E7                     u190:
  1011  06E7                     l831:
  1012  06E7  0870               	movf	___lwdiv@divisor,w
  1013  06E8  02F2               	subwf	___lwdiv@dividend,f
  1014  06E9  0871               	movf	___lwdiv@divisor+1,w
  1015  06EA  1C03               	skipc
  1016  06EB  03F3               	decf	___lwdiv@dividend+1,f
  1017  06EC  02F3               	subwf	___lwdiv@dividend+1,f
  1018  06ED                     l833:
  1019  06ED  1475               	bsf	___lwdiv@quotient,0
  1020  06EE                     l835:
  1021  06EE  3001               	movlw	1
  1022  06EF                     u205:
  1023  06EF  1003               	clrc
  1024  06F0  0CF1               	rrf	___lwdiv@divisor+1,f
  1025  06F1  0CF0               	rrf	___lwdiv@divisor,f
  1026  06F2  3EFF               	addlw	-1
  1027  06F3  1D03               	skipz
  1028  06F4  2EEF               	goto	u205
  1029  06F5                     l837:
  1030  06F5  3001               	movlw	1
  1031  06F6  02F7               	subwf	___lwdiv@counter,f
  1032  06F7  1D03               	btfss	3,2
  1033  06F8  2EFA               	goto	u211
  1034  06F9  2EFB               	goto	u210
  1035  06FA                     u211:
  1036  06FA  2ED6               	goto	l829
  1037  06FB                     u210:
  1038  06FB                     l839:
  1039  06FB  0876               	movf	___lwdiv@quotient+1,w
  1040  06FC  00F1               	movwf	?___lwdiv+1
  1041  06FD  0875               	movf	___lwdiv@quotient,w
  1042  06FE  00F0               	movwf	?___lwdiv
  1043  06FF                     l433:
  1044  06FF  0008               	return
  1045  0700                     __end_of___lwdiv:
  1046                           
  1047                           	psect	text4
  1048  061E                     __ptext4:	
  1049 ;; *************** function _HangTram *****************
  1050 ;; Defined at:
  1051 ;;		line 87 in file "newmain.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  hangtram        2    0[COMMON] int 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  2    0[COMMON] int 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         2       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0
  1067 ;;      Temps:          1       0       0       0       0
  1068 ;;      Totals:         3       0       0       0       0
  1069 ;;Total ram usage:        3 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_Lcd_Display
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _HangTram
  1080  061E                     _HangTram:
  1081  061E                     l805:	
  1082                           ;incstack = 0
  1083                           ; Regs used in _HangTram: [wreg-fsr0h+status,2+status,0]
  1084                           
  1085                           
  1086                           ;newmain.c: 87: int HangTram(int hangtram);newmain.c: 88: {;newmain.c: 89:     PORTD = 0
      +                          xff;
  1087  061E  30FF               	movlw	255
  1088  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0621  0088               	movwf	8	;volatile
  1091  0622                     l807:
  1092                           
  1093                           ;newmain.c: 90:     PORTDbits.RD1 = 0;
  1094  0622  1088               	bcf	8,1	;volatile
  1095  0623                     l809:
  1096                           
  1097                           ;newmain.c: 91:     PORTC = ledcode[hangtram];
  1098  0623  0870               	movf	HangTram@hangtram,w
  1099  0624  00F2               	movwf	??_HangTram
  1100  0625  0772               	addwf	??_HangTram,w
  1101  0626  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1102  0627  0084               	movwf	4
  1103  0628  1383               	bcf	3,7	;select IRP bank0
  1104  0629  0800               	movf	0,w
  1105  062A  0087               	movwf	7	;volatile
  1106  062B                     l58:
  1107  062B  0008               	return
  1108  062C                     __end_of_HangTram:
  1109                           
  1110                           	psect	text5
  1111  0610                     __ptext5:	
  1112 ;; *************** function _HangNghin *****************
  1113 ;; Defined at:
  1114 ;;		line 94 in file "newmain.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  hangnghin       2    0[COMMON] int 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  2    0[COMMON] int 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         2       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          1       0       0       0       0
  1131 ;;      Totals:         3       0       0       0       0
  1132 ;;Total ram usage:        3 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_Lcd_Display
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _HangNghin
  1143  0610                     _HangNghin:
  1144  0610                     l811:	
  1145                           ;incstack = 0
  1146                           ; Regs used in _HangNghin: [wreg-fsr0h+status,2+status,0]
  1147                           
  1148                           
  1149                           ;newmain.c: 94: int HangNghin(int hangnghin);newmain.c: 95: {;newmain.c: 96:     PORTD =
      +                           0xff;
  1150  0610  30FF               	movlw	255
  1151  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0613  0088               	movwf	8	;volatile
  1154  0614                     l813:
  1155                           
  1156                           ;newmain.c: 97:     PORTDbits.RD0 = 0;
  1157  0614  1008               	bcf	8,0	;volatile
  1158  0615                     l815:
  1159                           
  1160                           ;newmain.c: 98:     PORTC = ledcode[hangnghin];
  1161  0615  0870               	movf	HangNghin@hangnghin,w
  1162  0616  00F2               	movwf	??_HangNghin
  1163  0617  0772               	addwf	??_HangNghin,w
  1164  0618  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1165  0619  0084               	movwf	4
  1166  061A  1383               	bcf	3,7	;select IRP bank0
  1167  061B  0800               	movf	0,w
  1168  061C  0087               	movwf	7	;volatile
  1169  061D                     l61:
  1170  061D  0008               	return
  1171  061E                     __end_of_HangNghin:
  1172                           
  1173                           	psect	text6
  1174  0602                     __ptext6:	
  1175 ;; *************** function _HangDV *****************
  1176 ;; Defined at:
  1177 ;;		line 73 in file "newmain.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  hangdv          2    0[COMMON] int 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2    0[COMMON] int 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         2       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          1       0       0       0       0
  1194 ;;      Totals:         3       0       0       0       0
  1195 ;;Total ram usage:        3 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_Lcd_Display
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function _HangDV
  1206  0602                     _HangDV:
  1207  0602                     l793:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _HangDV: [wreg-fsr0h+status,2+status,0]
  1210                           
  1211                           
  1212                           ;newmain.c: 73: int HangDV(int hangdv);newmain.c: 74: {;newmain.c: 75:     PORTD = 0xff;
  1213  0602  30FF               	movlw	255
  1214  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0605  0088               	movwf	8	;volatile
  1217  0606                     l795:
  1218                           
  1219                           ;newmain.c: 76:     PORTDbits.RD3 = 0;
  1220  0606  1188               	bcf	8,3	;volatile
  1221  0607                     l797:
  1222                           
  1223                           ;newmain.c: 77:     PORTC = ledcode[hangdv];
  1224  0607  0870               	movf	HangDV@hangdv,w
  1225  0608  00F2               	movwf	??_HangDV
  1226  0609  0772               	addwf	??_HangDV,w
  1227  060A  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1228  060B  0084               	movwf	4
  1229  060C  1383               	bcf	3,7	;select IRP bank0
  1230  060D  0800               	movf	0,w
  1231  060E  0087               	movwf	7	;volatile
  1232  060F                     l52:
  1233  060F  0008               	return
  1234  0610                     __end_of_HangDV:
  1235                           
  1236                           	psect	text7
  1237  05F4                     __ptext7:	
  1238 ;; *************** function _HangChuc *****************
  1239 ;; Defined at:
  1240 ;;		line 80 in file "newmain.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  hangchuc        2    0[COMMON] int 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  2    0[COMMON] int 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         2       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0
  1256 ;;      Temps:          1       0       0       0       0
  1257 ;;      Totals:         3       0       0       0       0
  1258 ;;Total ram usage:        3 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_Lcd_Display
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _HangChuc
  1269  05F4                     _HangChuc:
  1270  05F4                     l799:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _HangChuc: [wreg-fsr0h+status,2+status,0]
  1273                           
  1274                           
  1275                           ;newmain.c: 80: int HangChuc(int hangchuc);newmain.c: 81: {;newmain.c: 82:     PORTD = 0
      +                          xff;
  1276  05F4  30FF               	movlw	255
  1277  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1278  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1279  05F7  0088               	movwf	8	;volatile
  1280  05F8                     l801:
  1281                           
  1282                           ;newmain.c: 83:     PORTDbits.RD2 = 0;
  1283  05F8  1108               	bcf	8,2	;volatile
  1284  05F9                     l803:
  1285                           
  1286                           ;newmain.c: 84:     PORTC = ledcode[hangchuc];
  1287  05F9  0870               	movf	HangChuc@hangchuc,w
  1288  05FA  00F2               	movwf	??_HangChuc
  1289  05FB  0772               	addwf	??_HangChuc,w
  1290  05FC  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1291  05FD  0084               	movwf	4
  1292  05FE  1383               	bcf	3,7	;select IRP bank0
  1293  05FF  0800               	movf	0,w
  1294  0600  0087               	movwf	7	;volatile
  1295  0601                     l55:
  1296  0601  0008               	return
  1297  0602                     __end_of_HangChuc:
  1298  007E                     btemp	set	126	;btemp
  1299  007E                     wtemp0	set	126
  1300                           
  1301                           	psect	config
  1302                           
  1303                           ;Config register CONFIG @ 0x2007
  1304                           ;	Oscillator Selection bits
  1305                           ;	FOSC = EXTRC, RC oscillator
  1306                           ;	Watchdog Timer Enable bit
  1307                           ;	WDTE = OFF, WDT disabled
  1308                           ;	Power-up Timer Enable bit
  1309                           ;	PWRTE = OFF, PWRT disabled
  1310                           ;	Brown-out Reset Enable bit
  1311                           ;	BOREN = OFF, BOR disabled
  1312                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1313                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1314                           ;	Data EEPROM Memory Code Protection bit
  1315                           ;	CPD = OFF, Data EEPROM code protection off
  1316                           ;	Flash Program Memory Write Enable bits
  1317                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1318                           ;	In-Circuit Debugger Mode bit
  1319                           ;	DEBUG = 0x1, unprogrammed default
  1320                           ;	Flash Program Memory Code Protection bit
  1321                           ;	CP = OFF, Code protection off
  1322  2007                     	org	8199
  1323  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_Display
    _Lcd_Display->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1897
                        _Lcd_Display
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display                                          4     2      2    1897
                                              8 COMMON     4     2      2
                           _HangChuc
                             _HangDV
                          _HangNghin
                           _HangTram
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _HangTram                                             3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _HangNghin                                            3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _HangDV                                               3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _HangChuc                                             3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Display
     _HangChuc
     _HangDV
     _HangNghin
     _HangTram
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 16 00:50:31 2021

                      pc 0002                       l52 060F                       l61 061D  
                     l70 0669                       l55 0601                       l49 07E1  
                     l58 062B                       fsr 0004                      l433 06FF  
                    l443 06BB                      l801 05F8                      l803 05F9  
                    l811 0610                      l813 0614                      l805 061E  
                    l821 06C4                      l901 065F                      l815 0615  
                    l807 0622                      l831 06E7                      l823 06C7  
                    l903 0662                      l809 0623                      l833 06ED  
                    l825 06CE                      l817 06BC                      l905 0665  
                    l835 06EE                      l827 06D2                      l819 06BE  
                    l851 0696                      l843 0682                      l907 066D  
                    l837 06F5                      l829 06D6                      l853 069A  
                    l845 0688                      l861 06B7                      l909 0675  
                    l839 06FB                      l855 06A4                      l847 068B  
                    l871 0730                      l793 0602                      l857 06AA  
                    l849 0692                      l881 0793                      l873 0743  
                    l865 0700                      l795 0606                      l859 06B1  
                    l891 07C4                      l883 079C                      l875 0758  
                    l867 0708                      l797 0607                      l893 07CD  
                    l885 07A5                      l877 076B                      l869 071B  
                    l799 05F4                      l895 07D8                      l887 07B0  
                    l879 0780                      l889 07B9                      l897 0653  
                    l899 065B                      u210 06FB                      u211 06FA  
                    u220 0688                      u205 06EF                      u221 0687  
                    u150 06C4                      u151 06C3                      u240 069A  
                    u241 0699                      u170 06D6                      u250 06A4  
                    u171 06D5                      u251 06A3                      u235 068C  
                    u307 07B4                      u165 06C8                      u317 07C8  
                    u190 06E7                      u270 06B7                      u191 06E6  
                    u271 06B6                      u255 06A0                      u327 07DC  
                    u280 066D                      u185 06D7                      u265 06AB  
                    u281 066C                      u195 06E3                      u297 07A0  
                    _Vol 0034                      fsr0 0004                      indf 0000  
    __end_of_Lcd_Display 07E2                     _main 0653                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 0700  
        __end_of___lwmod 06BC       HangNghin@hangnghin 0070                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088         HangTram@hangtram 0070                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_HangChuc 0602  
       __end_of_HangTram 062C          __initialization 07E2             __end_of_main 0682  
            _Lcd_Display 0700       __size_of_HangNghin 000E                   ??_main 007C  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   _HangDV 0602                   _hangdv 0036  
              ??___lwdiv 0074                ??___lwmod 0074  __end_of__initialization 07FC  
      __end_of_HangNghin 061E           __pcstackCOMMON 0070             __pidataBANK0 063F  
              ?_HangChuc 0070                ?_HangTram 0070               __pbssBANK0 0034  
                ?_HangDV 0070               __pmaintext 0653               ??_HangChuc 0072  
             ??_HangTram 0072          __size_of_HangDV 000E                  ___lwdiv 06BC  
                ___lwmod 0682             ?_Lcd_Display 0078                  __ptext1 0700  
                __ptext2 0682                  __ptext3 06BC                  __ptext4 061E  
                __ptext5 0610                  __ptext6 0602                  __ptext7 05F4  
                _ledcode 0020     end_of_initialization 07FC                _PORTDbits 0008  
         __end_of_HangDV 0610                _HangNghin 0610             HangDV@hangdv 0070  
    start_initialization 07E2        __size_of_HangChuc 000E        __size_of_HangTram 000E  
               ??_HangDV 0072               ?_HangNghin 0070               init_fetch0 062C  
            __pdataBANK0 0020     __size_of_Lcd_Display 00E2              __pbssCOMMON 007C  
              ___latbits 0002         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
              _hangnghin 003C                 ?___lwmod 0070         ___lwdiv@quotient 0075  
              _tempCTemp 007C              ??_HangNghin 0072               _ADCON0bits 001F  
               _HangChuc 05F4                 _HangTram 061E         __size_of___lwdiv 0044  
       __size_of___lwmod 003A          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               _hangchuc 0038                 _hangtram 003A            __size_of_main 002F  
       HangChuc@hangchuc 0070                 init_ram0 0630         ___lwmod@dividend 0072  
          ??_Lcd_Display 007A           Lcd_Display@Vol 0078          ___lwmod@divisor 0070  
        ___lwmod@counter 0075  
