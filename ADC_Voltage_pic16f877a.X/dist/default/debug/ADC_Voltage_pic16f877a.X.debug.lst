

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 16 00:41:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179  063C                     __pidataBANK0:
   180                           
   181                           ;initializer for _ledcode
   182  063C  343F               	retlw	63
   183  063D  3400               	retlw	0
   184  063E  3406               	retlw	6
   185  063F  3400               	retlw	0
   186  0640  345B               	retlw	91
   187  0641  3400               	retlw	0
   188  0642  344F               	retlw	79
   189  0643  3400               	retlw	0
   190  0644  3466               	retlw	102
   191  0645  3400               	retlw	0
   192  0646  346D               	retlw	109
   193  0647  3400               	retlw	0
   194  0648  347D               	retlw	125
   195  0649  3400               	retlw	0
   196  064A  3407               	retlw	7
   197  064B  3400               	retlw	0
   198  064C  347F               	retlw	127
   199  064D  3400               	retlw	0
   200  064E  346F               	retlw	111
   201  064F  3400               	retlw	0
   202  001E                     _ADRESH	set	30
   203  001F                     _ADCON0	set	31
   204  001F                     _ADCON0bits	set	31
   205  0007                     _PORTC	set	7
   206  0008                     _PORTDbits	set	8
   207  0008                     _PORTD	set	8
   208  009E                     _ADRESL	set	158
   209  0085                     _TRISA	set	133
   210  0088                     _TRISD	set	136
   211  0087                     _TRISC	set	135
   212  009F                     _ADCON1	set	159
   213                           
   214                           	psect	cinit
   215  07E2                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07E2                     __initialization:
   219                           
   220                           ; Initialize objects allocated to BANK0
   221  07E2  1383               	bcf	3,7	;select IRP bank0
   222  07E3  3034               	movlw	low (__pdataBANK0+20)
   223  07E4  00FD               	movwf	btemp+-1
   224  07E5  3006               	movlw	high __pidataBANK0
   225  07E6  00FE               	movwf	btemp
   226  07E7  303C               	movlw	low __pidataBANK0
   227  07E8  00FF               	movwf	btemp+1
   228  07E9  3020               	movlw	low __pdataBANK0
   229  07EA  0084               	movwf	4
   230  07EB  120A  118A  2619  120A  118A  	fcall	init_ram0
   231                           
   232                           ; Clear objects allocated to BANK0
   233  07F0  01B4               	clrf	__pbssBANK0& (0+127)
   234  07F1  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   235  07F2  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   236  07F3  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   237  07F4  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   238  07F5  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   239  07F6  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   240  07F7  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   241  07F8  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   242  07F9  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   243                           
   244                           ; Clear objects allocated to COMMON
   245  07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   246  07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   247  07FC                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  07FC                     __end_of__initialization:
   251  07FC  0183               	clrf	3
   252  07FD  120A  118A  2E50   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMMON
   255  007C                     __pbssCOMMON:
   256  007C                     _tempCTemp:
   257  007C                     	ds	2
   258                           
   259                           	psect	bssBANK0
   260  0034                     __pbssBANK0:
   261  0034                     _Vol:
   262  0034                     	ds	2
   263  0036                     _hangdv:
   264  0036                     	ds	2
   265  0038                     _hangchuc:
   266  0038                     	ds	2
   267  003A                     _hangtram:
   268  003A                     	ds	2
   269  003C                     _hangnghin:
   270  003C                     	ds	2
   271                           
   272                           	psect	dataBANK0
   273  0020                     __pdataBANK0:
   274  0020                     _ledcode:
   275  0020                     	ds	20
   276                           
   277                           	psect	inittext
   278  0615                     init_fetch0:	
   279                           ;	Called with low address in FSR and high address in W
   280                           
   281  0615  087E               	movf	btemp,w
   282  0616  008A               	movwf	10
   283  0617  087F               	movf	btemp+1,w
   284  0618  0082               	movwf	2
   285  0619                     init_ram0:	
   286                           ;Called with:
   287                           ;	high address of idata address in btemp 
   288                           ;	low address of idata address in btemp+1 
   289                           ;	low address of data in FSR
   290                           ;	high address + 1 of data in btemp-1
   291                           
   292  0619  120A  118A  2615  120A  118A  	fcall	init_fetch0
   293  061E  0080               	movwf	0
   294  061F  0A84               	incf	4,f
   295  0620  0804               	movf	4,w
   296  0621  067D               	xorwf	btemp+-1,w
   297  0622  1903               	btfsc	3,2
   298  0623  3400               	retlw	0
   299  0624  0AFF               	incf	btemp+1,f
   300  0625  1903               	btfsc	3,2
   301  0626  0AFE               	incf	btemp,f
   302  0627  2E19               	goto	init_ram0
   303                           
   304                           	psect	cstackCOMMON
   305  0070                     __pcstackCOMMON:
   306  0070                     ?_AN0_Config:
   307  0070                     ??_AN0_Config:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_HangDV:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_HangChuc:	
   317                           ; 2 bytes @ 0x0
   318                           
   319  0070                     ?_HangTram:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     ?_HangNghin:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ?___lwdiv:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     ?___lwmod:	
   329                           ; 2 bytes @ 0x0
   330                           
   331  0070                     HangDV@hangdv:	
   332                           ; 2 bytes @ 0x0
   333                           
   334  0070                     HangChuc@hangchuc:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  0070                     HangTram@hangtram:	
   338                           ; 2 bytes @ 0x0
   339                           
   340  0070                     HangNghin@hangnghin:	
   341                           ; 2 bytes @ 0x0
   342                           
   343  0070                     ___lwdiv@divisor:	
   344                           ; 2 bytes @ 0x0
   345                           
   346  0070                     ___lwmod@divisor:	
   347                           ; 2 bytes @ 0x0
   348                           
   349                           
   350                           ; 2 bytes @ 0x0
   351  0070                     	ds	2
   352  0072                     ??_HangDV:
   353  0072                     ??_HangChuc:	
   354                           ; 1 bytes @ 0x2
   355                           
   356  0072                     ??_HangTram:	
   357                           ; 1 bytes @ 0x2
   358                           
   359  0072                     ??_HangNghin:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0072                     ___lwdiv@dividend:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ___lwmod@dividend:	
   366                           ; 2 bytes @ 0x2
   367                           
   368                           
   369                           ; 2 bytes @ 0x2
   370  0072                     	ds	2
   371  0074                     ??___lwdiv:
   372  0074                     ??___lwmod:	
   373                           ; 1 bytes @ 0x4
   374                           
   375                           
   376                           ; 1 bytes @ 0x4
   377  0074                     	ds	1
   378  0075                     ___lwmod@counter:
   379  0075                     ___lwdiv@quotient:	
   380                           ; 1 bytes @ 0x5
   381                           
   382                           
   383                           ; 2 bytes @ 0x5
   384  0075                     	ds	2
   385  0077                     ___lwdiv@counter:
   386                           
   387                           ; 1 bytes @ 0x7
   388  0077                     	ds	1
   389  0078                     ?_Lcd_Display:
   390  0078                     Lcd_Display@Vol:	
   391                           ; 1 bytes @ 0x8
   392                           
   393                           
   394                           ; 2 bytes @ 0x8
   395  0078                     	ds	2
   396  007A                     ??_Lcd_Display:
   397                           
   398                           ; 1 bytes @ 0xA
   399  007A                     	ds	2
   400  007C                     ??_main:
   401                           
   402                           	psect	maintext
   403  0650                     __pmaintext:	
   404                           ; 1 bytes @ 0xC
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 116 in file "newmain.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0
   427 ;;      Totals:         0       0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels required when called: 2
   430 ;; This function calls:
   431 ;;		_AN0_Config
   432 ;;		_Lcd_Display
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  0650                     _main:
   441  0650                     l905:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;newmain.c: 118:     TRISC = 0;
   447  0650  1683               	bsf	3,5	;RP0=1, select bank1
   448  0651  1303               	bcf	3,6	;RP1=0, select bank1
   449  0652  0187               	clrf	7	;volatile
   450                           
   451                           ;newmain.c: 119:     TRISD = 0;
   452  0653  0188               	clrf	8	;volatile
   453                           
   454                           ;newmain.c: 120:     PORTC = 0;
   455  0654  1283               	bcf	3,5	;RP0=0, select bank0
   456  0655  1303               	bcf	3,6	;RP1=0, select bank0
   457  0656  0187               	clrf	7	;volatile
   458                           
   459                           ;newmain.c: 121:     PORTD = 0;
   460  0657  0188               	clrf	8	;volatile
   461  0658                     l907:
   462                           
   463                           ;newmain.c: 124:     TRISA = 0xff;
   464  0658  30FF               	movlw	255
   465  0659  1683               	bsf	3,5	;RP0=1, select bank1
   466  065A  1303               	bcf	3,6	;RP1=0, select bank1
   467  065B  0085               	movwf	5	;volatile
   468  065C                     l909:
   469                           
   470                           ;newmain.c: 126:     ADRESH = 0;
   471  065C  1283               	bcf	3,5	;RP0=0, select bank0
   472  065D  1303               	bcf	3,6	;RP1=0, select bank0
   473  065E  019E               	clrf	30	;volatile
   474  065F                     l911:
   475                           
   476                           ;newmain.c: 127:     ADRESL = 0;
   477  065F  1683               	bsf	3,5	;RP0=1, select bank1
   478  0660  1303               	bcf	3,6	;RP1=0, select bank1
   479  0661  019E               	clrf	30	;volatile
   480  0662                     l913:
   481                           
   482                           ;newmain.c: 130:     AN0_Config();
   483  0662  120A  118A  2628  120A  118A  	fcall	_AN0_Config
   484  0667                     l70:	
   485                           ;newmain.c: 132:     while(ADCON0bits.GO_nDONE);
   486                           
   487  0667  1283               	bcf	3,5	;RP0=0, select bank0
   488  0668  1303               	bcf	3,6	;RP1=0, select bank0
   489  0669  191F               	btfsc	31,2	;volatile
   490  066A  2E6C               	goto	u281
   491  066B  2E6D               	goto	u280
   492  066C                     u281:
   493  066C  2E67               	goto	l70
   494  066D                     u280:
   495  066D                     l915:
   496                           
   497                           ;newmain.c: 134:     Vol = ((ADRESH << 8) | ADRESL);
   498  066D  081E               	movf	30,w	;volatile
   499  066E  00B5               	movwf	_Vol+1
   500  066F  1683               	bsf	3,5	;RP0=1, select bank1
   501  0670  1303               	bcf	3,6	;RP1=0, select bank1
   502  0671  081E               	movf	30,w	;volatile
   503  0672  1283               	bcf	3,5	;RP0=0, select bank0
   504  0673  1303               	bcf	3,6	;RP1=0, select bank0
   505  0674  00B4               	movwf	_Vol
   506  0675                     l917:
   507                           
   508                           ;newmain.c: 135:     Lcd_Display(Vol);
   509  0675  0835               	movf	_Vol+1,w
   510  0676  00F9               	movwf	Lcd_Display@Vol+1
   511  0677  0834               	movf	_Vol,w
   512  0678  00F8               	movwf	Lcd_Display@Vol
   513  0679  120A  118A  2700  120A  118A  	fcall	_Lcd_Display
   514  067E  2E62               	goto	l913
   515  067F  120A  118A  2800   	ljmp	start
   516  0682                     __end_of_main:
   517                           
   518                           	psect	text1
   519  0700                     __ptext1:	
   520 ;; *************** function _Lcd_Display *****************
   521 ;; Defined at:
   522 ;;		line 49 in file "newmain.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  Vol             2    8[COMMON] int 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         2       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          2       0       0       0       0
   539 ;;      Totals:         4       0       0       0       0
   540 ;;Total ram usage:        4 bytes
   541 ;; Hardware stack levels used: 1
   542 ;; Hardware stack levels required when called: 1
   543 ;; This function calls:
   544 ;;		_HangChuc
   545 ;;		_HangDV
   546 ;;		_HangNghin
   547 ;;		_HangTram
   548 ;;		___lwdiv
   549 ;;		___lwmod
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _Lcd_Display
   557  0700                     _Lcd_Display:
   558  0700                     l865:	
   559                           ;incstack = 0
   560                           ; Regs used in _Lcd_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   561                           
   562                           
   563                           ;newmain.c: 49: void Lcd_Display(Vol);newmain.c: 50: {;newmain.c: 51:     tempCTemp = Vo
      +                          l;
   564  0700  0879               	movf	Lcd_Display@Vol+1,w
   565  0701  00FD               	movwf	_tempCTemp+1
   566  0702  0878               	movf	Lcd_Display@Vol,w
   567  0703  00FC               	movwf	_tempCTemp
   568                           
   569                           ;newmain.c: 53:         tempCTemp = Vol;
   570  0704  0879               	movf	Lcd_Display@Vol+1,w
   571  0705  00FD               	movwf	_tempCTemp+1
   572  0706  0878               	movf	Lcd_Display@Vol,w
   573  0707  00FC               	movwf	_tempCTemp
   574  0708                     l867:
   575                           
   576                           ;newmain.c: 54:         hangdv = tempCTemp%10;
   577  0708  300A               	movlw	10
   578  0709  00F0               	movwf	___lwmod@divisor
   579  070A  3000               	movlw	0
   580  070B  00F1               	movwf	___lwmod@divisor+1
   581  070C  087D               	movf	_tempCTemp+1,w
   582  070D  00F3               	movwf	___lwmod@dividend+1
   583  070E  087C               	movf	_tempCTemp,w
   584  070F  00F2               	movwf	___lwmod@dividend
   585  0710  120A  118A  2682  120A  118A  	fcall	___lwmod
   586  0715  0871               	movf	?___lwmod+1,w
   587  0716  1283               	bcf	3,5	;RP0=0, select bank0
   588  0717  1303               	bcf	3,6	;RP1=0, select bank0
   589  0718  00B7               	movwf	_hangdv+1
   590  0719  0870               	movf	?___lwmod,w
   591  071A  00B6               	movwf	_hangdv
   592  071B                     l869:
   593                           
   594                           ;newmain.c: 55:         tempCTemp = (tempCTemp - hangdv)/10;
   595  071B  300A               	movlw	10
   596  071C  00F0               	movwf	___lwdiv@divisor
   597  071D  3000               	movlw	0
   598  071E  00F1               	movwf	___lwdiv@divisor+1
   599  071F  0836               	movf	_hangdv,w
   600  0720  027C               	subwf	_tempCTemp,w
   601  0721  00F2               	movwf	___lwdiv@dividend
   602  0722  0837               	movf	_hangdv+1,w
   603  0723  1C03               	skipc
   604  0724  0A37               	incf	_hangdv+1,w
   605  0725  027D               	subwf	_tempCTemp+1,w
   606  0726  00F3               	movwf	___lwdiv@dividend+1
   607  0727  120A  118A  26BC  120A  118A  	fcall	___lwdiv
   608  072C  0871               	movf	?___lwdiv+1,w
   609  072D  00FD               	movwf	_tempCTemp+1
   610  072E  0870               	movf	?___lwdiv,w
   611  072F  00FC               	movwf	_tempCTemp
   612  0730                     l871:
   613                           
   614                           ;newmain.c: 56:         hangchuc = tempCTemp%10;
   615  0730  300A               	movlw	10
   616  0731  00F0               	movwf	___lwmod@divisor
   617  0732  3000               	movlw	0
   618  0733  00F1               	movwf	___lwmod@divisor+1
   619  0734  087D               	movf	_tempCTemp+1,w
   620  0735  00F3               	movwf	___lwmod@dividend+1
   621  0736  087C               	movf	_tempCTemp,w
   622  0737  00F2               	movwf	___lwmod@dividend
   623  0738  120A  118A  2682  120A  118A  	fcall	___lwmod
   624  073D  0871               	movf	?___lwmod+1,w
   625  073E  1283               	bcf	3,5	;RP0=0, select bank0
   626  073F  1303               	bcf	3,6	;RP1=0, select bank0
   627  0740  00B9               	movwf	_hangchuc+1
   628  0741  0870               	movf	?___lwmod,w
   629  0742  00B8               	movwf	_hangchuc
   630  0743                     l873:
   631                           
   632                           ;newmain.c: 57:         tempCTemp = (tempCTemp - hangchuc)/10;
   633  0743  300A               	movlw	10
   634  0744  00F0               	movwf	___lwdiv@divisor
   635  0745  3000               	movlw	0
   636  0746  00F1               	movwf	___lwdiv@divisor+1
   637  0747  0838               	movf	_hangchuc,w
   638  0748  027C               	subwf	_tempCTemp,w
   639  0749  00F2               	movwf	___lwdiv@dividend
   640  074A  0839               	movf	_hangchuc+1,w
   641  074B  1C03               	skipc
   642  074C  0A39               	incf	_hangchuc+1,w
   643  074D  027D               	subwf	_tempCTemp+1,w
   644  074E  00F3               	movwf	___lwdiv@dividend+1
   645  074F  120A  118A  26BC  120A  118A  	fcall	___lwdiv
   646  0754  0871               	movf	?___lwdiv+1,w
   647  0755  00FD               	movwf	_tempCTemp+1
   648  0756  0870               	movf	?___lwdiv,w
   649  0757  00FC               	movwf	_tempCTemp
   650  0758                     l875:
   651                           
   652                           ;newmain.c: 58:         hangtram = tempCTemp%10;
   653  0758  300A               	movlw	10
   654  0759  00F0               	movwf	___lwmod@divisor
   655  075A  3000               	movlw	0
   656  075B  00F1               	movwf	___lwmod@divisor+1
   657  075C  087D               	movf	_tempCTemp+1,w
   658  075D  00F3               	movwf	___lwmod@dividend+1
   659  075E  087C               	movf	_tempCTemp,w
   660  075F  00F2               	movwf	___lwmod@dividend
   661  0760  120A  118A  2682  120A  118A  	fcall	___lwmod
   662  0765  0871               	movf	?___lwmod+1,w
   663  0766  1283               	bcf	3,5	;RP0=0, select bank0
   664  0767  1303               	bcf	3,6	;RP1=0, select bank0
   665  0768  00BB               	movwf	_hangtram+1
   666  0769  0870               	movf	?___lwmod,w
   667  076A  00BA               	movwf	_hangtram
   668  076B                     l877:
   669                           
   670                           ;newmain.c: 59:         tempCTemp = (tempCTemp - hangtram)/10;
   671  076B  300A               	movlw	10
   672  076C  00F0               	movwf	___lwdiv@divisor
   673  076D  3000               	movlw	0
   674  076E  00F1               	movwf	___lwdiv@divisor+1
   675  076F  083A               	movf	_hangtram,w
   676  0770  027C               	subwf	_tempCTemp,w
   677  0771  00F2               	movwf	___lwdiv@dividend
   678  0772  083B               	movf	_hangtram+1,w
   679  0773  1C03               	skipc
   680  0774  0A3B               	incf	_hangtram+1,w
   681  0775  027D               	subwf	_tempCTemp+1,w
   682  0776  00F3               	movwf	___lwdiv@dividend+1
   683  0777  120A  118A  26BC  120A  118A  	fcall	___lwdiv
   684  077C  0871               	movf	?___lwdiv+1,w
   685  077D  00FD               	movwf	_tempCTemp+1
   686  077E  0870               	movf	?___lwdiv,w
   687  077F  00FC               	movwf	_tempCTemp
   688  0780                     l879:
   689                           
   690                           ;newmain.c: 60:         hangnghin = tempCTemp%10;
   691  0780  300A               	movlw	10
   692  0781  00F0               	movwf	___lwmod@divisor
   693  0782  3000               	movlw	0
   694  0783  00F1               	movwf	___lwmod@divisor+1
   695  0784  087D               	movf	_tempCTemp+1,w
   696  0785  00F3               	movwf	___lwmod@dividend+1
   697  0786  087C               	movf	_tempCTemp,w
   698  0787  00F2               	movwf	___lwmod@dividend
   699  0788  120A  118A  2682  120A  118A  	fcall	___lwmod
   700  078D  0871               	movf	?___lwmod+1,w
   701  078E  1283               	bcf	3,5	;RP0=0, select bank0
   702  078F  1303               	bcf	3,6	;RP1=0, select bank0
   703  0790  00BD               	movwf	_hangnghin+1
   704  0791  0870               	movf	?___lwmod,w
   705  0792  00BC               	movwf	_hangnghin
   706  0793                     l881:
   707                           
   708                           ;newmain.c: 62:             HangDV(hangdv);
   709  0793  0837               	movf	_hangdv+1,w
   710  0794  00F1               	movwf	HangDV@hangdv+1
   711  0795  0836               	movf	_hangdv,w
   712  0796  00F0               	movwf	HangDV@hangdv
   713  0797  120A  118A  25EB  120A  118A  	fcall	_HangDV
   714  079C                     l883:
   715                           
   716                           ;newmain.c: 63:             _delay((unsigned long)((5)*(20000000/4000.0)));
   717  079C  3021               	movlw	33
   718  079D  00FB               	movwf	??_Lcd_Display+1
   719  079E  3076               	movlw	118
   720  079F  00FA               	movwf	??_Lcd_Display
   721  07A0                     u297:
   722  07A0  0BFA               	decfsz	??_Lcd_Display,f
   723  07A1  2FA0               	goto	u297
   724  07A2  0BFB               	decfsz	??_Lcd_Display+1,f
   725  07A3  2FA0               	goto	u297
   726  07A4  0000               	nop
   727  07A5                     l885:
   728                           
   729                           ;newmain.c: 64:             HangChuc(hangchuc);
   730  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   731  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   732  07A7  0839               	movf	_hangchuc+1,w
   733  07A8  00F1               	movwf	HangChuc@hangchuc+1
   734  07A9  0838               	movf	_hangchuc,w
   735  07AA  00F0               	movwf	HangChuc@hangchuc
   736  07AB  120A  118A  25DD  120A  118A  	fcall	_HangChuc
   737  07B0                     l887:
   738                           
   739                           ;newmain.c: 65:             _delay((unsigned long)((5)*(20000000/4000.0)));
   740  07B0  3021               	movlw	33
   741  07B1  00FB               	movwf	??_Lcd_Display+1
   742  07B2  3076               	movlw	118
   743  07B3  00FA               	movwf	??_Lcd_Display
   744  07B4                     u307:
   745  07B4  0BFA               	decfsz	??_Lcd_Display,f
   746  07B5  2FB4               	goto	u307
   747  07B6  0BFB               	decfsz	??_Lcd_Display+1,f
   748  07B7  2FB4               	goto	u307
   749  07B8  0000               	nop
   750  07B9                     l889:
   751                           
   752                           ;newmain.c: 66:             HangTram(hangtram);
   753  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   754  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   755  07BB  083B               	movf	_hangtram+1,w
   756  07BC  00F1               	movwf	HangTram@hangtram+1
   757  07BD  083A               	movf	_hangtram,w
   758  07BE  00F0               	movwf	HangTram@hangtram
   759  07BF  120A  118A  2607  120A  118A  	fcall	_HangTram
   760  07C4                     l891:
   761                           
   762                           ;newmain.c: 67:             _delay((unsigned long)((5)*(20000000/4000.0)));
   763  07C4  3021               	movlw	33
   764  07C5  00FB               	movwf	??_Lcd_Display+1
   765  07C6  3076               	movlw	118
   766  07C7  00FA               	movwf	??_Lcd_Display
   767  07C8                     u317:
   768  07C8  0BFA               	decfsz	??_Lcd_Display,f
   769  07C9  2FC8               	goto	u317
   770  07CA  0BFB               	decfsz	??_Lcd_Display+1,f
   771  07CB  2FC8               	goto	u317
   772  07CC  0000               	nop
   773  07CD                     l893:
   774                           
   775                           ;newmain.c: 68:             HangNghin(hangnghin);
   776  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   777  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   778  07CF  083D               	movf	_hangnghin+1,w
   779  07D0  00F1               	movwf	HangNghin@hangnghin+1
   780  07D1  083C               	movf	_hangnghin,w
   781  07D2  00F0               	movwf	HangNghin@hangnghin
   782  07D3  120A  118A  25F9  120A  118A  	fcall	_HangNghin
   783  07D8                     l895:
   784                           
   785                           ;newmain.c: 69:             _delay((unsigned long)((5)*(20000000/4000.0)));
   786  07D8  3021               	movlw	33
   787  07D9  00FB               	movwf	??_Lcd_Display+1
   788  07DA  3076               	movlw	118
   789  07DB  00FA               	movwf	??_Lcd_Display
   790  07DC                     u327:
   791  07DC  0BFA               	decfsz	??_Lcd_Display,f
   792  07DD  2FDC               	goto	u327
   793  07DE  0BFB               	decfsz	??_Lcd_Display+1,f
   794  07DF  2FDC               	goto	u327
   795  07E0  0000               	nop
   796  07E1                     l49:
   797  07E1  0008               	return
   798  07E2                     __end_of_Lcd_Display:
   799                           
   800                           	psect	text2
   801  0682                     __ptext2:	
   802 ;; *************** function ___lwmod *****************
   803 ;; Defined at:
   804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  divisor         2    0[COMMON] unsigned int 
   807 ;;  dividend        2    2[COMMON] unsigned int 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  counter         1    5[COMMON] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  2    0[COMMON] unsigned int 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         4       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0
   821 ;;      Temps:          1       0       0       0       0
   822 ;;      Totals:         6       0       0       0       0
   823 ;;Total ram usage:        6 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_Lcd_Display
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function ___lwmod
   834  0682                     ___lwmod:
   835  0682                     l843:	
   836                           ;incstack = 0
   837                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   838                           
   839  0682  0870               	movf	___lwmod@divisor,w
   840  0683  0471               	iorwf	___lwmod@divisor+1,w
   841  0684  1903               	btfsc	3,2
   842  0685  2E87               	goto	u221
   843  0686  2E88               	goto	u220
   844  0687                     u221:
   845  0687  2EB7               	goto	l861
   846  0688                     u220:
   847  0688                     l845:
   848  0688  01F5               	clrf	___lwmod@counter
   849  0689  0AF5               	incf	___lwmod@counter,f
   850  068A  2E96               	goto	l851
   851  068B                     l847:
   852  068B  3001               	movlw	1
   853  068C                     u235:
   854  068C  1003               	clrc
   855  068D  0DF0               	rlf	___lwmod@divisor,f
   856  068E  0DF1               	rlf	___lwmod@divisor+1,f
   857  068F  3EFF               	addlw	-1
   858  0690  1D03               	skipz
   859  0691  2E8C               	goto	u235
   860  0692                     l849:
   861  0692  3001               	movlw	1
   862  0693  00F4               	movwf	??___lwmod
   863  0694  0874               	movf	??___lwmod,w
   864  0695  07F5               	addwf	___lwmod@counter,f
   865  0696                     l851:
   866  0696  1FF1               	btfss	___lwmod@divisor+1,7
   867  0697  2E99               	goto	u241
   868  0698  2E9A               	goto	u240
   869  0699                     u241:
   870  0699  2E8B               	goto	l847
   871  069A                     u240:
   872  069A                     l853:
   873  069A  0871               	movf	___lwmod@divisor+1,w
   874  069B  0273               	subwf	___lwmod@dividend+1,w
   875  069C  1D03               	skipz
   876  069D  2EA0               	goto	u255
   877  069E  0870               	movf	___lwmod@divisor,w
   878  069F  0272               	subwf	___lwmod@dividend,w
   879  06A0                     u255:
   880  06A0  1C03               	skipc
   881  06A1  2EA3               	goto	u251
   882  06A2  2EA4               	goto	u250
   883  06A3                     u251:
   884  06A3  2EAA               	goto	l857
   885  06A4                     u250:
   886  06A4                     l855:
   887  06A4  0870               	movf	___lwmod@divisor,w
   888  06A5  02F2               	subwf	___lwmod@dividend,f
   889  06A6  0871               	movf	___lwmod@divisor+1,w
   890  06A7  1C03               	skipc
   891  06A8  03F3               	decf	___lwmod@dividend+1,f
   892  06A9  02F3               	subwf	___lwmod@dividend+1,f
   893  06AA                     l857:
   894  06AA  3001               	movlw	1
   895  06AB                     u265:
   896  06AB  1003               	clrc
   897  06AC  0CF1               	rrf	___lwmod@divisor+1,f
   898  06AD  0CF0               	rrf	___lwmod@divisor,f
   899  06AE  3EFF               	addlw	-1
   900  06AF  1D03               	skipz
   901  06B0  2EAB               	goto	u265
   902  06B1                     l859:
   903  06B1  3001               	movlw	1
   904  06B2  02F5               	subwf	___lwmod@counter,f
   905  06B3  1D03               	btfss	3,2
   906  06B4  2EB6               	goto	u271
   907  06B5  2EB7               	goto	u270
   908  06B6                     u271:
   909  06B6  2E9A               	goto	l853
   910  06B7                     u270:
   911  06B7                     l861:
   912  06B7  0873               	movf	___lwmod@dividend+1,w
   913  06B8  00F1               	movwf	?___lwmod+1
   914  06B9  0872               	movf	___lwmod@dividend,w
   915  06BA  00F0               	movwf	?___lwmod
   916  06BB                     l443:
   917  06BB  0008               	return
   918  06BC                     __end_of___lwmod:
   919                           
   920                           	psect	text3
   921  06BC                     __ptext3:	
   922 ;; *************** function ___lwdiv *****************
   923 ;; Defined at:
   924 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  divisor         2    0[COMMON] unsigned int 
   927 ;;  dividend        2    2[COMMON] unsigned int 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  quotient        2    5[COMMON] unsigned int 
   930 ;;  counter         1    7[COMMON] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2    0[COMMON] unsigned int 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         4       0       0       0       0
   941 ;;      Locals:         3       0       0       0       0
   942 ;;      Temps:          1       0       0       0       0
   943 ;;      Totals:         8       0       0       0       0
   944 ;;Total ram usage:        8 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_Lcd_Display
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function ___lwdiv
   955  06BC                     ___lwdiv:
   956  06BC                     l817:	
   957                           ;incstack = 0
   958                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   959                           
   960  06BC  01F5               	clrf	___lwdiv@quotient
   961  06BD  01F6               	clrf	___lwdiv@quotient+1
   962  06BE                     l819:
   963  06BE  0870               	movf	___lwdiv@divisor,w
   964  06BF  0471               	iorwf	___lwdiv@divisor+1,w
   965  06C0  1903               	btfsc	3,2
   966  06C1  2EC3               	goto	u151
   967  06C2  2EC4               	goto	u150
   968  06C3                     u151:
   969  06C3  2EFB               	goto	l839
   970  06C4                     u150:
   971  06C4                     l821:
   972  06C4  01F7               	clrf	___lwdiv@counter
   973  06C5  0AF7               	incf	___lwdiv@counter,f
   974  06C6  2ED2               	goto	l827
   975  06C7                     l823:
   976  06C7  3001               	movlw	1
   977  06C8                     u165:
   978  06C8  1003               	clrc
   979  06C9  0DF0               	rlf	___lwdiv@divisor,f
   980  06CA  0DF1               	rlf	___lwdiv@divisor+1,f
   981  06CB  3EFF               	addlw	-1
   982  06CC  1D03               	skipz
   983  06CD  2EC8               	goto	u165
   984  06CE                     l825:
   985  06CE  3001               	movlw	1
   986  06CF  00F4               	movwf	??___lwdiv
   987  06D0  0874               	movf	??___lwdiv,w
   988  06D1  07F7               	addwf	___lwdiv@counter,f
   989  06D2                     l827:
   990  06D2  1FF1               	btfss	___lwdiv@divisor+1,7
   991  06D3  2ED5               	goto	u171
   992  06D4  2ED6               	goto	u170
   993  06D5                     u171:
   994  06D5  2EC7               	goto	l823
   995  06D6                     u170:
   996  06D6                     l829:
   997  06D6  3001               	movlw	1
   998  06D7                     u185:
   999  06D7  1003               	clrc
  1000  06D8  0DF5               	rlf	___lwdiv@quotient,f
  1001  06D9  0DF6               	rlf	___lwdiv@quotient+1,f
  1002  06DA  3EFF               	addlw	-1
  1003  06DB  1D03               	skipz
  1004  06DC  2ED7               	goto	u185
  1005  06DD  0871               	movf	___lwdiv@divisor+1,w
  1006  06DE  0273               	subwf	___lwdiv@dividend+1,w
  1007  06DF  1D03               	skipz
  1008  06E0  2EE3               	goto	u195
  1009  06E1  0870               	movf	___lwdiv@divisor,w
  1010  06E2  0272               	subwf	___lwdiv@dividend,w
  1011  06E3                     u195:
  1012  06E3  1C03               	skipc
  1013  06E4  2EE6               	goto	u191
  1014  06E5  2EE7               	goto	u190
  1015  06E6                     u191:
  1016  06E6  2EEE               	goto	l835
  1017  06E7                     u190:
  1018  06E7                     l831:
  1019  06E7  0870               	movf	___lwdiv@divisor,w
  1020  06E8  02F2               	subwf	___lwdiv@dividend,f
  1021  06E9  0871               	movf	___lwdiv@divisor+1,w
  1022  06EA  1C03               	skipc
  1023  06EB  03F3               	decf	___lwdiv@dividend+1,f
  1024  06EC  02F3               	subwf	___lwdiv@dividend+1,f
  1025  06ED                     l833:
  1026  06ED  1475               	bsf	___lwdiv@quotient,0
  1027  06EE                     l835:
  1028  06EE  3001               	movlw	1
  1029  06EF                     u205:
  1030  06EF  1003               	clrc
  1031  06F0  0CF1               	rrf	___lwdiv@divisor+1,f
  1032  06F1  0CF0               	rrf	___lwdiv@divisor,f
  1033  06F2  3EFF               	addlw	-1
  1034  06F3  1D03               	skipz
  1035  06F4  2EEF               	goto	u205
  1036  06F5                     l837:
  1037  06F5  3001               	movlw	1
  1038  06F6  02F7               	subwf	___lwdiv@counter,f
  1039  06F7  1D03               	btfss	3,2
  1040  06F8  2EFA               	goto	u211
  1041  06F9  2EFB               	goto	u210
  1042  06FA                     u211:
  1043  06FA  2ED6               	goto	l829
  1044  06FB                     u210:
  1045  06FB                     l839:
  1046  06FB  0876               	movf	___lwdiv@quotient+1,w
  1047  06FC  00F1               	movwf	?___lwdiv+1
  1048  06FD  0875               	movf	___lwdiv@quotient,w
  1049  06FE  00F0               	movwf	?___lwdiv
  1050  06FF                     l433:
  1051  06FF  0008               	return
  1052  0700                     __end_of___lwdiv:
  1053                           
  1054                           	psect	text4
  1055  0607                     __ptext4:	
  1056 ;; *************** function _HangTram *****************
  1057 ;; Defined at:
  1058 ;;		line 87 in file "newmain.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  hangtram        2    0[COMMON] int 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2    0[COMMON] int 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         2       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          1       0       0       0       0
  1075 ;;      Totals:         3       0       0       0       0
  1076 ;;Total ram usage:        3 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_Lcd_Display
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _HangTram
  1087  0607                     _HangTram:
  1088  0607                     l805:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _HangTram: [wreg-fsr0h+status,2+status,0]
  1091                           
  1092                           
  1093                           ;newmain.c: 87: int HangTram(int hangtram);newmain.c: 88: {;newmain.c: 89:     PORTD = 0
      +                          xff;
  1094  0607  30FF               	movlw	255
  1095  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1097  060A  0088               	movwf	8	;volatile
  1098  060B                     l807:
  1099                           
  1100                           ;newmain.c: 90:     PORTDbits.RD1 = 0;
  1101  060B  1088               	bcf	8,1	;volatile
  1102  060C                     l809:
  1103                           
  1104                           ;newmain.c: 91:     PORTC = ledcode[hangtram];
  1105  060C  0870               	movf	HangTram@hangtram,w
  1106  060D  00F2               	movwf	??_HangTram
  1107  060E  0772               	addwf	??_HangTram,w
  1108  060F  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1109  0610  0084               	movwf	4
  1110  0611  1383               	bcf	3,7	;select IRP bank0
  1111  0612  0800               	movf	0,w
  1112  0613  0087               	movwf	7	;volatile
  1113  0614                     l58:
  1114  0614  0008               	return
  1115  0615                     __end_of_HangTram:
  1116                           
  1117                           	psect	text5
  1118  05F9                     __ptext5:	
  1119 ;; *************** function _HangNghin *****************
  1120 ;; Defined at:
  1121 ;;		line 94 in file "newmain.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  hangnghin       2    0[COMMON] int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  2    0[COMMON] int 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         2       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          1       0       0       0       0
  1138 ;;      Totals:         3       0       0       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_Lcd_Display
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _HangNghin
  1150  05F9                     _HangNghin:
  1151  05F9                     l811:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _HangNghin: [wreg-fsr0h+status,2+status,0]
  1154                           
  1155                           
  1156                           ;newmain.c: 94: int HangNghin(int hangnghin);newmain.c: 95: {;newmain.c: 96:     PORTD =
      +                           0xff;
  1157  05F9  30FF               	movlw	255
  1158  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1159  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1160  05FC  0088               	movwf	8	;volatile
  1161  05FD                     l813:
  1162                           
  1163                           ;newmain.c: 97:     PORTDbits.RD0 = 0;
  1164  05FD  1008               	bcf	8,0	;volatile
  1165  05FE                     l815:
  1166                           
  1167                           ;newmain.c: 98:     PORTC = ledcode[hangnghin];
  1168  05FE  0870               	movf	HangNghin@hangnghin,w
  1169  05FF  00F2               	movwf	??_HangNghin
  1170  0600  0772               	addwf	??_HangNghin,w
  1171  0601  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1172  0602  0084               	movwf	4
  1173  0603  1383               	bcf	3,7	;select IRP bank0
  1174  0604  0800               	movf	0,w
  1175  0605  0087               	movwf	7	;volatile
  1176  0606                     l61:
  1177  0606  0008               	return
  1178  0607                     __end_of_HangNghin:
  1179                           
  1180                           	psect	text6
  1181  05EB                     __ptext6:	
  1182 ;; *************** function _HangDV *****************
  1183 ;; Defined at:
  1184 ;;		line 73 in file "newmain.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  hangdv          2    0[COMMON] int 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2    0[COMMON] int 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         2       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          1       0       0       0       0
  1201 ;;      Totals:         3       0       0       0       0
  1202 ;;Total ram usage:        3 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_Lcd_Display
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _HangDV
  1213  05EB                     _HangDV:
  1214  05EB                     l793:	
  1215                           ;incstack = 0
  1216                           ; Regs used in _HangDV: [wreg-fsr0h+status,2+status,0]
  1217                           
  1218                           
  1219                           ;newmain.c: 73: int HangDV(int hangdv);newmain.c: 74: {;newmain.c: 75:     PORTD = 0xff;
  1220  05EB  30FF               	movlw	255
  1221  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1222  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1223  05EE  0088               	movwf	8	;volatile
  1224  05EF                     l795:
  1225                           
  1226                           ;newmain.c: 76:     PORTDbits.RD3 = 0;
  1227  05EF  1188               	bcf	8,3	;volatile
  1228  05F0                     l797:
  1229                           
  1230                           ;newmain.c: 77:     PORTC = ledcode[hangdv];
  1231  05F0  0870               	movf	HangDV@hangdv,w
  1232  05F1  00F2               	movwf	??_HangDV
  1233  05F2  0772               	addwf	??_HangDV,w
  1234  05F3  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1235  05F4  0084               	movwf	4
  1236  05F5  1383               	bcf	3,7	;select IRP bank0
  1237  05F6  0800               	movf	0,w
  1238  05F7  0087               	movwf	7	;volatile
  1239  05F8                     l52:
  1240  05F8  0008               	return
  1241  05F9                     __end_of_HangDV:
  1242                           
  1243                           	psect	text7
  1244  05DD                     __ptext7:	
  1245 ;; *************** function _HangChuc *****************
  1246 ;; Defined at:
  1247 ;;		line 80 in file "newmain.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  hangchuc        2    0[COMMON] int 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  2    0[COMMON] int 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         2       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          1       0       0       0       0
  1264 ;;      Totals:         3       0       0       0       0
  1265 ;;Total ram usage:        3 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_Lcd_Display
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           
  1275                           ;psect for function _HangChuc
  1276  05DD                     _HangChuc:
  1277  05DD                     l799:	
  1278                           ;incstack = 0
  1279                           ; Regs used in _HangChuc: [wreg-fsr0h+status,2+status,0]
  1280                           
  1281                           
  1282                           ;newmain.c: 80: int HangChuc(int hangchuc);newmain.c: 81: {;newmain.c: 82:     PORTD = 0
      +                          xff;
  1283  05DD  30FF               	movlw	255
  1284  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1285  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1286  05E0  0088               	movwf	8	;volatile
  1287  05E1                     l801:
  1288                           
  1289                           ;newmain.c: 83:     PORTDbits.RD2 = 0;
  1290  05E1  1108               	bcf	8,2	;volatile
  1291  05E2                     l803:
  1292                           
  1293                           ;newmain.c: 84:     PORTC = ledcode[hangchuc];
  1294  05E2  0870               	movf	HangChuc@hangchuc,w
  1295  05E3  00F2               	movwf	??_HangChuc
  1296  05E4  0772               	addwf	??_HangChuc,w
  1297  05E5  3E20               	addlw	(low (_ledcode| 0))& (0+255)
  1298  05E6  0084               	movwf	4
  1299  05E7  1383               	bcf	3,7	;select IRP bank0
  1300  05E8  0800               	movf	0,w
  1301  05E9  0087               	movwf	7	;volatile
  1302  05EA                     l55:
  1303  05EA  0008               	return
  1304  05EB                     __end_of_HangChuc:
  1305                           
  1306                           	psect	text8
  1307  0628                     __ptext8:	
  1308 ;; *************** function _AN0_Config *****************
  1309 ;; Defined at:
  1310 ;;		line 101 in file "newmain.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0
  1327 ;;      Totals:         1       0       0       0       0
  1328 ;;Total ram usage:        1 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _AN0_Config
  1339  0628                     _AN0_Config:
  1340  0628                     l897:	
  1341                           ;incstack = 0
  1342                           ; Regs used in _AN0_Config: [wreg+status,2+status,0]
  1343                           
  1344                           
  1345                           ;newmain.c: 104:     ADCON0bits.ADON = 1;
  1346  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1348  062A  141F               	bsf	31,0	;volatile
  1349  062B                     l899:
  1350                           
  1351                           ;newmain.c: 106:     ADCON0 &= ~(1<<3);
  1352  062B  30F7               	movlw	247
  1353  062C  00F0               	movwf	??_AN0_Config
  1354  062D  0870               	movf	??_AN0_Config,w
  1355  062E  059F               	andwf	31,f	;volatile
  1356                           
  1357                           ;newmain.c: 107:     ADCON0 &= ~(1<<4);
  1358  062F  30EF               	movlw	239
  1359  0630  00F0               	movwf	??_AN0_Config
  1360  0631  0870               	movf	??_AN0_Config,w
  1361  0632  059F               	andwf	31,f	;volatile
  1362                           
  1363                           ;newmain.c: 108:     ADCON0 &= ~(1<<5);
  1364  0633  30DF               	movlw	223
  1365  0634  00F0               	movwf	??_AN0_Config
  1366  0635  0870               	movf	??_AN0_Config,w
  1367  0636  059F               	andwf	31,f	;volatile
  1368  0637                     l901:
  1369                           
  1370                           ;newmain.c: 110:     ADCON0 |= 1<<2;
  1371  0637  151F               	bsf	31,2	;volatile
  1372  0638                     l903:
  1373                           
  1374                           ;newmain.c: 112:     ADCON1 = 0;
  1375  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1377  063A  019F               	clrf	31	;volatile
  1378  063B                     l64:
  1379  063B  0008               	return
  1380  063C                     __end_of_AN0_Config:
  1381  007E                     btemp	set	126	;btemp
  1382  007E                     wtemp0	set	126
  1383                           
  1384                           	psect	config
  1385                           
  1386                           ;Config register CONFIG @ 0x2007
  1387                           ;	Oscillator Selection bits
  1388                           ;	FOSC = EXTRC, RC oscillator
  1389                           ;	Watchdog Timer Enable bit
  1390                           ;	WDTE = OFF, WDT disabled
  1391                           ;	Power-up Timer Enable bit
  1392                           ;	PWRTE = OFF, PWRT disabled
  1393                           ;	Brown-out Reset Enable bit
  1394                           ;	BOREN = OFF, BOR disabled
  1395                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1396                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1397                           ;	Data EEPROM Memory Code Protection bit
  1398                           ;	CPD = OFF, Data EEPROM code protection off
  1399                           ;	Flash Program Memory Write Enable bits
  1400                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1401                           ;	In-Circuit Debugger Mode bit
  1402                           ;	DEBUG = 0x1, unprogrammed default
  1403                           ;	Flash Program Memory Code Protection bit
  1404                           ;	CP = OFF, Code protection off
  1405  2007                     	org	8199
  1406  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_Display
    _Lcd_Display->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1897
                         _AN0_Config
                        _Lcd_Display
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display                                          4     2      2    1897
                                              8 COMMON     4     2      2
                           _HangChuc
                             _HangDV
                          _HangNghin
                           _HangTram
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _HangTram                                             3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _HangNghin                                            3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _HangDV                                               3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _HangChuc                                             3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _AN0_Config                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AN0_Config
   _Lcd_Display
     _HangChuc
     _HangDV
     _HangNghin
     _HangTram
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 16 00:41:25 2021

                      pc 0002                       l52 05F8                       l61 0606  
                     l70 0667                       l55 05EA                       l64 063B  
                     l49 07E1                       l58 0614                       fsr 0004  
    __size_of_AN0_Config 0014                      l433 06FF                      l443 06BB  
                    l801 05E1                      l803 05E2                      l811 05F9  
                    l901 0637                      l813 05FD                      l805 0607  
                    l821 06C4                      l903 0638                      l815 05FE  
                    l807 060B                      l831 06E7                      l823 06C7  
                    l911 065F                      l809 060C                      l833 06ED  
                    l825 06CE                      l817 06BC                      l913 0662  
                    l905 0650                      l835 06EE                      l827 06D2  
                    l819 06BE                      l851 0696                      l843 0682  
                    l915 066D                      l907 0658                      l837 06F5  
                    l829 06D6                      l853 069A                      l845 0688  
                    l861 06B7                      l917 0675                      l909 065C  
                    l839 06FB                      l855 06A4                      l847 068B  
                    l871 0730                      l793 05EB                      l857 06AA  
                    l849 0692                      l881 0793                      l873 0743  
                    l865 0700                      l795 05EF                      l859 06B1  
                    l891 07C4                      l883 079C                      l875 0758  
                    l867 0708                      l797 05F0                      l893 07CD  
                    l885 07A5                      l877 076B                      l869 071B  
                    l799 05DD                      l895 07D8                      l887 07B0  
                    l879 0780                      l897 0628                      l889 07B9  
                    l899 062B                      u210 06FB                      u211 06FA  
                    u220 0688                      u205 06EF                      u221 0687  
                    u150 06C4                      u151 06C3                      u240 069A  
                    u241 0699                      u170 06D6                      u250 06A4  
                    u171 06D5                      u251 06A3                      u235 068C  
                    u307 07B4                      u165 06C8                      u317 07C8  
                    u190 06E7                      u270 06B7                      u191 06E6  
                    u271 06B6                      u255 06A0                      u327 07DC  
                    u280 066D                      u185 06D7                      u265 06AB  
                    u281 066C                      u195 06E3                      u297 07A0  
                    _Vol 0034                      fsr0 0004                      indf 0000  
    __end_of_Lcd_Display 07E2                     _main 0650                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 0700  
        __end_of___lwmod 06BC       HangNghin@hangnghin 0070                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088         HangTram@hangtram 0070                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_HangChuc 05EB  
       __end_of_HangTram 0615          __initialization 07E2             __end_of_main 0682  
            _Lcd_Display 0700       __size_of_HangNghin 000E                   ??_main 007C  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E             ??_AN0_Config 0070                   _HangDV 05EB  
                 _hangdv 0036                ??___lwdiv 0074                ??___lwmod 0074  
     __end_of_AN0_Config 063C  __end_of__initialization 07FC        __end_of_HangNghin 0607  
         __pcstackCOMMON 0070             __pidataBANK0 063C                ?_HangChuc 0070  
              ?_HangTram 0070               __pbssBANK0 0034                  ?_HangDV 0070  
             __pmaintext 0650               ??_HangChuc 0072               ??_HangTram 0072  
        __size_of_HangDV 000E                  ___lwdiv 06BC                  ___lwmod 0682  
           ?_Lcd_Display 0078                  __ptext1 0700                  __ptext2 0682  
                __ptext3 06BC                  __ptext4 0607                  __ptext5 05F9  
                __ptext6 05EB                  __ptext7 05DD                  __ptext8 0628  
                _ledcode 0020     end_of_initialization 07FC                _PORTDbits 0008  
         __end_of_HangDV 05F9                _HangNghin 05F9             HangDV@hangdv 0070  
    start_initialization 07E2        __size_of_HangChuc 000E        __size_of_HangTram 000E  
               ??_HangDV 0072               ?_HangNghin 0070               init_fetch0 0615  
            __pdataBANK0 0020     __size_of_Lcd_Display 00E2              __pbssCOMMON 007C  
              ___latbits 0002         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
              _hangnghin 003C                 ?___lwmod 0070         ___lwdiv@quotient 0075  
              _tempCTemp 007C              ??_HangNghin 0072               _ADCON0bits 001F  
               _HangChuc 05DD                 _HangTram 0607               _AN0_Config 0628  
       __size_of___lwdiv 0044         __size_of___lwmod 003A          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 _hangchuc 0038                 _hangtram 003A  
          __size_of_main 0032         HangChuc@hangchuc 0070                 init_ram0 0619  
            ?_AN0_Config 0070         ___lwmod@dividend 0072            ??_Lcd_Display 007A  
         Lcd_Display@Vol 0078          ___lwmod@divisor 0070          ___lwmod@counter 0075  
