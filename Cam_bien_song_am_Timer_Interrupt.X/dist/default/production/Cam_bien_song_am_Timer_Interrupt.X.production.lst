

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 15 00:30:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _T1CON	set	4045
    53  0000                     _PORTBbits	set	3969
    54  0000                     _TRISBbits	set	3987
    55  0000                     _T1CONbits	set	4045
    56  0000                     _INTCON2bits	set	4081
    57  0000                     _INTCONbits	set	4082
    58                           
    59                           ; #config settings
    60                           
    61                           	psect	cinit
    62  000034                     __pcinit:
    63                           	callstack 0
    64  000034                     start_initialization:
    65                           	callstack 0
    66  000034                     __initialization:
    67                           	callstack 0
    68                           
    69                           ; Clear objects allocated to COMRAM (4 bytes)
    70  000034  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    71  000036  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    72  000038  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    73  00003A  6A01               	clrf	__pbssCOMRAM& (0+255),c
    74  00003C                     end_of_initialization:
    75                           	callstack 0
    76  00003C                     __end_of__initialization:
    77                           	callstack 0
    78  00003C  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    79  00003E  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    80  000040  0100               	movlb	0
    81  000042  EF09  F000         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	bssCOMRAM
    84  000001                     __pbssCOMRAM:
    85                           	callstack 0
    86  000001                     _distance:
    87                           	callstack 0
    88  000001                     	ds	2
    89  000003                     _time:
    90                           	callstack 0
    91  000003                     	ds	2
    92                           
    93                           	psect	cstackCOMRAM
    94  000005                     __pcstackCOMRAM:
    95                           	callstack 0
    96  000005                     ??_main:
    97                           
    98                           ; 1 bytes @ 0x0
    99  000005                     	ds	1
   100                           
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 109 in file "newmain.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, status,2, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : 0/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   120 ;;      Params:         0       0       0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0       0       0
   122 ;;      Temps:          1       0       0       0       0       0       0
   123 ;;      Totals:         1       0       0       0       0       0       0
   124 ;;Total ram usage:        1 bytes
   125 ;; Hardware stack levels required when called: 2
   126 ;; This function calls:
   127 ;;		_Interrupt1_Config
   128 ;; This function is called by:
   129 ;;		Startup code after reset
   130 ;; This function uses a non-reentrant model
   131 ;;
   132                           
   133                           	psect	text0
   134  000012                     __ptext0:
   135                           	callstack 0
   136  000012                     _main:
   137                           	callstack 29
   138  000012                     
   139                           ;newmain.c: 111:     TRISBbits.RB0 = 0;
   140  000012  9093               	bcf	147,0,c	;volatile
   141                           
   142                           ;newmain.c: 112:     TRISBbits.RB1 = 1;
   143  000014  8293               	bsf	147,1,c	;volatile
   144                           
   145                           ;newmain.c: 113:     PORTBbits.RB0 = 1;
   146  000016  8081               	bsf	129,0,c	;volatile
   147  000018                     
   148                           ;newmain.c: 114:     _delay((unsigned long)((15)*(4000000/4000.0)));
   149  000018  0E14               	movlw	20
   150  00001A  6E05               	movwf	??_main^0,c
   151  00001C  0E7A               	movlw	122
   152  00001E                     u17:
   153  00001E  2EE8               	decfsz	wreg,f,c
   154  000020  D7FE               	bra	u17
   155  000022  2E05               	decfsz	??_main^0,f,c
   156  000024  D7FC               	bra	u17
   157  000026  9281               	bcf	129,1,c	;volatile
   158  000028                     
   159                           ;newmain.c: 116:     T1CON = 0x49;
   160  000028  0E49               	movlw	73
   161  00002A  6ECD               	movwf	205,c	;volatile
   162  00002C                     
   163                           ;newmain.c: 117:     Interrupt1_Config();
   164  00002C  EC23  F000         	call	_Interrupt1_Config	;wreg free
   165  000030  EF07  F000         	goto	start
   166  000034                     __end_of_main:
   167                           	callstack 0
   168                           
   169 ;; *************** function _Interrupt1_Config *****************
   170 ;; Defined at:
   171 ;;		line 96 in file "newmain.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;		None
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		None
   180 ;; Tracked objects:
   181 ;;		On entry : 0/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   185 ;;      Params:         0       0       0       0       0       0       0
   186 ;;      Locals:         0       0       0       0       0       0       0
   187 ;;      Temps:          0       0       0       0       0       0       0
   188 ;;      Totals:         0       0       0       0       0       0       0
   189 ;;Total ram usage:        0 bytes
   190 ;; Hardware stack levels used: 1
   191 ;; Hardware stack levels required when called: 1
   192 ;; This function calls:
   193 ;;		Nothing
   194 ;; This function is called by:
   195 ;;		_main
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           	psect	text1
   200  000046                     __ptext1:
   201                           	callstack 0
   202  000046                     _Interrupt1_Config:
   203                           	callstack 29
   204  000046                     
   205                           ;newmain.c: 98:     INTCONbits.GIE = 1;
   206  000046  8EF2               	bsf	242,7,c	;volatile
   207                           
   208                           ;newmain.c: 99:     INTCONbits.INT0IE = 1;
   209  000048  88F2               	bsf	242,4,c	;volatile
   210                           
   211                           ;newmain.c: 100:     INTCONbits.INT0F = 0;
   212  00004A  92F2               	bcf	242,1,c	;volatile
   213                           
   214                           ;newmain.c: 101:     INTCON2bits.INTEDG1 = 0;
   215  00004C  9AF1               	bcf	241,5,c	;volatile
   216  00004E  0012               	return		;funcret
   217  000050                     __end_of_Interrupt1_Config:
   218                           	callstack 0
   219                           
   220 ;; *************** function _funtion *****************
   221 ;; Defined at:
   222 ;;		line 104 in file "newmain.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		None
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         0       0       0       0       0       0       0
   237 ;;      Locals:         0       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0
   239 ;;      Totals:         0       0       0       0       0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		Interrupt level 2
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	intcode
   250  000008                     __pintcode:
   251                           	callstack 0
   252  000008                     _funtion:
   253                           	callstack 29
   254                           
   255                           ;incstack = 0
   256  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   257  00000A  ED28  F000         	call	int_func,f	;refresh shadow registers
   258                           
   259                           	psect	intcode_body
   260  000050                     __pintcode_body:
   261                           	callstack 29
   262  000050                     int_func:
   263                           	callstack 29
   264  000050  0006               	pop		; remove dummy address from shadow register refresh
   265  000052                     
   266                           ;newmain.c: 106:     T1CONbits.TMR1ON = 0;
   267  000052  90CD               	bcf	205,0,c	;volatile
   268  000054  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  000056  0011               	retfie		f
   270  000058                     __end_of_funtion:
   271                           	callstack 0
   272  0000                     
   273                           	psect	rparam
   274  0000                     
   275                           	psect	temp
   276  000006                     btemp:
   277                           	callstack 0
   278  000006                     	ds	1
   279  0000                     int$flags	set	btemp
   280  0000                     wtemp8	set	btemp+1
   281  0000                     ttemp5	set	btemp+1
   282  0000                     ttemp6	set	btemp+4
   283  0000                     ttemp7	set	btemp+8
   284                           
   285                           	psect	idloc
   286                           
   287                           ;Config register IDLOC0 @ 0x200000
   288                           ;	unspecified, using default values
   289  200000                     	org	2097152
   290  200000  FF                 	db	255
   291                           
   292                           ;Config register IDLOC1 @ 0x200001
   293                           ;	unspecified, using default values
   294  200001                     	org	2097153
   295  200001  FF                 	db	255
   296                           
   297                           ;Config register IDLOC2 @ 0x200002
   298                           ;	unspecified, using default values
   299  200002                     	org	2097154
   300  200002  FF                 	db	255
   301                           
   302                           ;Config register IDLOC3 @ 0x200003
   303                           ;	unspecified, using default values
   304  200003                     	org	2097155
   305  200003  FF                 	db	255
   306                           
   307                           ;Config register IDLOC4 @ 0x200004
   308                           ;	unspecified, using default values
   309  200004                     	org	2097156
   310  200004  FF                 	db	255
   311                           
   312                           ;Config register IDLOC5 @ 0x200005
   313                           ;	unspecified, using default values
   314  200005                     	org	2097157
   315  200005  FF                 	db	255
   316                           
   317                           ;Config register IDLOC6 @ 0x200006
   318                           ;	unspecified, using default values
   319  200006                     	org	2097158
   320  200006  FF                 	db	255
   321                           
   322                           ;Config register IDLOC7 @ 0x200007
   323                           ;	unspecified, using default values
   324  200007                     	org	2097159
   325  200007  FF                 	db	255
   326                           
   327                           	psect	config
   328                           
   329                           ; Padding undefined space
   330  300000                     	org	3145728
   331  300000  FF                 	db	255
   332                           
   333                           ;Config register CONFIG1H @ 0x300001
   334                           ;	Oscillator Selection bits
   335                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
   336                           ;	Fail-Safe Clock Monitor Enable bit
   337                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   338                           ;	Internal/External Oscillator Switchover bit
   339                           ;	IESO = OFF, Oscillator Switchover mode disabled
   340  300001                     	org	3145729
   341  300001  07                 	db	7
   342                           
   343                           ;Config register CONFIG2L @ 0x300002
   344                           ;	Power-up Timer Enable bit
   345                           ;	PWRT = OFF, PWRT disabled
   346                           ;	Brown-out Reset Enable bits
   347                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   348                           ;	Brown Out Reset Voltage bits
   349                           ;	BORV = 3, Minimum setting
   350  300002                     	org	3145730
   351  300002  1F                 	db	31
   352                           
   353                           ;Config register CONFIG2H @ 0x300003
   354                           ;	Watchdog Timer Enable bit
   355                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   356                           ;	Watchdog Timer Postscale Select bits
   357                           ;	WDTPS = 32768, 1:32768
   358  300003                     	org	3145731
   359  300003  1E                 	db	30
   360                           
   361                           ; Padding undefined space
   362  300004                     	org	3145732
   363  300004  FF                 	db	255
   364                           
   365                           ;Config register CONFIG3H @ 0x300005
   366                           ;	CCP2 MUX bit
   367                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   368                           ;	PORTB A/D Enable bit
   369                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   370                           ;	Low-Power Timer1 Oscillator Enable bit
   371                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   372                           ;	MCLR Pin Enable bit
   373                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   374  300005                     	org	3145733
   375  300005  01                 	db	1
   376                           
   377                           ;Config register CONFIG4L @ 0x300006
   378                           ;	Stack Full/Underflow Reset Enable bit
   379                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   380                           ;	Single-Supply ICSP Enable bit
   381                           ;	LVP = OFF, Single-Supply ICSP disabled
   382                           ;	Extended Instruction Set Enable bit
   383                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   384                           ;	Background Debugger Enable bit
   385                           ;	DEBUG = 0x1, unprogrammed default
   386  300006                     	org	3145734
   387  300006  80                 	db	128
   388                           
   389                           ; Padding undefined space
   390  300007                     	org	3145735
   391  300007  FF                 	db	255
   392                           
   393                           ;Config register CONFIG5L @ 0x300008
   394                           ;	Code Protection bit
   395                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   396                           ;	Code Protection bit
   397                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   398                           ;	Code Protection bit
   399                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   400                           ;	Code Protection bit
   401                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   402  300008                     	org	3145736
   403  300008  0F                 	db	15
   404                           
   405                           ;Config register CONFIG5H @ 0x300009
   406                           ;	Boot Block Code Protection bit
   407                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   408                           ;	Data EEPROM Code Protection bit
   409                           ;	CPD = OFF, Data EEPROM not code-protected
   410  300009                     	org	3145737
   411  300009  C0                 	db	192
   412                           
   413                           ;Config register CONFIG6L @ 0x30000A
   414                           ;	Write Protection bit
   415                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   416                           ;	Write Protection bit
   417                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   418                           ;	Write Protection bit
   419                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   420                           ;	Write Protection bit
   421                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   422  30000A                     	org	3145738
   423  30000A  0F                 	db	15
   424                           
   425                           ;Config register CONFIG6H @ 0x30000B
   426                           ;	Configuration Register Write Protection bit
   427                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   428                           ;	Boot Block Write Protection bit
   429                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   430                           ;	Data EEPROM Write Protection bit
   431                           ;	WRTD = OFF, Data EEPROM not write-protected
   432  30000B                     	org	3145739
   433  30000B  E0                 	db	224
   434                           
   435                           ;Config register CONFIG7L @ 0x30000C
   436                           ;	Table Read Protection bit
   437                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   438                           ;	Table Read Protection bit
   439                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   440                           ;	Table Read Protection bit
   441                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   442                           ;	Table Read Protection bit
   443                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   444  30000C                     	org	3145740
   445  30000C  0F                 	db	15
   446                           
   447                           ;Config register CONFIG7H @ 0x30000D
   448                           ;	Boot Block Table Read Protection bit
   449                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   450  30000D                     	org	3145741
   451  30000D  40                 	db	64
   452                           tosu	equ	0xFFF
   453                           tosh	equ	0xFFE
   454                           tosl	equ	0xFFD
   455                           stkptr	equ	0xFFC
   456                           pclatu	equ	0xFFB
   457                           pclath	equ	0xFFA
   458                           pcl	equ	0xFF9
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           prodh	equ	0xFF4
   464                           prodl	equ	0xFF3
   465                           indf0	equ	0xFEF
   466                           postinc0	equ	0xFEE
   467                           postdec0	equ	0xFED
   468                           preinc0	equ	0xFEC
   469                           plusw0	equ	0xFEB
   470                           fsr0h	equ	0xFEA
   471                           fsr0l	equ	0xFE9
   472                           wreg	equ	0xFE8
   473                           indf1	equ	0xFE7
   474                           postinc1	equ	0xFE6
   475                           postdec1	equ	0xFE5
   476                           preinc1	equ	0xFE4
   477                           plusw1	equ	0xFE3
   478                           fsr1h	equ	0xFE2
   479                           fsr1l	equ	0xFE1
   480                           bsr	equ	0xFE0
   481                           indf2	equ	0xFDF
   482                           postinc2	equ	0xFDE
   483                           postdec2	equ	0xFDD
   484                           preinc2	equ	0xFDC
   485                           plusw2	equ	0xFDB
   486                           fsr2h	equ	0xFDA
   487                           fsr2l	equ	0xFD9
   488                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1       5
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _funtion in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _funtion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _funtion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _funtion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _funtion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _funtion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _funtion in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                  _Interrupt1_Config
 ---------------------------------------------------------------------------------
 (1) _Interrupt1_Config                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _funtion                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt1_Config

 _funtion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1       5       1        4.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      15        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 15 00:30:15 2021

                        l21 004E                          l31 0026                          l34 0030  
                        u17 001E                         l710 0046                         l720 002C  
                       l714 0012                         l716 0018                         l718 0028  
                       wreg 000FE8                        i2l26 0054                        _main 0012  
                      _time 0003                        btemp 0006                        start 000E  
              ___param_bank 000000                       ?_main 0005                       _T1CON 000FCD  
                     i2l712 0052  __size_of_Interrupt1_Config 000A             __end_of_funtion 0058  
                     ttemp5 0007                       ttemp6 000A                       ttemp7 000E  
                     wtemp8 0007             __initialization 0034                __end_of_main 0034  
                    ??_main 0005               __activetblptr 000000                      isa$std 000001  
                 ??_funtion 0005                  __accesstop 0080     __end_of__initialization 003C  
             ___rparam_used 000001              __pcstackCOMRAM 0005                     __Hparam 0000  
                   __Lparam 0000                     __pcinit 0034                     __ramtop 0600  
                   __ptext0 0012                     __ptext1 0046                   _T1CONbits 000FCD  
                   _funtion 0008              __pintcode_body 0050        end_of_initialization 003C  
                   int_func 0050                   _PORTBbits 000F81                   _TRISBbits 000F93  
       start_initialization 0034                 __pbssCOMRAM 0001                   __pintcode 0008  
                  ?_funtion 0005                 _INTCON2bits 000FF1                    __Hrparam 0000  
                  __Lrparam 0000            __size_of_funtion 0050                    _distance 0001  
             __size_of_main 0022                    isa$xinst 000000                    int$flags 0006  
                _INTCONbits 000FF2           _Interrupt1_Config 0046          ?_Interrupt1_Config 0005  
                  intlevel2 0000         ??_Interrupt1_Config 0005   __end_of_Interrupt1_Config 0050  
